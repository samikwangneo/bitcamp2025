Total PDFs loaded: 38

================================================================================
Filename: CS_Honors_Requirements.pdf (Subtopic: Honors)
================================================================================

4/12/25, 2:51 AM Departmental Honors Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Departmental Honors Requirements
Eligibility
Graduating with honors requires a CS GPA ≥ 3.5, and an overall GPA ≥ 3.25. However, we encourage you to apply for honors if you have
taken (or are currently taking) CMSC 216 and 250, and have a CS GPA ≥ 3.3 and an overall GPA ≥ 3.2. Additionally, we encourage all
Banneker/Key scholars to apply at any time.
Your CS GPA is computed of only major courses (e.g., 131, 132, 216, 250), not special or non-major CMSC courses (100, 106, 198, 298).
You may remain in the honors program with satisfactory progress towards the honors program milestones below and maintenance of this
GPA. Satisfactory progress involves at least one honors-relevant activity in a calendar year.
Coursework
Students in the honors program are strongly encouraged to take 396H and are required to take a graduate course (or, barring that, a 300-
or 400-level H-version or honors option course). These requirements are described below:
396H: This is an overview of research in computer science with small projects, paper readings, and guest lectures by faculty,
graduate students, and honors students. We strongly recommend this course, as it will help introduce you to what research is, how
to do it, and what kinds of research is being done in our department. (Typically offered every semester.)
https://undergrad.cs.umd.edu/honors/requirements 1/54/12/25, 2:51 AM Departmental Honors Requirements | Undergraduate Computer Science at UMD
One of the following:
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(Preferred Option) A graduate "PhD. Qualifying" course, typically numbered 6xx or 7xx, but some 8xx courses count.
Qualifying courses are typically more challenging and structured graduate courses. 800-level qualifying courses are listed in
the graduate list of special topics courses (http://www.cs.umd.edu/grad/special-courses-status). Graduate courses may have
undergraduate prerequisites; contact the instructor before registering to confirm your preparation.
Honors option (https://www.honors.umd.edu/honorscourses.html) versions of 400-level courses. Honors option courses are
an extension to an existing course, in which a student may work with the professor to augment the course content in a one-on-
one setting. There is a procedure, consisting of a proposal that must be approved by the honors college, submitted by the
tenth day of class.
Junior-level 330H or 351H courses in programming languages or algorithms. These are rarely offered. For departmental
honors by university policy, 100- and 200-level honors courses do not count.
Senior-level 4xxH courses in specific areas. The department may offer "H-versions" of popular 400-level courses. Features of a
400-level H-version. (/node/44) Eligibility for an H-version is based on participation in the honors program, however, any
student with a 3.5 CS major GPA and 3.5 overall GPA may also enroll.
Research
The bulk of the CS Honors requirement is performing independent research. This can take place in multiple ways, including paid summer
internships and for research credit (CMSC 499). Earning credit to perform research is especially beneficial to students who have otherwise
packed schedules and cannot perform research in addition to a full courseload. To this end, the department offers CMSC 499, an
independent research course with your faculty mentor during which you will complete your honors thesis. That said, CMSC 499 credit is
not strictly required.
Honors Thesis
Your honors thesis is a document culminating your research. Although there can certainly be collaborative aspects to the work (little
research is performed totally independently nowadays), it should largely reflect your individual contributions. It should be formatted
using the ACM SIG style (http://www.acm.org/sigs/publications/proceedings-templates/), and should fit in 5 to 12 pages.
The honors thesis should include:
A statement of the problem being solved and its importance.
A description of the faults of prior approaches.
https://undergrad.cs.umd.edu/honors/requirements 2/54/12/25, 2:51 AM Departmental Honors Requirements | Undergraduate Computer Science at UMD
A description of the insight that solves the problem in a new way or shows that the problem can be solved.
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Sufficient technical contribution to warrant an honors thesis.
A conclusion section that restates the main contributions of the thesis and presents future work.
At least five academic references.
Individual Effort
A student's honors thesis must be the student's own work, not a collaborative group project with other students. Only collaborators who
act in an advisory capacity (providing edits, feedback, direction, suggestions, etc.) may be listed as coauthors.
The key ideas in the honors thesis should be largely the student's own. The problem may be specified by an advisor, and the methods to
try may be chosen by others. However, the bulk of the intellectual work to evaluate the ideas should be the student's own.
Group project reports may not serve as honors theses. (Gemstone, QUEST, DCC, and other University programs create group projects.)
However, a student may write up an individual contribution to a larger project, if that component is advised by CS faculty.
Group project documents, e.g., multi-author conference papers, are not allowed. Students participating in such a project may write up
their contributions as a separate, complete thesis document.
Incomplete documents will be rejected, whether caught by advisors or by the honors chair. For example, clear TODO items such as "TBA",
"XXX", "TODO" will be returned.
Exceptions
These requirements represent the path through the honors program that we expect most students to take. It is possible to substitute
similar experiences for the explicit milestones described here.
High Honors
High Honors are rarely given; the advisorʼs recommendation is necessary but not sufficient, and the honors chairs make the final decision.
High honors students have had exemplary grades and have typically done two projects or have had one published in a refereed
conference or journal.
https://undergrad.cs.umd.edu/honors/requirements 3/54/12/25, 2:51 AM Departmental Honors Requirements | Undergraduate Computer Science at UMD
Interested?
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Look at previous projects (/honors/projects) elsewhere on this site, apply (http://honors.cs.umd.edu/students/apply), browse the faq
(/honors/questions).
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/honors/requirements 4/54/12/25, 2:51 AM Departmental Honors Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/honors/requirements 5/5

================================================================================
Filename: CS_Honors_Intro.pdf (Subtopic: Honors)
================================================================================

4/12/25, 3:06 AM Departmental Honors | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Departmental Honors
Departmental Honors
The Computer Science Departmental Honors Program gives students the opportunity to perform research with CMSC professors and
faculty, and to take more advanced coursework at the honors and even graduate level. Find out more here
(https://www.cs.umd.edu/~dml/honors/what-is-cs-honors.pdf) about CS research (what is it?), CS honors (what does it entail?), and the
application process.
The Goals
Research. Faculty want to share the fun of research with talented students. We like solving problems that don't have known
solutions. We build prototypes, run experiments, make lots of graphs, prove theorems, write papers, and give talks.
Graduate School and Careers. We want you to be able to go to the best graduate schools. This often takes recommendation letters
by well-known faculty as well as published papers. Even if graduate school is not for you, the best employers also look for initiative
in tackling ambitious projects and challenging coursework.
https://undergrad.cs.umd.edu/node/38 1/34/12/25, 3:06 AM Departmental Honors | Undergraduate Computer Science at UMD
Interested?
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Read up about requirements (/honors/requirements) and projects (http://honors.cs.umd.edu/students/finished) elsewhere on this site,
apply (http://honors.cs.umd.edu/students/apply), or browse the faq (/honors/questions).
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/node/38 2/34/12/25, 3:06 AM Departmental Honors | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/node/38 3/3

================================================================================
Filename: CS_Honors_Questions.pdf (Subtopic: Honors)
================================================================================

4/12/25, 3:06 AM Departmental Honors Questions | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Departmental Honors Questions
These questions cover interactions with other programs, how the honors chairs think about substituting requirements, and what to do in
special circumstances.
Double-Counting:
Can a gemstone project be an honors project?
No. (If there is computer science research that you alone do within the project, advised by CS faculty, you may use that as an honors
project.)
Can a group project be an honors project?
Maybe; you will have to carve a component that is your own.
Can a project for industry or another department count?
Maybe, but your thesis still requires a CS faculty mentor.
Can an NSF REU (Research Experience for Undergraduates) project count?
Yes, it counts toward the structured research requirement, even if off-site. You'll still need an honors thesis approved by a CS faculty
mentor.
Can a graduate class I use for the BS/MS program count for honors?
Yes.
Can my honors thesis be used as a master's thesis?
https://undergrad.cs.umd.edu/honors/questions 1/44/12/25, 3:06 AM Departmental Honors Questions | Undergraduate Computer Science at UMD
No. The BS/MS interaction is as follows. Your honors thesis must be submitted before you graduate with your BS, which you will do before
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
the Master's. Ideally, you'll complete the honors thesis and oral defense before you've completed six 400- or graduate-level classes.
A Master's thesis should include substantially more content than an honors thesis. By completing the honors thesis early, there will be
time for substantial further development to the idea or a completely different project.
It is the responsibility of the Master's thesis advisor to determine that substantial additional work was completed. Since BS/MS students
must complete 6 credits of 799, the Masterʼs thesis should easily have much greater scope than the Honors thesis.
Substitutions
Can I take a graduate-level class instead of a 400-level "honors option" class?
Yes, in fact we strongly suggest you take graduate-level classes instead or honors-options 400s. You can count one MS-qualifying graduate-
level class as an area requirement.
I just can't take 396H since it conflicts with another class I really need. Can I take something else?
Only if this a hardship two years in a row. Convince the honors chairs. We'd like to know what classes we have to avoid conflicts with too.
You may be welcome to take the graduate version of the 396 class or attend a research group seminar regularly instead.
What if?
What if my grades falter senior year and I no longer qualify?
Then you had all the experience and benefits except for an annotation on your transcript. If you have already completed your honors
thesis and you've been too ambitious in course selection, you may petition for an exception. If you have not completed your honors thesis,
it may be better for you to focus on improving your grades.
What if I take an honors course but I'd rather be in a non-honors course?
Do your best. The courses may not share enough graded
work to allow any transfer.
What if I can't find an advisor?
Talk to the honors chairs, your academic advisors in the undergraduate
office, or your favorite faculty.
What if I'm a computer engineering major?
You can take CS honors classes if you like. ECE has its own honors program that you may be able to enroll in. You may also be able to
change your major.
https://undergrad.cs.umd.edu/honors/questions 2/44/12/25, 3:06 AM Departmental Honors Questions | Undergraduate Computer Science at UMD
Interested?
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Read up about requirements (/honors/requirements) and projects (/honors/projects) elsewhere on this site, or apply
(http://honors.cs.umd.edu/students/apply).
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/honors/questions 3/44/12/25, 3:06 AM Departmental Honors Questions | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/honors/questions 4/4

================================================================================
Filename: CS_Honors_Projects.pdf (Subtopic: Honors)
================================================================================

Department of Computer Science Sign In
Students and Mentors
Undergraduate Honors (/)
login with UMD's CAS. (/users/auth/cas)
Projects and Graduates (/students/finished) Apply (/students/apply)
About and Requirements (http://undergrad.cs.umd.edu/honors/)
Honors Graduates
1. Michael Andrew Suehle Fall, 2022
Advisor: Erin Molloy
Fast branch length estimation under the multi-species coalescent model using triplets
(/uploads/thesis/file/233/Final_Michael_Suehle_Honors_Thesis.pdf)
2. Zongxia Li Spring, 2022
Advisor: William Gasarch
AN EMPIRICAL COMPARISON OF THE QUADRATIC SIEVE FACTORING ALGORITHM AND THE
POLLARD RHO FACTORING ALGORITHM (/uploads/thesis/file/219/An_empirical_analysis.pdf)
3. Aaron Raj Ortwein Spring, 2022
Advisor: Dave Levin
HTTK(S): Characterizing and Evading Application-Layer Censorship by TransTeleKom
(/uploads/thesis/file/227/HTTK_S__Characterizing_and_Evading_Application-
Layer_Censorship_by_TransTeleKom.pdf)
4. Russell William Schwartz (High Honors) Spring, 2022
Advisor: Pratap Tokekar
Robust Multi-Agent Task Assignment in Failure-Prone and Adversarial Environments
(/uploads/thesis/file/226/ICRA_Submission.pdf)
5. Naveen Janaki Raman (High Honors) Spring, 2022
Advisors: Aravind Srinivasan, John Dickerson
Data-Driven Methods for Balancing Fairness and Efficiency in Ride-Pooling
(/uploads/thesis/file/222/2021_ijcai_deepfair_rideshare__1_.pdf)
6. Nathan Hayes Spring, 2022
Advisor: James Reggia
Honors Thesis: An Empirical Approach to Models of Associative Learning for Sequence Memory
(/uploads/thesis/file/225/small_thesis.pdf)7. Vatsal Agarwal (High Honors) Spring, 2022
Advisor: Abhinav Shrivastava
Introducing Feedback Connections to Vision Transformers
(/uploads/thesis/file/231/Honors_Thesis_2022.pdf)
8. William Jiang Chung Spring, 2022
Advisor: Ethan Cecchetti
Mechanizing and Implementing a Type System for Symphony
(/uploads/thesis/file/229/Mechanizing_and_Implementing_a_Type_System_for_Symphony.pdf)
9. Christopher Branch Nalty Summer, 2021
Advisor: James Reggia
A Comparison of Policy Gradient Methods for Multitask Learning (/uploads/thesis/file/211/CNalty_-
_Honors_Thesis.pdf)
10. Katherine Ashley Sullivan (High Honors) Spring, 2021
Advisor: David Mount
A Local-Search Approach to Timetable Scheduling
(/uploads/thesis/file/218/CS_Honors_Thesis___Sullivan__2_.pdf)
11. Mahir Jhaveri Spring, 2021
Advisor: Nirupam Roy
Bit-Depth Reduction And Audio Signal Classification
(/uploads/thesis/file/214/Final_Mahir_Jhaveri_Honors_Thesis.pdf)
12. Marko Neskovic Spring, 2021
Advisor: David Jacobs
Modified Teacher-Student Learning Approach to Predicting Mode of Transportation
(/uploads/thesis/file/212/Honors_Thesis__Transportation_Prediction.pdf)
13. Temur Saidkhodjaev Spring, 2021
Advisor: David Van Horn
Sound and Efficient Fine-Grained Gradual Typing via Contract Verification
(/uploads/thesis/file/217/Sound_and_Efficient_Fine-
Grained_Gradual_Typing_via_Contract_Verification.pdf)
14. Yifan Yang (High Honors) Spring, 2020
Advisor: Hector Corrada Bravo
Fast Query and Interactively Explore Data from Indexed Genomic Files
(/uploads/thesis/file/208/Yifan_Yang_UG_Thesis.pdf)15. Abhishek Mishra Spring, 2020
Advisor: David Van Horn
A Module System for a Racket-like Language (/uploads/thesis/file/209/HonorsThesis.pdf)
16. Justin Alexander Goodman Spring, 2020
Advisor: Michelle Mazurek
`What Twitter Knows' Extension -- Dataset Exploratory Analysis
(/uploads/thesis/file/210/goodman.pdf)
17. Johann Karl Borofka Miller (High Honors) Spring, 2020
Advisor: Daniel Abadi
Protocols for Online, Consistent Remastering in SLOG
(/uploads/thesis/file/220/Protocols_for_Online__Consistent_Remastering_in_SLOG.pdf)
18. Anthony Li Spring, 2019
Advisor: Jon Froehlich
AccessScore: A framework for generating individually tailored accessibility visualizations for people
with mobility impairments (/uploads/thesis/file/203/accessscore-framework-generating__1_-
compressed.pdf)
19. Baram Sosis (High Honors) Spring, 2019
Advisor: James Reggia
Learning in a continuous-valued attractor network (/uploads/thesis/file/202/08614073.pdf)
20. James Cary Mason Spring, 2019
Advisor: Dana Nau
A domain for the evaluation of RAEplan (/uploads/thesis/file/204/honorsThesis.pdf)
21. George Hughey (High Honors) Spring, 2019
Advisor: Dave Levin
UnCaptcha: A Low-Resource Defeat of ReCaptcha's Audio Challenge
(/uploads/thesis/file/207/thesis.docx)
22. Omer Yampel (High Honors) Spring, 2019
Advisor: Tudor Dumitras
BEAGLE: Provenance Graphs for Security Incident Response
23. Alexander Zhang Spring, 2018
Advisor: Marine Carpuat
Detecting Semantic Difference using Word Embeddings (/uploads/thesis/file/201/detecting-
semantic-difference.pdf)24. Noa Eisenbach Chazan Spring, 2018
Advisor: Jon Froehlich
A Temporal Thermography System for Supporting Longitudinal Building Energy Audits
(/uploads/thesis/file/193/Ubicomp_PosterPaper_v10b-CameraReady_ChangesAccepted_MLM.pdf)
25. Marcus Fedarko (High Honors) Spring, 2018
Advisor: Mihai Pop
Hierarchically Visualizing Metagenome Assembly Graphs with MetagenomeScope
(/uploads/thesis/file/200/fedarko_thesis.pdf)
26. Austin Bourgerie Spring, 2018
Advisor: Jeff Foster
Refinement Types for Ruby (/uploads/thesis/file/192/paper.pdf)
27. Patrick David Owen Spring, 2017
Advisor: Amitabh Varshney
Factoring Point Clouds into Positions and Translations for Compression
(/uploads/thesis/file/186/point_clounds.pdf)
28. Jeremy August Krach Spring, 2017
Advisor: James Purtilo
Copy-on-Reference File Mechanism Extends Scope of Dynamic Reconfiguration
(/uploads/thesis/file/189/Krach_Jeremy_Thesis.pdf)
29. Ashton Niels Webster Fall, 2016
Advisor: James Purtilo
A Comparison of Transfer Learning Algorithms for Defect and Vulnerability Detection
(/uploads/thesis/file/185/ashtonwebster-honorsthesis.pdf)
30. Francis Trevor Cangialosi (High Honors) Spring, 2016
Advisor: Dave Levin
Ting: Measuring and Exploiting Latencies Between All Tor Nodes (/uploads/thesis/file/183/ting-
imc15.pdf)
31. Amelia Rose Malone Spring, 2016
Advisor: Michelle Mazurek
The Digital Divide in Search Query Composition Patterns
(/uploads/thesis/file/184/MaloneThesisFinal3.pdf)
32. Andrew Stewart Consroe Fall, 2015
Advisor: Mihai PopContig Abundance Estimation in Metagenomic Samples using k-mer Count Analysis
(/uploads/thesis/file/182/Consroe_honors_thesis.pdf)
33. John Purtilo Fall, 2015
Advisor: James Reggia
Abductive Spatial Reasoning Diagnosis Models (/uploads/thesis/file/181/PURTILO_SPATIAL.pdf)
34. Omar Hossain Ahsan Fall, 2014
Advisor: Howard Elman
QR Decomposition in a Multicore Environment (/uploads/thesis/file/177/TSQR_Final.pdf)
35. Ryan Michael Dorson Fall, 2014
Advisors: Evan Golub, David Jacobs
CrosScan: The Crossword Scanning App (/uploads/thesis/file/178/Thesis.pdf)
36. Victoria Lai (High Honors) Spring, 2014
Advisors: Dave Levin, William Rand
Proving the Impossible: Provable Route Avoidance using Alibi Routing
(/uploads/thesis/file/173/alibi.pdf)
Comparing Social Tags to Microblogs (/uploads/thesis/file/174/social_tags.pdf)
How do Twitter Conversations Differ based on Geography, Time, and Subject?
(/uploads/thesis/file/175/topical_conversations.pdf)
37. Jeremy Ozymandias Fallick Spring, 2014
Advisor: Hal Daume
A Generalized Framework for Machine Transliteration
(/uploads/thesis/file/176/Generalized_Framework_for_Machine_Transliteration.pdf)
38. Khoa T Ha Fall, 2013
Advisor: Ramani Duraiswami
Tracing implicit surfaces from polygonal mesh using FIGTree
(/uploads/thesis/file/171/document.pdf)
39. Andrew J Lohr Spring, 2013
Advisor: William Gasarch
Tight Lower Bounds for Unequal Division (/uploads/thesis/file/170/unequal_division.pdf)
40. James Lee Parker Spring, 2013
Advisor: Michael Hicks
Froid: Functional Reactive Android (/uploads/thesis/file/172/thesis-2.pdf)41. Elissa Marie Redmiles Spring, 2013
Advisor: Samir Khuller
Human factors and requirements for a successful mobile platform dynamic taxi-share system in the
USA (/uploads/thesis/file/16/FinalThesis.pdf)
42. John Daniel Ingraham Spring, 2013
Advisor: Ben Bederson
Rule Creation in CTArcade: Teaching Abstract Computational Thinking From Concrete Guidelines
(/uploads/thesis/file/18/ingraham.pdf)
43. Joshua Tai Brule Spring, 2013
Advisor: William Gasarch
The `Russian Roulette' Problem: A Probabilistic Variant of the Josephus Problem
(/uploads/thesis/file/169/brule_roulette.pdf)
44. Moshe Matanya Katz Fall, 2012
Advisor: Elaine Shi
A Survey of Security in Single-Purpose Systems
(/uploads/thesis/file/166/A_Survey_of_Security_in_Single__Redacted_.pdf)
45. Yehuda Aryeh Katz Fall, 2012
Advisor: Elaine Shi
A Survey of Security in Single-Purpose Systems
(/uploads/thesis/file/167/A_Survey_of_Security_in_Single__Redacted_.pdf)
46. John Toman Fall, 2012
Advisor: Jeff Foster
Topics in Compilers (/uploads/thesis/file/168/cmsc390_honors_paper.pdf)
47. Hitesh Maidasani Spring, 2012
Advisor: Lise Getoor
Entity Resolution Evaluation Measures (http://honors.cs.umd.edu/reports/hitesh.pdf)
48. Eric Kuang Spring, 2012
Advisor: Bruce Golden
A 2-opt Based Heuristic for the Hierarchal Traveling Salesman Problem
(http://honors.cs.umd.edu/reports/kuang.pdf)
49. Philip Anderson Spring, 2012
Advisors: Louiqa Raschid, Samir KhullerLink Prediction for Annotation Graphs using Graph Summarization
(http://honors.cs.umd.edu/reports/anderson.pdf)
50. Jeff Jacobs Spring, 2012
Advisor: James Reggia
Evolving Musical Counterpoint (http://honors.cs.umd.edu/reports/jjacobs.pdf)
51. Talia Ringer Spring, 2012
Advisor: Larry Washington
An Elliptic Curve Threshold Key Establishment Scheme
(http://honors.cs.umd.edu/reports/ringer.pdf)
52. Kris Samala Spring, 2012
Advisor: Carl Kingsford
Modelling Disease Transmission on a Location-Based Social Network
(http://honors.cs.umd.edu/reports/ksamala.pdf)
53. Ryan Sims Spring, 2012
Advisor: Bill Pugh
Secure Execution of Student Code (http://honors.cs.umd.edu/reports/simspaper.pdf)
54. Tobin Valenstein Spring, 2012
Advisor: Evan Golub
Science Kit (http://honors.cs.umd.edu/reports/tobinpaper.pdf)
55. Tiffany Chao Fall, 2011
Advisors: Atif Memon, Ben Shneiderman
Visual Techniques for Medical Reconciliation (http://honors.cs.umd.edu/reports/tiffany.pdf)
56. Richard Matthew McCutchen (High Honors) Spring, 2011
Advisor: Samir Khuller
Streaming algorithms for k-center clustering with outliers and with anonymity
(http://honors.cs.umd.edu/reports/MattClustering.pdf)
57. Levon K. Mkrtchyan Spring, 2011
Advisor: Bonnie Dorr
Using Sparse Training to Estmate Context-Sensitive Translation Probabilities
(http://honors.cs.umd.edu/reports/sparsetrain.pdf)
58. Carl Albach Spring, 2011
Advisor: Mihai PopK-mulus: A database clutering approach to protein BLAST in the clouds
(http://honors.cs.umd.edu/reports/clusterprotein.pdf)
59. Sebastian Angel Spring, 2011
Advisor: Mihai Pop
K-mulus: A database clutering approach to protein BLAST in the clouds
(http://honors.cs.umd.edu/reports/clusterprotein.pdf)
60. Jonathan Speiser Spring, 2011
Advisor: Ben Bederson
SIMP: A Simplified Computational thinking and programming tool for children
(http://honors.cs.umd.edu/reports/simp.pdf)
61. Allison Hoch Fall, 2010
Advisor: Samir Khuller
Dense Graphs (http://honors.cs.umd.edu/reports/allie.pdf)
62. Daniel Sugarman Spring, 2010
Advisor: Amitabh Varshney
User Interface for MyeVyu (http://honors.cs.umd.edu/reports/interface2.doc)
63. Timothy J. Meyer Spring, 2010
Advisor: Amy Weinberg
Evaluation of Entity Recognition Systems (http://honors.cs.umd.edu/reports/meyer.pdf)
64. Sonia R. Franckel Spring, 2009
Advisor: Allison Druin
GeoStories (http://honors.cs.umd.edu/reports/Franckel_GeoStories.pdf)
65. Yuangchen (Mike) Luo Spring, 2009
Advisor: Ramani Duraiswami
Canny Edge Detection on NVIDIA GPU (http://honors.cs.umd.edu/reports/luo_08.pdf)
66. Kristin Stephens Spring, 2009
Advisor: James Reggia
Optimizing Swarm Intelligence in Solving Transport Problems
(http://honors.cs.umd.edu/reports/StephensOptSwarmTransportProblem.pdf)
67. Christine Masuoka Fall, 2008
Advisor: Michelle Hugue
Java Programming Using Voice Input: Adding Java Support to VoiceCode
(http://honors.cs.umd.edu/reports/cmasuoka_HonorsProjectReport.pdf)68. Jacob Devlin (High Honors) Fall, 2008
Advisor: Bonnie Dorr
Dealing with Deletion Errors in MT (http://honors.cs.umd.edu/reports/Devlin-HonorsPaper1.pdf)
Automatically Derived Multi-level Word Classes for MT (http://honors.cs.umd.edu/reports/Devlin-
HonorsPaper2.pdf)
69. Brent Dorman Spring, 2008
Advisor: William Gasarch
Secret Bit Transmission Using a Deck of Cards (http://honors.cs.umd.edu/reports/Dorman-
CardCryptography.pdf)
70. Daniel Hackner Spring, 2008
Advisor: Atif Memon
GUITAR AMP (AutoMatic jfcunit test case Producer) (http://honors.cs.umd.edu/reports/Hackner-
Honors-2008.pdf)
71. Lynn Reggia Spring, 2008
Advisor: William Gasarch
Secret Bit Transmission Using a Deck of Cards (http://honors.cs.umd.edu/reports/Reggia-
CardPap.pdf)
72. Morgan Dixon Spring, 2008
Advisor: François Guimbretiére
Optimal Parameters for Efficient Crossing-Based Dialog Boxes
(http://honors.cs.umd.edu/reports/Dixon-crossingCHI2008.pdf)
73. Stanley Jih-hwa Lam Spring, 2008
Advisor: Ben Shneiderman
PatternFinder in Microsoft Amalga: Temporal Query Formulation and Result Visualization in Action
(http://honors.cs.umd.edu/reports/Lam-PatternFinder in Azyxxi.htm)
74. Chris Conroy Spring, 2008
Advisor: James Purtilo
Magnetic Card Security Project (http://honors.cs.umd.edu/reports/Conroy-
Magnetic%20Swipe%20Card%20System%20Security.pdf)
75. Michael Wasser (High Honors) Spring, 2008
Advisor: Bonnie Dorr
SocialBrowsing: Augmenting Web Browsing to Include Social Context
(http://honors.cs.umd.edu/reports/Wasser-SocialBrowsing.pdf)76. Jeffrey A. Meister Spring, 2008
Advisors: Jeff Foster, Michael Hicks
Serializing C Intermediate Representations to Promote Efficiency and Portability
(http://honors.cs.umd.edu/reports/Meister-paper.pdf)
77. Katrina LaCurts Spring, 2008
Advisor: William Gasarch
Decision Trees (http://honors.cs.umd.edu/reports/LaCurts-thesis.pdf)
78. Andrew Parrish (High Honors) December, 2007
Advisor: William Gasarch
Purely Combinatorial Proofs of Van der Waerden-type Theorems
(http://honors.cs.umd.edu/reports/vdw.pdf)
Exploration of the Three-Person Duel (http://honors.cs.umd.edu/reports/truel.pdf)
79. Daozheng Chen Summer, 2007
Advisor: David Jacobs
Speeding up Queries in a Leaf Image Database
(http://honors.cs.umd.edu/reports/Speedup_queries_in_a_leaf_image_database.pdf)
80. Jessica Chang Spring, 2007
Advisor: Samir Khuller
Online Algorithms for Broadcast Scheduling (http://honors.cs.umd.edu/reports/Jessica-Chang-
paper.pdf)
81. Jonathan Howard 2006
Advisor: Amitabh Varshney
Vertex Reordering for Cache Coherency
(http://honors.cs.umd.edu/reports/Vertex_Reordering_for_Cache_Coherency.pdf)
82. Phillip Crosby 2006
Advisor: François Guimbretiére
Annoflow -- Handwritten Annotation and Proofreading on Dynamic Digital Documents
(http://honors.cs.umd.edu/reports/handwriting.pdf)
Demo (http://honors.cs.umd.edu/reports/handwritingdemo.html)
83. Patrick Armstrong 2006
Advisor: William Gasarch
Automated Strategies for the Game "Minesweeper"
(http://honors.cs.umd.edu/reports/minesweeper.pdf)84. Robert Patro 2006
Advisor: Amitabh Varshney
A survey of some recent results in computer graphics
(http://honors.cs.umd.edu/reports/graphics.pdf)
85. Daniel Ramsbrock 2006
Advisor: Jonathan Katz
Magnetic Swipe Card System Security (http://honors.cs.umd.edu/reports/magcard.pdf)
86. Bryant Lee 2006
Advisor: Uzi Vishkin
XMT Applications Programming: Image Registration and Computer Graphics
(http://honors.cs.umd.edu/reports/lee.pdf)
87. John Shin 2006
Advisor: Dana Nau
A graphical interface for JHOP-2 (http://honors.cs.umd.edu/reports/interface.doc)
88. David Renie 2006
Advisor: James Purtilo
Voter discrepancy through improper districting (http://honors.cs.umd.edu/reports/votes.doc)
89. John Brennan 2006
Advisor: James Purtilo
Voter discrepancy through improper districting (http://honors.cs.umd.edu/reports/votes.doc)
90. David Marcin 2006
Advisor: James Purtilo
Voter discrepancy through improper districting (http://honors.cs.umd.edu/reports/votes.doc)
91. Firouzeh Jalilian 2005
Advisor: Michel Cukier
Development of Vulnerable E-Commerce (http://honors.cs.umd.edu/reports/Firouzeh.pdf)
92. Amy Lee Alford 2005
Advisor: Jim Hendler
A First Generation Semantic Portal (http://honors.cs.umd.edu/reports/querier-writeup.ps)
93. Daniel Speyer 2005
Advisor: Atif Memon
ForNet (http://honors.cs.umd.edu/reports/ForNet2004.pdf)94. Michael Lin 2005
Advisor: Hanan Samet
Cartographic Labelling (http://honors.cs.umd.edu/reports/Cartographic.pdf)
95. Svetlana Yarosh 2005
Advisor: Don Perlis
Universal Device Interface (http://honors.cs.umd.edu/reports/finalthesis.doc)
96. Bret Cohen 2005
Advisor: Gilmer Blankenship
Firearm Alerting System
97. Colin Dixon 2005
Advisor: Samir Khuller
Vertex cover problem with hard capacities (http://honors.cs.umd.edu/reports/colin-final.pdf)
98. Ryan E. Braud 2004
Advisor: Bobby Bhattacharjee
Using Application Layer Multicast to Distribute Streaming Video
(http://honors.cs.umd.edu/reports/Ryan_Braud.html)
99. Kevin Conroy 2004
Advisor: François Guimbretiére
TAbiWord: Digital Document Annotation and Reflow
(http://honors.cs.umd.edu/reports/Tabiword.pdf)
100. Michael Fan 2004
Advisor: William Gasarch
Tic Tac Toe with Betting (http://honors.cs.umd.edu/reports/ttt.ps)
101. Stuart D. Fletcher 2004
Advisor: William Gasarch
The Egg Game (http://honors.cs.umd.edu/reports/egg.ps)
102. Steven Philip Helfand 2004
Advisor: David Mount
The Democritization of GIS and Applications in Community Planning
103. Phillip B. Kirlin 2004
Advisor: Hanan Samet
Cartographic Generalization of Polylines Stored in Quadtrees
(http://honors.cs.umd.edu/reports/pkirlin.htm)104. Christian Klein 2004
Advisor: Ben Bederson
Effectiveness of Animated Scrolling (http://honors.cs.umd.edu/reports/Klein/2004-14.pdf)
105. Istvan Laszlo 2004
Advisor: David Mount
Moon of Mars Explorer
(http://honors.cs.umd.edu/reports/laszloi/Moons%20of%20Mars%20Explorer.htm)
106. Shirin Mehraban 2004
Advisor: Chau-Wen Tseng
A Linear Programming Based Algorithm for Multiple Sequence Alignment by Using Markov Decision
Process (http://honors.cs.umd.edu/reports/Mehraban-Paper051204.pdf)
107. Pramit K. Mohapatra 2004
Advisor: François Guimbretiére
Inclusion of Edge Length in TreeJuxtaposer Tree Layouts (http://honors.cs.umd.edu/reports/pramit-
summary.htm)
108. Will Valencia 2004
Advisors: Larry Washington, William Gasarch
Creating a Pseudo-Random Number Generator (http://honors.cs.umd.edu/reports/Valencia.html)
109. Nikolai Yakovenko 2004
Advisors: Larry Washington, William Gasarch
Analysis of a New Shift Cipher (http://honors.cs.umd.edu/reports/Nikolai-paper.pdf)
110. Nilani Aluthgendra 2003
Advisor: Dianne O'Leary
Recognizing Sentence Boundaries and Boilerplate (http://honors.cs.umd.edu/reports/Nilani.pdf)
111. Dave Cohen 2003
Advisor: Vic Basili
The Visual Query Interface: Graphical User Interface Analysis and Redesign
(http://honors.cs.umd.edu/reports/dcohen.pdf)
112. Aaron Elkiss 2003
Advisor: Philip Resnik
A Scalable Architecture for Linguistic Annotation (http://honors.cs.umd.edu/reports/Elkis-
honorspaper/index.html)113. Martha Gebremichael 2003
Advisor: Michael Hicks
Implementing On-line Software Upgrades in JavaSource Code
(http://honors.cs.umd.edu/reports/MarthagmHonorsProject.pdf)
Source Code (http://honors.cs.umd.edu/reports/MarthagmSourceCode.html)
114. Scott Moore 2003
Advisor: William Gasarch
Perfect and PluPerfect Digital Invariants" (http://honors.cs.umd.edu/reports/NarcissisticNums)
115. Michael Nelson 2003
Advisor: Michael Hicks
Aspect-oriented Asynchrony in Java (http://honors.cs.umd.edu/reports/Nelson-honors-thesis.pdf)
116. Charles (Chao) Song 2003
Advisor: Ashok Agrawala
IEEE 802.11 DCF simulator with power saving mode (http://honors.cs.umd.edu/reports/falcon-
research.pdf)
117. Gilad Suberri 2003
Advisor: Atif Memon
Automated Reverse Engineering of Graphical User Interfaces
(http://honors.cs.umd.edu/reports/GiladReport.pdf)
118. David Thaw 2003
Advisor: Ashok Agrawala
The Impact of Information and Computing Systems Monopoly on Democratic Processes in the United
States (http://honors.cs.umd.edu/reports/ThesisDavidThaw.pdf)
119. Wendy Chou 2003
Advisor: Larry Washington
Elliptic Curve Crypotography and Its Applications to Mobile Devices
(http://honors.cs.umd.edu/reports/ECCpaper.pdf)
120. Leonid Velikovich 2003
Advisor: Amitabh Varshney
Adapting the Lattice-Boltzmann Model for Efficient Airflow Modeling inside the View Frustum
(http://honors.cs.umd.edu/reports/Velikovich.htm)
121. Steve Betten 2002
Advisor: Ben BedersonViewing Changes: Monitoring with Treemaps
122. Semion S. Bezrukov 2002
Advisor: Clyde Kruskal
Methods for Multiplayer Gameworld Synchronization
(http://honors.cs.umd.edu/reports/Semion/MethodsXforXMultiplayerXGameWorldXSynchronization.doc)
123. Amy Castner 2002
Advisor: William Gasarch
Private Information Retrieval with 1 copy (http://honors.cs.umd.edu/reports/pir.ps)
124. Roman Chertov 2002
Advisor: Alan Sussman
Exposing DataCutter C++ library API to JAVA applications
(http://honors.cs.umd.edu/reports/rchertov.rtf)
125. Jason Ernst (High Honors) 2002
Advisor: VS Subrahmanian
Optimal Diagnostic Inference (http://honors.cs.umd.edu/reports/jernst/thesis.pdf)
126. Chad Groft 2002
Advisor: William Gasarch
Interactive and Zero-knowledge Proofs (http://honors.cs.umd.edu/reports/zk.ps)
127. Srinivas Kashyap (High Honors) 2002
Advisor: Samir Khuller
Algorithms for Data placement on disks (http://honors.cs.umd.edu/reports/raaghav-thesis.pdf)
128. Sergey Koren 2002
Advisor: Alan Sussman
DataCutter Framework Expansion (http://honors.cs.umd.edu/reports/DataCutter_and_Java.pdf)
129. Lisa Pearl (High Honors) 2002
Advisor: Bonnie Dorr
Divergences: Exploring One Rabbit Hole in Word-Level Alignment
(http://honors.cs.umd.edu/reports/divergence-thesis.ps)
130. Svetlana Shargorodskaya 2002
Advisor: Samir Khuller
Implementation of Data Migration Algorithms (http://honors.cs.umd.edu/reports/skaya.html)131. Konstantin Berlin 2002
Advisor: Chau-Wen Tseng
UPC vs. MPI and OpenMP: Analysis of a Hybrid Approach to Parallel Programming
(http://honors.cs.umd.edu/reports/lcpc03.pdf)
132. Liliya Kharevych 2002
Advisor: David Mount
3D Physics Engine For Elastic and Deformable Bodies
(http://honors.cs.umd.edu/reports/kharevych.html)
133. Eric Everstine 2001
Advisor: William Gasarch
Partial Key Exposure Attacks on RSA (http://honors.cs.umd.edu/reports/lowexprsa.pdf)
134. William Y. Jhun 2001
Advisor: Ashok Agrawala
Techniques for Estimating Worse-Case Program Execution Times with Unexpected Hardware
Architecture Changes or Unknowns (http://honors.cs.umd.edu/reports/wjhun/wcet.ps)
135. Andrey Khorlin (High Honors) 2001
Advisor: Jeff Hollingsworth
High-performance computing (http://honors.cs.umd.edu/reports/Khorlin/index.html)
136. Josh Neel 2001
Advisor: Larry Washington
Cryptanalysis of Mobile Phone Cryptology (http://honors.cs.umd.edu/reports/cryptanalysis.doc)
137. Noah Smith (High Honors) 2001
Advisor: Philip Resnik
Detection of Translational Equivalence (http://honors.cs.umd.edu/reports/LAMP_071.ps)
138. Peter James Schwartz 2001
Advisor: Don Perlis
Irrational Beliefs: Truth Maintenance with Cognitive Dissonance
(http://honors.cs.umd.edu/reports/Schwartz/index.html)
139. Ransom Winder 2001
Advisor: David Mount
Kinetic PR Quadtree (http://honors.cs.umd.edu/reports/Ransom/index.htm)
140. Adam Bartgeil 2000
Advisor: William GasarchKnights and Knormals (http://honors.cs.umd.edu/reports/who.ps)
141. Raghuveer Chalasani 2000
Advisor: Ben Shneiderman
Exploring Treemaps: Design and Implementation of Treemap 2000 with Dynamic Queries
(http://honors.cs.umd.edu/reports/treemap2000/)
142. John Jung 2000
Advisor: Ben Shneiderman
Empirical Comparison of Four Accelerators for Direct Annotation of Photos
(http://honors.cs.umd.edu/reports/john_jung.doc)
143. Kevin Kane 2000
Advisor: William Gasarch
Constructive Proofs in Ramsey Theory (http://honors.cs.umd.edu/reports/ramseycycles.ps)
144. Aleksey Martynov 2000
Advisor: David Mount
A Ray Tracing Algorithm for Sphere Rendering
(http://honors.cs.umd.edu/reports/AMartynov/4D_RayTracer.htm)
145. An Zhu (High Honors) 1999
Advisor: Samir Khuller
A Uniform Framework for Approximating Weighted Connectivity Problems
(http://honors.cs.umd.edu/reports/anzhu.ps)
146. Annapurna Valluri 1998
Advisor: Christos Faloutsos
Database (http://honors.cs.umd.edu/reports/valluri.pdf)
147. Roman Shapiro 1998
Advisor: Clyde Kruskal
Apportionment of Representatives in the United States Congress House of Representatives and
avoiding the 'Alabama Paradox' (http://honors.cs.umd.edu/reports/shapiro.pdf)
148. Terri Paik 1998
Advisor: Bonnie Dorr
Korean/English Machine Translation: Semantics and Morphology
(http://honors.cs.umd.edu/reports/paik.txt)
149. Landon Davies 1998
Computational Finance150. Philip Su 1998
Advisor: John Gannon
JAVA Operating System: VenusOS
151. Payam Fard 1998
Advisor: Clyde Kruskal
Apportionment schemes for voting (http://honors.cs.umd.edu/reports/fard.pdf)
152. Kareem S Aggour 1998
Advisor: Michelle Hugue
Security
153. Maria Jump 1998
Advisor: David Mount
Design and Implementation of an Interactive Ray Tracer
(http://honors.cs.umd.edu/reports/MJump/index.html)
154. Amy Yuan 1998
Advisor: David Mount
Image Flaw Removal (http://honors.cs.umd.edu/reports/AYuan/index.html)
155. Gil Carmel 1997
Advisor: William Gasarch
Learning Richman Games on Neural Networks Using Temporal Difference Learning
(http://honors.cs.umd.edu/reports/carmel.ps)
156. Rajarshi Gupta 1997
Advisors: Prakash Narayan, Armand Makowski
Local Area Switching Networks
157. Charlie Hohn 1997
Advisor: Jim Hendler
Simulating Robots
158. Greg Seidman 1997
Advisor: David Mount
Human interface
159. April Simmons 1997
Computer Science160. Jun S Yang 1997
Advisor: Bonnie Dorr
Korean/English Translation (http://honors.cs.umd.edu/reports/Jun_S_Yang.txt)
161. Tariq Magdon-Ismail 1997
Advisor: Samir Khuller
Vehicle Routing
162. Suresh Aryangat 1997
Advisor: Alex Dragt
Symbolic computation
163. Do-Jun Byun 1996
Advisor: John Gannon
Code Optimization
164. Robert Ross 1996
Advisor: VS Subrahmanian
Database
165. Michael Steele 1996
Advisor: Jeff Hollingsworth
Grindstone: A Test Suite for Parallel Performance Tools
(http://honors.cs.umd.edu/reports/grindstone.pdf)
166. Jeffrey Squires 1996
Advisor: Larry Davis
Restoration of videos
167. Vanessa Heppolette 1996
Advisor: Jeff Hollingsworth
Device Driver optimization
168. Sze Yuen Wong 1996
Advisor: Dana Nau
Process Planning
169. Assaf Mendelson 1995
Advisor: Joel Saltz
Medical applications170. Ellen Paik 1995
Advisor: Menapolis
Signature files
171. Marat Fayzullin 1995
Advisor: James Purtilo
Remote I/O libraries
172. Jason Ellis 1995
Advisor: Clyde Kruskal
Heap Sort and its variants
173. Chi Tran 1995
Advisor: William Gasarch
Heap Sort and its variants
174. Vimarsh Bakaya 1995
Advisor: Samir Khuller
Graph Drawing Tools
175. Heung-Man Lam 1995
Advisor: Larry Davis
Face recognition algorithms
176. Mema Roussopoulos 1995
Advisor: Larry Davis
Segmenting Video's
177. Gaurav Bhatia 1995
Computer Science
178. Edward Shnekendorf 1995
Computer Science
179. Oliver Seeliger 1994
Advisor: Samir Khuller
Scheduling- TA assignments
180. Nirupama Chandrasekaran 1994
Advisor: Dana Nau
AI and Manufactoring181. Lev Novik 1994
Advisor: Jack Minker
Logic Programming and Prolog
182. Yew Kung 1994
Advisor: Dana Nau
AI and Manufactoring- Solid Modelling
183. Salim Chawro. 1994
Advisor: David Mount
Data Structures and Algorithms
184. Heather Hill 1994
Computer Science
185. Kirk Dunsavage 1993
Advisor: James Purtilo
Software Engineering
186. Bernard Chan 1993
Advisor: Bill Pugh
Program analysis
187. Scott Walker 1993
Advisor: James Purtilo
Distributed Processes
188. Sergey Brin 1993
Logic Programming
189. Carolyn Stanoyevitch 1992
Advisor: Jou
Database
190. Steve Jones 1992
Advisor: James Reggia
Neural Networks
191. David Herbert 1992
Neural Networks192. Charles Falkenberg 1992
Advisor: James Purtilo
Spatial Modeling
193. Samuel Lamphier 1992
Advisor: John Gannon
Testing
194. Daniel Levine 1992
Advisor: Dana Nau
Search Algorithms
195. Eugene Schwatzman 1991
Advisor: Jim Hendler
Planning
196. Frank John Andrasco 1991
Advisor: Christos Faloutsos
Database
197. Pedga Bogdanovich 1990
Advisor: Hanan Samet
Graphics
198. Heide Yost 1990
Advisor: James Purtilo
Interface Type Checking
199. Hillel Steinberg 1990
Advisor: Ken Salem
System
200. Andrew Pach 1989
Advisor: Timoleon Sellis
Database
201. Joanne D'Souza 1989
Advisor: William Atchison
Computers in Medical Diagnotics
202. David Hobbs 1988
Advisor: Ben ShneidermanAutomatic Spell Correction
203. Barry Reich 1988
Advisor: Gary Knott
Graphics
204. Mallku G. Caballro 1987
Advisor: Pankaj Jalote
Automatic Test Case Generation
205. Kathy Kershaw 1987
Advisor: Gary Knott
Graphics
Web Accessibility (https://www.umd.edu/web-accessibility)

================================================================================
Filename: 4XX_Info_Slideshow.pdf (Subtopic: 4XX)
================================================================================

CMSC4xx Information
Session
Spring 2024Welcome!
● The department offers ~37 upper level CS courses
○ You need 7
● How to pick?
○ Make sure you know what you need for your degree
○ Follow your interests
○ Let the distributive areas be your guide
○ Consider specializingDistributive Areas
Area 1: Systems
● Similar Lower Level: CMSC216
● Operating systems, cybersecurity, networking, parallel computing, big
data
Area 2: Information Processing
● Similar Lower Levels: CMSC216 AND CMSC330
● Machine learning, AI, databases, computer vision/graphics,
bioinformatics
Area 3: Software Engineering and Programming Languages
● Similar Lower Level: CMSC330
● Compilers, programming technologies, HCI, software development
Area 4: Theory
● Similar Lower Level: CMSC250, CMSC351
● Algorithms, computability, cryptography, quantum computing, game theory
Area 5: Numerical Analysis
● Numerical computation, numerical analysisArea 1: SystemsCMSC 416: Introduction to Parallel Computing
Content
● Intro to parallel computing, parallel architectures and networks, shared-memory programming,
distributed-memory programming, GPU programming, parallel algorithm design, debugging and
instrumentation, performance tools, performance optimizations, parallel I/) and networks,
scientific and other applications
Structure
● 4 projects, 2-3 quizzes, midterm and final
Programming Languages
● Programming assignments are in C or C++, using MPI, OpenMP, and CUDA for
parallel/distributed programming on the campus Linux cluster. You will use many CPU cores,
and also one or more GPUs.
Who Should Take This One?
● students interested in building on their Systems knowledge from CMSC216, students curious
about the theory and practice of high performance and parallel computingArea 2: Information ProcessingCMSC 424: Database Design*
Content
● Database design, SQL (creating the database, writing to it, reading from it, simple and
complex SQL queries), performing SQL queries from a software program, PHP/web programming,
NoSQL, some cybersecurity (one way encryption, sql injection), SQL query optimization,
concurrency and deadlock
Structure
● Exam based
Programming Languages
● SQL, PHP
Who Should Take This One?
● Students who want a better understanding of what is involved in a software program:
including the client side software, database in the background, and server side software
● Every software program uses data, and databases are the best way to store that data
*Information applicable to Herve’s sections of CMSC424Area 3: Software Engineering and Programming
LanguagesCMSC 436: Programming Handheld Systems
Content
● What makes mobile different from traditional computing, what the
standard principles of mobile programming are, and how to develop
complex applications
Structure
● Project Based
Programming Languages
● Depends on the semester! Kotlin for Android, Swift for iOS, or Dart
for the cross-platform Flutter SDK
Who Should Take This One?
● Students who want to know more about the technology that lives in
their pockets
● Students who want self-designed group work experience, with the
opportunity to design and monetize their own mobile apArea 4: TheoryCMSC 452: Elementary Theory of Computation
Content
● Study of several classes of languages including Regular, Context Free, P, NP, Decidable, and
Undecidable
○ study which languages are IN that class, which languages are NOT IN that class, and what questions are UNKNOWN
TO SCIENCE
Structure
● Exam and homework based, with 1 small project
Programming Languages
● The small programming project can be in any language, though most students do it in C, C++,
Java, or Python
Why take this class?
● Practical: it is good to know what problems are (or thought to be) hard to solve so that
instead you will try to solve variants of them
● Intellectual: Proving that certain problems CAN'T be solved, or are hard to solve is an
intellectual counterpoint to the (also fine courses) where you show what CAN be solvedUpper Level CS EletivesCMSC425: Game Programming
● Content
◆ Mix of theoretical and practical concepts
◆ 3D math and coordinate systems
◆ Programming methods and concepts useful to game
creation
◆ Industry preparation
● Structure
◆ Focus on projects
● Programming Languages
◆ C#
● Who Should Take This One?
◆ Students interested in game development, in the
entertainment industry and beyond it
◆ Students who want more interactive codingUpper Level ConcentrationULC Requirements
● 12 credits (most often 4 courses)
● All in the SAME area
○ unless you have declared a minor/double-major which requires courses
from multiple areas, required courses for declared programs are
eligible even with variation.
○ ex. a Sustainability minor can use AGNR and PLCY courses
● CAN’T be CS or overly similar
○ Computer Engineering, Information Science, several IMD courses, DATA
courses, etc. are ineligible
○ Some programs also have ineligible courses, check the ULC website
● Talk to your advisor before getting started to make sure
your plan will work!Make the ULC work for you
● Students usually approach the ULC in 1 of 3 ways:
1. I hate this requirement so much pls make it stop
a. These students usually choose MATH or STAT since they have already
completed the prerequisites with their CS coursework
2. CS is hard and I need a break
a. These students choose something they like to build in a break
during rigorous upper-level semesters
3. I want something that supports my CS interests
a. These students choose a ULC that helps them build a niche. For
example, students interested in NLP can choose linguistics,
students interested in game design can choose art or english,
students interested in cybersecurity can choose criminal justice,
students interested in HCI can choose sociology, etc.Immersive Media Design
● What’s the program all about?
○ IMD is great for students who want to apply their creative and technical
skills to develop AR/VR/XR applications and large scale immersive
experiences
○ The intersection of Computer Science, Design, and Art
● What lower levels should I take to access upper-level
coursework?
○ IMDM101, IMDM150
● Why might CS students be interested?
○ Learn about new ways to creatively apply what you learn in your CS courses
● Not all IMDM courses are applicable to the ULC, so be ready to
mix-and-match with ArtDigital Storytelling and Poetics Minor
● What’s the program all about?
○ Interpreting, creating, and imagining writing in new digital media
spaces
○ Building skills to critically analyze digital culture, narrative,
poetics, and rhetoric
○ Crafting creative expression in digital platforms, leading to the
build up of a portfolio
● What lower levels should I take to access upper-level
coursework?
○ ENGL295: Intro to Digital Storytelling and Poetics (for the minor)
○ ENGL3xx courses are open to all students
● Why might CS students be interested?
○ Write and design creatively using digital tools (code, AI text
generators, social media)
○ Supports interest in fields like content creation, game design,
software design, web dev, UX, and moreAstronomy
● What’s the program all about?
○ Opening new frontiers–especially in data science
○ Connecting students with high-level research and engagement
○ Exploring the universe
● What lower levels should I take to access upper-level
coursework?
○ At least 1 1xx level course (ASTR100, ASTR101, transfer equivalents)
○ At least 1 2xx course (ASTR220 or 230)
○ Conveniently, these are also gen eds!
● Why might CS students be interested?
○ Job security: With many of the advances in space technology, there will be
mountains of data to analyze and plenty of coding jobs
○ Opens doors to new fields like aerospace and aeronautical engineering,
policy around privacy and data, and the very emerging space economy
○ CS and Astro are very interconnected
○ Root your love of science in something physical to balance out your CS workBusiness
● What’s the program all about?
○ The study skills and technologies that enable students to operate and
lead in the corporate world. There is variety depending on the area
of business you focus on!
● How do students access upper-level coursework?
○ Declare a minor: General Business, Innovation and
Entrepreneurship,Computational Finance (needs 1 extra course after
completing minor for ULC), Business Analytics (choose courses very
carefully, many aren’t eligible for the ULC)
○ Minor applications open each Winter
● Why might CS students be interested?
○ Students can develop an understanding of finance, management, and
economics that will help them thrive in the corporate world, and find
intersections of CS and Business like CompFin

================================================================================
Filename: 4XX_Intro_Page.pdf (Subtopic: 4XX)
================================================================================

4/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
What 4XX Should I Take?!
* Wondering what to take in Spring 2025? The CS Advising Team has put together some
pointers and resources to help you pick your CMSC courses.
Info Session PDF
View the Spring 2024 4xx Info Session PDF
(/sites/undergrad.cs.umd.edu/files/2401%204xx%20info%20session.pdf)
https://undergrad.cs.umd.edu/4xxinfo#video 1/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
4xx Course Information
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/4xxinfo#video 2/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Search:
▴ ▴ ▴ ▴ ▴
Course Number ▾ Course Name ▾ Math or Programming? ▾ Languages ▾ Distributive Area ▾ Exam or Project Based
CMSC320 Introduction to Programming Python Elective Project
-
Data Science
Overview This course focuses on (i) data management systems, (i) exploratory and statistical data analysis, (ii) data and information
visualization, and (iv) the presentation and communication of analysis results. It will be centered around case studies drawing extensively
from applications, and will yield a publicly-available final project that will strengthen course participants' data science portfolios.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC335 Web Application Programming JavaScript Elective Projcect
- Development
with JavaScript
Overview Introduction to modern ways of developing web applications/services using JavaScript for both front-end and back-end.
Topics include fundamental JavaScript languages and constructs, server-side Javacript, back-end data persistence, and client-side
JavaScript to build web applications that interact with web services and back-end databases.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC411 Computer Neither, theory based MIPS 1 Both
Systems computing
-
Archetecture language, C,
Ruby
Overview Study topics in computer systems architecture. Start with pipelining, instruction set principles, and memory hierarchy. Then,
shift to super-scalar execution, branch prediction, dynamic scheduling, hardware multi-threading, shared memory architecture, and GPU
Recommended Pairings All
https://undergrad.cs.umd.edu/4xxinfo#video 3/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
CMSC412 Operating Programming C 1 Project
- UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Systems
Overview Study processes, threads, scheduling, synchronization, memory management, file system interface and implementation, disk
and storage systems, and other topics (security, networking, etc.). Very rigorous, the only upper level course for 4 credits.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC474, CMSC460, CMSC466
CMSC414 Computer and Programming C, 1 Project
- Network Javascript/SQL
Security
Overview Introduction to computer system and network security. Work on network-related security problems in computer systems.
Fundamentals of unmber theory, authentication, and encryption technologies through practical problems.
Recommended Pairings CMSC456
CMSC416 Introduction to Programming C, C+, Fortran, 1 Project
- Parallel MPE
Computing
Overview Introduction to parallel computing for computer science majors. Topics include programming for shared memory and
distributed memory parallel architectures, and fundamental issues in design, development and analysis of parallel programs.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC474, CMSC460, CMSC466
CMSC417 Computer Programming C, possibly 1 Both, with emphasis on
-
Networks Ruby projects
Overview Introduction to the core concepts of wired and wireless networking, focused on layered architecture and protocol stacks.
Covered concepts include internet architecture, HTTP, DNS, P2P, Sockets, and more. Quite rigorous.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
https://undergrad.cs.umd.edu/4xxinfo#video 4/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
- CMSC420 Data Structures Programming Java 2 Mix of both
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Overview Description, properties, and storage allocation functions of data structures including heaps, balanced binary trees, B-Trees,
hash tables, skiplists, tries, kd-trees, quadtrees and many more. Algorithms for manipulating structures.
Recommended Pairings All
CMSC421 Introduction to Programming Python 2 Project
- Artificial
Intelligence
Overview Introduction to AI, inclding search, inference, knowledge representation, learning, vision, natural languages, expert systems,
and robotics, Implemantation and application of programming languages, programming techniques, and control structures.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC422 Machine Both Python 2 Both, with emphasis on
-
Learning projects
Overview Machine Learning studies representations and algorithms that allow machines to improve their performance on a task from
experience. This is a broad overview of existing methods for machine learning and an introduction to adaptive systems in general.
Emphasis is given to practical aspects of machine learning and data mining.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC423 Bioinformatic Programming Some student 2 Project
Algorithms, choice with
-
Databases, and languages
Tools used
Overview This course will focus on algorithmic, and computational aspects of biological data analysis, and specifically on genomics.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
https://undergrad.cs.umd.edu/4xxinfo#video 5/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
CMSC424 Database Programming Python, SQL, 2 Project
- UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Design Ruby-on-Rails
Overview Introduction to database systems and the database approach as a mechanism formodeling the real world. In-depth coverage
of the relational model, logical database design, query optimization, concurrency control, transaction management, and log based crash
recovery.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC425 Game Programming Unity/C# Elective Projcect
-
Programming
Overview An introduction to the principles and practice of computer game programming and design. This includes an introduction to
game hardware and systems, the principles of game design, object and terrain modeling, game physics, artificial intelligence for games,
networking for games, rendering and animation, and aural rendering.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC426 Computer Programming MATLAB 2 Project
-
Vision
Overview Introduction to basic concepts and techniques in computer vision, including low-level operations like image feltering, edge
detection, 3D reconstruction of scenes using stero and structure from motion, and object recognition/detection/classification.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC427 Computer Programming Java, OpenGL 2 Project
-
Graphics
Overview Introduction to 3D computer graphics, focusing on the underlying building blocks and algorithms. Topics include 3D image
generation and modeling, interactive applications, representation of 3D geometry, 3D transformations, pojections, rasterization, texturin
lighting models, and Graphics Processing Units.
Recommended Pairings All
https://undergrad.cs.umd.edu/4xxinfo#video 6/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
CMSC430 Introduction to Programming OCaml 3 Project
-
Compilers
Overview Topics include lexical analysis, parsing, intermediate representations, program analysis, optimization, and code generation. I
you enjoyed CMSC330, you will likely enjoy this class.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC433 Programming Programming Java 3 Project
Language
-
Technologies
and Paradigms
Overview Topics include programming language techologies, their implcations, and their use in software design and implementation.
This course often envolves significant group work.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC434 Introduction to Programming and Writing Java, HTML5, 3 Project, emphasis on
Human- Javascript, C#, writing
-
Computer Objective C,
Interaction Swift
Overview Access usability by quantitiative and qualitative methods, Conduct task analysis, usability tests, expert reviews, and continuin
assesments of working products. Apply design processes and guidelines. Build low-fidelity paper mockups and a high-fidelity prototype.
This course is especially recommended for students with an interest in 3D printing, arduino, and/or accessibility software.
Recommended Pairings All
CMSC435 Software Programming 3 Project
-
Engineering
Overview Topics include state-of-the-art techniques in software design and development. Lab experience in applying the techniques
d S d ill dd i d i d d i dd l i d
https://undergrad.cs.umd.edu/4xxinfo#video 7/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
covered. Students will use structured design, structured programming, top-down deisgn and development, segmentation and
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
modularization techniques, iterative enhancement, design and code inspection techniques, correctness, and chief-programmer teams.
This is considered a capstone course.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC436 Programming Programming Kotlin, Swift, 3 Project
- Handheld Java
Systems
Overview Fundamental principles and concepts that underlie the programming of handheld systems, such as mobile phones, personal
digital assistants, and tablet computers. Particular emphasis will be placed on concepts such as limited display size, power, memory and
CPU speed; and new input modalities, where handheld systems differ substantially from non-handheld systems, and thus require special
programming tools and approaches.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC451 Design and Math MATLAB 4 Exam
Analysis of
-
Computer
Algorithms
Overview Fundamental techniques for designing efficient computer algorithms, proving their correctness, and analyzing their
complexity. General topics include sorting, selection, graph algorithms, and basic algorithm design paradigms (such as divide-and-
conquer, dynamic programming and greedy algorithms), lower bounds and NP-completeness. If you enjoyed CMSC351, you will likely
enjoy this class.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC452 Elementary Math MATLAB 4 Exam
- Theory of
Computation
https://undergrad.cs.umd.edu/4xxinfo#video 8/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
Overview Techniques are developed to determine the difficulty of a problem relative to a model of computation. Topics include Finite
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Automata, P, NP, decidability, undecidability, and communication complexity.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC454 Algorithms for Math MATLAB 4 Exam
-
Data Science
Overview Topics include fundamental methods for processing a high volume of data. Methods include stream processing, locally
sensitive hashing, web search methods, page rank computation, network and link analysis, dynamic graph algorithms, and methods to
handle high dimensional data/dimensionality reduction.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
- CMSC456 Cryptology Math MATLAB 4 Exam
Overview The theory, application, and implementation of mathematical techniques used to secure modern communications. Topics
include symmetric and public-key encryption, message integrity, hash functions, block-cipher design and analysis, number theory, and
digital signatures.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC457 Intro to Math MATLAB 4 Exam
- Quantum
Computing
Overview The theory, application, and implementation of mathematical techniques used to secure modern communications. Topics
include symmetric and public-key encryption, message integrity, hash functions, block-cipher design and analysis, number theory, and
digital signatures.
https://undergrad.cs.umd.edu/4xxinfo#video 9/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC460 Computational Math MATLAB 5 Exam
-
Methods
Overview Basic computational methods for interpolation, least squares, approximation, numerical quadrature, numerical solution of
polynomial and transcendental equations, systems of linear equations and initial value problems for ordinary differential equations.
Emphasis on methods and their computational properties rather than their analytic aspects. Intended primarily for students in the
physical and engineering sciences.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC466 Introduction to Math MATLAB 5 Exam
- Numerical
Analysis
Overview Floating point computations, direct methods for linear systems, interpolation, solution of nonlinear equations.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC471 Introduction to Programming JavaScript 2 or 3 Project
- Data
Visualization
Overview Topics include the techniaues and algorithms used for creating effective data visualizations ased on principles from graphic
design, perceptual psychology, and cognitive science. Design and build interactive visualizations for the web using the Data-Drive
Documents framework.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
https://undergrad.cs.umd.edu/4xxinfo#video 10/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
CMSC472 Introduction tUoNIVEPRroSgIrTaYm OmFin MgARYLAND (HTPTyPtSh:o/n/UMD.EDU)Elective Project
-
Deep Learning
Overview This course is an elementary introduction to a machine learning technique called deep learning, as well as its applications to
variety of domains. Along the way, the course also provides an intuitive introduction to machine learning such as simple models, learning
paradigms, optimization, overfitting, importance of data, training caveats, etc. The assignments explore key concepts and simple
applications, and the final project allows an in-depth exploration of a particular application area.
Recommended Pairings CMSC411, CMSC451, CMSC452, CMSC454, CMSC456, CMSC457, CMSC474, CMSC460, CMSC466
CMSC473 Capstone in Programming Some Elective Project
- Machine Flexibility
Learning
Overview Semester-long project course in which each student will identify and carry out a project related to machine learning, with the
goal of publishing a research paper or software tool. Students will be paired with project advisors the UMD faculty or the industry.
Recommended Pairings All
CMSC474 Introduction to Math MATLAB 4 Exam
- Computational
Game Theory
Overview Game theory deals with interactions among agents (either human or computerized) whose objectives and preferences may
differ from the objectives and preferences of other agents. This course will provide a comprehensive introduction to game theory,
concentrating on its computatonal aspects.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
CMSC475 Combinatorics Math MATLAB Elective Exam
- and Graph
Theory
https://undergrad.cs.umd.edu/4xxinfo#video 11/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
Overview General enumeration mUetNhIoVdEsR, dSiIffTeYre OncFe M eqAuRaYtiLoAnsN, Dge (nHeTraTtPinSg: /f/uUnMctDio.nEsD. UEl)ements of graph theory, matrix representations
of graphs, applications of graph theory to transport networks, matching theory and graphical algorithms.
Recommended Pairings CMSC411, CMSC412, CMSC414, CMSC416, CMSC417, CMSC420, CMSC421, CMSC422, CMSC423, CMSC424,
CMSC426, CMSC427, CMSC470, CMSC471, CMSC420, CMSC433, CMSC434, CMSC435, CMSC436, CMSC471
Showing 1 to 32 of 32 entries
https://undergrad.cs.umd.edu/4xxinfo#video 12/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/4xxinfo#video 13/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
Frequently Asked Questions
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/4xxinfo#video 14/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Which degree track/specialization am I following?
Some CS major specializations have more strict requirements than others. For example, Data Science will require
CMSC320, whereas CMSC320 will be an elective for General track or a Cybersecurity specialization. The degree
requirements for each specialization are listed here. Check with your advisor if youʼre unsure which upper level courses
your specialization requires.
What about prerequisites?
Pay close attention to course descriptions on Testudo for prerequisities, the upper level courses that are required for
some upper level CMSC courses. For example, if you want to take CMSC422 Introduction to Machine Learning, be sure that
your 4 year plan includes CMSC320 before the semester you plan to take CMSC422.
Which courses will help me meet my “big picture” or long
term goals?
Youʼll want to choose courses that will challenge you and allow you to explore your specific interests as well as potentially
open opportunities when interviewing for internships and jobs.
This is a great conversation to have with your advisor! Let them know what your interests are and what you want to
explore. They can help you find courses that would help prepare you.
https://www.cs.umd.edu/researcharea (https://www.cs.umd.edu/researcharea) is a good place to take a look at different
areas of study in the department, and to see which faculty members are focused on which research areas.
https://undergrad.cs.umd.edu/4xxinfo#video 15/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
Iʼm not sure what specific area of CS I like yet.
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Thatʼs ok! Think back to what CMSC lower level courses you liked. If you liked CMSC216, you might like CMSC41x area
courses, for example. Love CMSC330? Try CMSC43x courses. Do you like the theory side of things, like CMSC250 /
CMSC351? Try CMSC45x theory area courses. The reality is that other factors, such as your schedule, your registration
date, prereqs., and course availability will impact what courses you take, too. Run your ideas by your advisor if you get
stuck.
Which courses will help strengthen areas I may not be
very strong in?
Itʼs important to choose upper level courses where you are most interested and where you feel you can be successful. Also
keep in mind some courses that may help close the gaps. For example, you may feel confident in your resume and
technical skills, but how about the soft skills involved in interviewing? Consider CMSC389O: The Coding Interview.
Which faculty best match my learning style?
Try to choose your section based not only on time the class is offered, but also by instructor. Think about how you learn
best and try to choose faculty that will be a good fit for you. If youʼre unfamiliar with the professor, refer to the Class
Webpages (http://www.cs.umd.edu/class/) to see syllabi and instructor contact information.
How do I make sure my workload isnʼt too heavy?
The main thing to do is balance Theory with Programming courses. Be careful not to overload yourself with all heavy
i lli t i th / th k Ai f b l d h d l ibl Y d i
https://undergrad.cs.umd.edu/4xxinfo#video 16/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
programming courses or all intensive theory/math course work. Aim for as balanced a schedule as possible. Your advisor
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
can help you determine which 4XX courses are group-work heavy, have one semester-long project, are the most rigorous,
theoretical, etc.
How much should I rely on classmatesʼ opinions and
advice about classes?
Definitely consult your classmates and ask your upperclassmen peers about their experiences but ideally that wonʼt be
your only source of information! Classmates may be willing to share vital information straight from the student
perspective. The CS Piazza page is one place you can connect.
And of course, connect with your advisor!
We are an important resource for you as you pick classes. Donʼt hesitate to reach out via email with any questions.
Resources
BS/MS Program: https://undergrad.cs.umd.edu/combined-bsms-program (https://undergrad.cs.umd.edu/combined-
bsms-program)
CMSC499A Information (Undergrad Research for Academic Credit): https://undergrad.cs.umd.edu/research-professorial-
faculty-cmsc499a (https://undergrad.cs.umd.edu/research-professorial-faculty-cmsc499a)
CS Research Areas and Faculty: https://www.cs.umd.edu/research (https://www.cs.umd.edu/research)
CS Class Websites: http://www.cs.umd.edu/class/ (http://www.cs.umd.edu/class/)
https://undergrad.cs.umd.edu/4xxinfo#video 17/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/4xxinfo#video 18/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Intro Video 4xx Course Info FAQ
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/4xxinfo#video 19/204/12/25, 3:02 AM What 4XX Should I Take?! | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/4xxinfo#video 20/20

================================================================================
Filename: DataScience_Degree_Requirements.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

4/12/25, 3:19 AM Data Science Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Data Science Degree Requirements
Data Science is an emerging field encapsulating interdisciplinary activities, used to create data-centric products, applications or programs
that address specific scientific, socio-political, or business questions. It is making deep inroads in industry, government, health, and
journalism. Due to the growing need for applying data science techniques in these and other domains, there is a significant shortage of
trained data scientists. Data Science incorporates practices from a variety of fields in computer science, chiefly machine learning,
statistics, databases, systems, algorithms, and visualization. The undergraduate data science specialization enables students to get the
broad variety of skills needed to be successful data scientists.
Students looking to pursue the data science specialization are required to complete the lower level courses (MATH140, MATH141,
CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT400 and MATH240), and the upper
level concentration requirements. The difference in the specialization is the upper level computer science courses.
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area
requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas
and Electives
(/sites/undergrad.cs.umd.edu/files/images/uploads/2022/07/2208%20Computer%20Science%20Distributive%20Areas%20and%20Electives.pd
document.
The five areas are:
Area 1: Systems;
https://undergrad.cs.umd.edu/data-science-degree-requirements 1/44/12/25, 3:19 AM Data Science Degree Requirements | Undergraduate Computer Science at UMD
Area 2: Information Processing;
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Area 3: Software Engineering and Programming Languages;
Area 4: Theory;
Area 5: Numerical Analysis.
Required
MATH 240 (4) Linear Algebra or
MATH 461 (3) Linear Algebra for Scientists and Engineers or
MATH 341 (4) Multivariable Calculus, Linear Algebra, Differential Equations II*
STAT 400 (3) Applied Probability and Statistics I
CMSC 320 (3) Introduction to Data Science
CMSC 422 (3) Introduction to Machine Learning *
CMSC 424 (3) Database Design
Choose one course from:
CMSC 420 (3) Data Structures
CMSC 421 (3) Introduction to Artificial Intelligence
CMSC 423 (3) Bioinformatic Algorithms, Databases, and Tools
CMSC 425 (3) Game Programming
CMSC 426 (3) Computer Vision
CMSC 427 (3) Computer Graphics *
CMSC 470 (4) Natural Language Processing *
Choose one course from:
CMSC 451 (3) Design and Analysis of Computer Algorithms
CMSC 454 (3) Algorithms for Data Science
CMSC 460 (3) Computational Methods
https://undergrad.cs.umd.edu/data-science-degree-requirements 2/44/12/25, 3:19 AM Data Science Degree Requirements | Undergraduate Computer Science at UMD
Choose two courses from:
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
CMSC 411 (3) Computer Systems Architecture
CMSC 412 (4) Operating Systems *
CMSC 414 (3) Computer and Network Security
CMSC 417 (3) Computer Networks
CMSC 430 (3) Introduction to Compilers
CMSC 433 (3) Programming Language Technologies and Paradigms
CMSC 434 (3) Introduction to Human-Computer Interaction
CMSC 435 (3) Software Engineering *
*Indicates this course has unique prerequisites.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
https://undergrad.cs.umd.edu/data-science-degree-requirements 3/44/12/25, 3:19 AM Data Science Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/data-science-degree-requirements 4/4

================================================================================
Filename: MachineLearning_Degree_Requirements.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

4/12/25, 3:19 AM Machine Learning Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Machine Learning Degree
Requirements
Students looking to pursue the machine learning specialization are required to complete the lower level courses (MATH140, MATH141,
CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT4xx with a MATH141 prerequisite,
and MATH240), and the upper level concentration requirements. The difference in the specialization is the upper level computer science
courses. Students must fulfill their computer science upper level course requirements from at least 3 areas.
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area
requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas
and Electives
(/sites/undergrad.cs.umd.edu/files/images/uploads/2022/07/2208%20Computer%20Science%20Distributive%20Areas%20and%20Electives.pd
document.
The five areas are:
Area 1: Systems;
Area 2: Information Processing;
Area 3: Software Engineering and Programming Languages;
https://undergrad.cs.umd.edu/machine-learning-degree-requirements 1/34/12/25, 3:19 AM Machine Learning Degree Requirements | Undergraduate Computer Science at UMD
Area 4: Theory;
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Area 5: Numerical Analysis.
Required
MATH 240 (4) Linear Algebra or
MATH 461 (3) Linear Algebra for Scientists and Engineers or
MATH 341 (4) Multivariable Calculus, Linear Algebra, Differential Equations II*
CMSC 320 (3) Introduction to Data Science
CMSC 421 (3) Introduction to Artificial Intelligence
CMSC 422 (3) Introduction to Machine Learning *
Choose two courses from:
CMSC 426 (3) Computer Vision *
CMSC/AMSC 460 (3) Computational Methods * or
CMSC/AMSC 466 (3) Introduction to Numerical Analysis I * or
MATH 401 (3) Applications of Linear Algebra *
CMSC 470 (3) Natural Language Processing *
CMSC 472 (3) Introduction to Deep Learning (formerly CMSC 498L)
CMSC 473 (3) Capstone in Machine Learning (formerly CMSC 498P)
CMSC 474 (3) Introduction to Computational Game Theory
CMSC 476 (3) Robotics and Perception
Upper Level Elective Courses
Six credits from CMSC 3XX or CMSC 4XX excluding CMSC330 and CMSC351
*Indicates this course has unique prerequisites.
https://undergrad.cs.umd.edu/machine-learning-degree-requirements 2/34/12/25, 3:19 AM Machine Learning Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/machine-learning-degree-requirements 3/3

================================================================================
Filename: Degree_Requirements_CS_Major_Info_(All Tracks).pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

4/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Degree Requirements for CS Major
Required Lower Level Coursework Upper Level Concentration LEP Benchmarks Degree Requirements
Academic Planning Forms
Much of the knowledge at the early stage of the degree program is cumulative. To ensure incoming
first-year and transfer students start with the appropriate courses, the department offers exemption
exams for CMSC131, CMSC132, CMSC216, and CMSC250. Students who have had CS courses prior to
starting at Maryland are encouraged to take our exemption exams
(http://undergrad.cs.umd.edu/node/24).
Required Lower Level Coursework
All students, regardless of specialization, are required to take the following lower level coursework:
Math Requirements Computer Science Requirements
https://undergrad.cs.umd.edu/degree-requirements-cs-major 1/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
MATH140 (4) Calculus I UNIVERSITY OF MARYLAND (HCTMTSPCS1:/3/U1 M(4)D O.EbDjeUct)-Oriented Programming I* or CMSC133
MATH141 (4) Calculus II (2) Object-Oriented Programming I Beyond Fundamentals
STAT4XX (3) This course must have a prerequisite of CMSC132 (4) Object-Oriented Programming II*
MATH141; Cannot be crosslisted with CMSC CMSC216 (4) Introduction to Computer Systems*
MATH/STATXXX (3/4) This course must have a prerequisite CMSC250 (4) Discrete Structures*
of MATH141; Cannot be cross-listed with CMSC CMSC330 (3) Organization of Programming Languages
CMSC351 (3) Algorithms
* Data Science, Machine Learning, and Quantum Information
students must take a MATH Linear Algebra course (e.g. * An exemption exam (http://undergrad.cs.umd.edu/node/24) is
MATH240, MATH341 [must complete MATH340 first], or available for this course.
MATH461)
Upper Level Concentration
All students, regardless of specialization, must complete 12 credit hours of 300 - 400 level courses in one discipline outside of
Computer Science with a cumulative GPA of 1.7 or higher in this coursework. No course that is in, or crosslisted as, CMSC may be
counted in this requirement (e.g., AMSC460). Only 1 independent study or experiential learning course may be used. Students who
are pursuing a minor or a double major/dual degree may use those credits in this area with the exception of a few majors/disciplines
(e.g., Information Science). Please consult with your advisor to ensure the courses you plan to take to ensure they will satisfy this
requirement. For a detailed breakdown of accepted Upper-Level Concentration courses please click here
(https://undergrad.cs.umd.edu/upper-level-concentration).
Limited Enrollment Program (LEP) Benchmarks*
* These benchmarks apply to new freshman (matriculated Fall 2019 and later), new transfer students, and internal transfers changing
majors within the University *
https://undergrad.cs.umd.edu/degree-requirements-cs-major 2/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
All students will undergo a benchmark review at 45 and 75 credits. Students in the major are required to complete the following
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
courses:
45-Credit Benchmark Requirements
Completion of CMSC 131 with a minimum grade of C-
Completion of CMSC 132 with a minimum grade of C-
Completion of MATH 140 with a minimum grade of C-
A minimum grade point average of 2.0 in all courses taken at the University of Maryland and all other institutions
75-Credit Benchmark Requirements
Completion of CMSC 330 with a minimum grade of C-
Completion of CMSC 351 with a minimum grade of C-
Completion of a STAT4XX course (prerequisite: MATH141) with a minimum grade of C- or MATH/AMSC/STAT course
(prerequisite: MATH141) with a minimum grade of C-
A minimum grade point average of 2.0 in all courses taken at the University of Maryland and all other institutions
Please contact your advisor if you have concerns about meeting your benchmarks.
Degree Requirements
Students within the Computer Science major may choose to pursue our General Track or one of four specializations offered. Students
are not required to pursue a specialization but may find one best fits their interests. Students interested in declaring a specialization
should speak with their assigned academic advisor.
Students, regardless of specialization, are required to fulfill their computer science upper level course requirements from at least 3
areas. Courses that fall within each area are listed in the General Track degree requirements. The five areas are: Area 1: Systems, Area
2: Information Processing, Area 3: Software Engineering and Programming Languages, Area 4: Theory, Area 5: Numerical Analysis.
https://undergrad.cs.umd.edu/degree-requirements-cs-major 3/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
For tracks allowing CMSC electives, three 1-credit CMSC STIC courses are equivalent to one 3-credit 300-400 level elective course. Visit
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
UMD's official STICs website (https://stics.umd.edu/index.html) and our FAQ page (https://undergrad.cs.umd.edu/faq) for more
information on STICs and see your assigned advisor for information on how STICs can fit into your specialization.
General Track Cybersecurity
Students pursuing the general track are able to take The Cybersecurity Specialization allows students to have
courses building upon their broad interests in computer the necessary background to address myriad cybersecurity
science from Systems to Numerical Analysis. issues relevant to government, industry, and academic
careers.
Learn More (/general-track-degree-requirements)
Learn More (/cybersecurity-degree-requirements)
Data Science Quantum Information
Data Science is an emerging field encapsulating The Quantum Information specialization allows students to
interdisciplinary activities, used to create data-centric capitalize on the recent advances toward the experimental
products, applications or programs that address specific realization of quantum computers together with significant
scientific, socio-political, or business questions. ongoing work on the theory of quantum computing.
Learn More (/data-science-degree-requirements) Learn More (/quantum-information-degree-requirements)
Machine Learning
https://undergrad.cs.umd.edu/degree-requirements-cs-major 4/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
Machine learning is a rapidly developing field within
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
computer science. It is the study of algorithms that learn
from data and experience.
Learn More (/machine-learning-degree-requirements)
Academic Planning Forms: Fall 2024 and later
Below are degree planning documents that are commonly used by students in the Computer Science department. If you have any
questions, please e-mail csadvising-ugrad@umd.edu (mailto:csadvising-ugrad@umd.edu).
General, Cybersecurity, Data Science, Machine Learning, Quantum Information Planning Forms [Google Sheet
(https://docs.google.com/spreadsheets/d/1tJ4_K0Utbb1RzHjuRQRNBf2B-aoqrzEA16YGg3opxhI/edit?usp=sharing) | PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/08/4-year-plan-blank-template%20%283%29.pdf)]
CMSC BS/MS Academic Plan [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/02/2401%20BS%20MS%20Program%20Academic%20Plan.pdf)]
CMSC Distributive Areas and Electives [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Distributive%20Areas%20and%20Ele
Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Distributive%20Areas%20and%20Ele
Academic Planning Forms: Spring 2024 and earlier
Below are degree planning documents in the PDF/Excel format that were commonly used by students in the Computer Science
department. Please note that the forms are only for current CS students. Please use the academic planning document on the Google
Sheet above if you will start the CS Major in the Fall 2024 semester or later.
CMSC General Track Academic Planning Form [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20General%20Track.pdf) | Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20General%20Track.xlsx)]
https://undergrad.cs.umd.edu/degree-requirements-cs-major 5/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
CMSC Cybersecurity Track Academic Planning Form [PDF
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Cybersecurity%20Specialization.pdf)
| Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Cybersecurity%20Specialization.xlsx)
CMSC Data Science Academic Planning Form [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Data%20Science%20Specialization.p
| Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Data%20Science%20Specialization.xl
CMSC Machine Learning Academic Planning Form [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Machine%20Learning%20Specializati
| Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Machine%20Learning%20Specializati
CMSC Quantum Information Planning Form [PDF
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Quantum%20Computing%20Speciali
| Excel
(/sites/undergrad.cs.umd.edu/files/images/uploads/2024/04/2401%20Computer%20Science%20Quantum%20Computing%20Speciali
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
https://undergrad.cs.umd.edu/degree-requirements-cs-major 6/74/12/25, 2:47 AM Degree Requirements for CS Major | Undergraduate Computer Science at UMD
University of Maryland
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/degree-requirements-cs-major 7/7

================================================================================
Filename: QuantumInformation_Degree_Requirements.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

4/12/25, 3:19 AM Quantum Information Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Quantum Information Degree
Requirements
Students looking to pursue the quantum information specialization are required to complete the lower level courses (MATH140, MATH141,
CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, STAT4xx with a MATH141 prerequisite,
and MATH240), and the upper level concentration requirements. The difference in the specialization is the upper level computer science
courses. Students must fulfill their computer science upper level course requirements from at least 3 areas.
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area
requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas
and Electives
(/sites/undergrad.cs.umd.edu/files/images/uploads/2022/07/2208%20Computer%20Science%20Distributive%20Areas%20and%20Electives.pd
document.
The five areas are:
Area 1: Systems;
Area 2: Information Processing;
Area 3: Software Engineering and Programming Languages;
https://undergrad.cs.umd.edu/quantum-information-degree-requirements 1/54/12/25, 3:19 AM Quantum Information Degree Requirements | Undergraduate Computer Science at UMD
Area 4: Theory;
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Area 5: Numerical Analysis.
Required
MATH 240 (4) Linear Algebra or
MATH 461 (3) Linear Algebra for Scientists and Engineers or
MATH 341 (4) Multivariable Calculus, Linear Algebra, Differential Equations II*
CMSC 457 (3) Introduction to Quantum Computing *
PHYS 467 (3) Introduction to Quantum Technology *
Choose four courses from:
(Note: two of those four courses must fall in two separate areas outside of Area 4)
Area 1: Systems
CMSC 411 (3) Computer Systems Architecture
CMSC 412 (4) Operating Systems *
CMSC 414 (3) Computer and Network Security
CMSC 416 (3) Introduction to Parallel Computing
CMSC 417 (3) Computer Networks
Area 2: Information Processing
CMSC 402 (3) Bioinformatic Algorithms and Methods
CMSC 420 (3) Data Structures
CMSC 421 (3) Introduction to Artificial Intelligence
CMSC 422 (3) Machine Learning *
CMSC 423 (3) Bioinformatic Algorithms, Databases, and Tools
CMSC 424 (3) Database Design
https://undergrad.cs.umd.edu/quantum-information-degree-requirements 2/54/12/25, 3:19 AM Quantum Information Degree Requirements | Undergraduate Computer Science at UMD
CMSC 426 (3) Computer Vision *
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
CMSC 427 (3) Computer Graphics *
CMSC 470 (3) Introduction to Natural Language Processing *
CMSC 471 (3) Introduction to Data Visualization (Area 2 OR Area 3)
CMSC 472 (3) Introduction to Deep Learning *
Area 3: Software Engineering and Programming Languages
CMSC 430 (3) Introduction to Compilers
CMSC 433 (3) Programming Language Technologies and Paradigms
CMSC 434 (3) Introduction to Human-Computer Interaction
CMSC 435 (3) Software Engineering *
CMSC 436 (3) Hand Held Programming Devices
CMSC 471 (3) Introduction to Data Visualization (Area 2 OR Area 3)
Area 4: Theory
CMSC 451 (3) Design and Analysis of Computer Algorithms
CMSC 452 (3) Elementary Theory of Computation
CMSC 454 (3) Algorithms for Data Science
CMSC 456 (3) Cryptology *
CMSC 474 (3) Introduction to Computational Game Theory
Area 5: Numerical Analysis (choose one)
CMSC 460 (3) Computational Methods (credit will only be given for CMSC 460 or CMSC 466) *
CMSC 466 (3) Introduction to Numerical Analysis (credit will only be given for CMSC 466 or CMSC 460) *
Upper Level Elective Course(s)
Three credits from CMSC3XX or CMSC4XX excluding CMSC330 and CMSC351
*Indicates this course has unique prerequisites.
https://undergrad.cs.umd.edu/quantum-information-degree-requirements 3/54/12/25, 3:19 AM Quantum Information Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/quantum-information-degree-requirements 4/54/12/25, 3:19 AM Quantum Information Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/quantum-information-degree-requirements 5/5

================================================================================
Filename: Upper_Level_Courses_And_Electives.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Computer Science - Distributive Areas and Electives Effective Fall 2024
Area 1: Systems Course Credits Area 4: Theory Course Credits
Computer Systems Architecture CMSC 411 3 Design and Analysis of Computer Algorithms CMSC 451 3
Operating Systems CMSC 412 4 Elementary Theory of Computation CMSC 452 3
Computer and Network Security CMSC 414 3 Algorithms for Data Science CMSC 454 3
Introduction to Parallel Computing CMSC 416 3 Cryptology CMSC 456 3
Computer Networks CMSC 417 3 Introduction to Quantum Computing CMSC 457 3
CMSC 498B 3 Introduction to Computational Game Theory CMSC 474 3
Cloud Computing (Fall 2024)
CMSC 498C 3
Blockchains, Applied Cryptography, and Cryptocurrency (Spring 2024)
Real World Computer Security (Fall 2022) CMSC 498I 3 Area 5: Numerical Analysis Course Credits
Big Data Systems (Spring 2018/Spring 2019) CMSC 498K 3 Computational Methods CMSC460 3
Intro to Software-defined Radio and Wireless Communications (Fall 2018/Fall 2019) CMSC 498X 3 Introduction to Numerical Analysis CMSC466 3
Introduction to Parallel Computing (Fall 2020) CMSC 498X 3
Upper Level Electives Course Credits
Area 2: Information Processing Course Credits Introduction to Data Science CMSC320 3
Data Structures CMSC 420 3 Web Application Development with JavaScript CMSC335 3
Introduction to Artificial Intelligence CMSC 421 3 Student Initiated Courses (STICs) CMSC388/9 1-2
Introduction to Machine Learning CMSC 422 3 Teaching Techniques for Computer Science (TAs Only) CMSC395 1
Bioinformatic Algorithms, Databases and Tools CMSC 423 3 Computer Science Honors Seminar (Dept Honors Only) CMSC396H 1
Database Design CMSC 424 3 Algorithms for Geospatial Computing CMSC401 3
Computer Vision CMSC 426 3 Game Programming CMSC425 3
Computer Graphics CMSC 427 3 Capstone in Machine Learning CMSC473 3
Introduction to Natural Language Processing CMSC 470 3 Combinatorics and Graph Theory CMSC475 3
Introduction to Data Visualization CMSC 471 3 Robotics and Perception CMSC476 3
Introduction to Deep Learning CMSC 472 3 Quantum Boot Camp CMSC488A 1
Robotics (Fall 2023) CMSC 498E 3 Special Topics in CS (courses not otherwise listed in a distributive area) CMSC498 1-3
Advances in XR (Spring 2022) CMSC 498F 3 Independent Study CMSC498A 1-3
Advanced Topics in Machine Learning (Fall 2018) CMSC 498V 3 Independent Undergraduate Research CMSC499A 1-3
Statistical Inference and Machine Learning Methods for Genomics Data (Spring 2024) CMSC 498Y 3
Differentiable Programming (Fall 2023) CMSC 498Z 3
Area 3: Software Engineering and Programming Languages Course CreditsIntroduction to Compilers CMSC 430 3
Programming Language Technologies and Paradigms CMSC 433 3
Introduction to Human-Computer Interaction CMSC 434 3
Software Engineering CMSC 435 3
Programming Handheld Systems CMSC 436 3
Introduction to Data Visualization CMSC 471 3College of Computer, Mathematical and Natural Sciences
Computer Science - General Track Effective Fall 2024
This is a generalized academic plan, not an official audit
Year 1 Fall Spring
Course Credit Grade Course Credit Grade
CMSC131 or CMSC141 4 CMSC132 or CMSC142 4
Gateway & Benchmark 1
MATH140 (FSMA, FSAR) 4 MATH141 4
Requirements: CMSC131,
CMSC132, and MATH140 ENGL101 (FSAW) 3 Natural Science w/ Lab (DSNL) 4
must be completed with a C-
Oral Comm (FSOC) 3 History & Social Science (DSHS)* 3
or higher by 45 credits (AP/IB
credits excluded)
CMSC100 1
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
CMSC216 4 CMSC330 3
Benchmark 2 Requirements:
CMSC250 4 CMSC351 3
CMSC330, CMSC351, and
MATH or STAT must be MATH/STAT/AMSC 3 or 4 STAT4XX 3
completed with a C- or higher
Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
by 75 credits (AP/IB credits
excluded)
Humanities (DSHU)* 3
Total 14 or 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC4XX 3
CMSC4XX 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 Scholarship in Practice (DSSP)* 3
Big Question (SCIS) 3 Big Question (SCIS) 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC Elective 3
CMSC Elective 3 UL Concentration 3
UL Concentration 3 UL Concentration 3
Plural Societies (DVUP) or
UL Concentration 3 Cultural Competence (DVCC)* 3
Plural Societies (DVUP)* 3 Elective 3 or 4
Total 15 Total 15 or 16
*All students must complete two Distributive Studies courses that are approved for Big Question courses. The Understanding Plural Societies (UP) and Cultural Competence (CC) courses may
also fulfill Distributive Studies categories.
**Students may take any Professional Writing course to fulfill this requirement.

================================================================================
Filename: DataScience_Track_Planner.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Comp. Sci. - Data Science Track
Effective Fall 2024 This is a curriculum tracking sheet, not an official audit
Name___________________________________________________ UID__________________________________
Date Entered Major__________________ Second degree/major________________________ Is CMNS first major? Y N
General Education Requirements Major Requirements
Fundamental Studies Lower Level Requirements (Must pass with a grade of C- or higher)
Requirement Course Credits Completed? Title Course Credits Completed?
AW Academic Writing (before 30 credits) 3 Calculus I MATH 140 4
PW Professional Writing (after 60 credits) 3 Calculus II MATH 141 4
OC Oral Communication 3 Object-Oriented Programming I
CMSC 131 or CMSC 141 4
Distributive Studies Programming with Purpose I: Data-Centric Computing
Requirement Course Credits Completed? Object-Oriented Programming II
CMSC 132 or CMSC 142 4
NL Natural Science with Lab 4 Programming with Purpose II: Data Structures and Algorithms
NS Natural Science 3 or 4 Introduction to Computer Systems CMSC 216 4
HS History and Social Sciences 3 Discrete Structures CMSC 250 4
HS History and Social Sciences 3 Organization of Programming Languages CMSC 330 3
HU Humanities 3 Algorithms CMSC 351 3
HU Humanities 3 Applied Probability and Statistics I STAT 400 3
MATH 240 or MATH 341 or
SP Scholarship in Practice (non-major) 3 Linear Algebra course 4
MATH 461
SP Scholarship in Practice (non-major) 3
Big Question Upper Level Courses (Must pass with a grade of C- or higher)
Overlap with Distributive Studies and/or Big Question Students must fulfill their computer science upper level course requirements from at least 3 areas
Requirement Course Credits Completed? Required: Course Credits Completed?
IS Big Question Introduction to Data Science CMSC 320 3
IS Big Question Introduction to Machine Learning * CMSC 422 3
Diversity Database Design CMSC 424 3
Can overlap with Distributive Studies or Big Question
Requirement Course Credits Completed? Choose one course from: Course Credits Completed?
UP Understanding Plural Societies Data Structures CMSC 420 3
UP
Introduction to Artificial Intelligence CMSC 421 3
Understanding Plural Societies or
or
Cultural Competence
Bioinformatic Algorithms, Databases and Tools CMSC 423 3
CC
Gen Ed Mathematics (MA) and Analytic Reasoning (AR) are satisfied by major requirements.
Game Programming * CMSC 425 3
Computer Vision CMSC 426 3
Upper Level Concentration Computer Graphics * CMSC 427 3
Natural Language Processing * CMSC 470 3
Students must complete a minimum of 12 credit hours of 300 - 400 level courses in
one discipline outside of Computer Science. No course that is in, or cross-listed as,
Choose one course from: Course Credits Completed?
CMSC may be counted in this requirement. Only 1 independent study or experiential
learning course may be used. Students who are pursuing a minor or a second major
Design and Analysis of Computer Algorithms CMSC 451 3
can use those credits in this area. Consult with your academic advisor to ensure
Algorithms for Data Science CMSC 454 3
each course you plan to take will satisfy this area.
Computational Methods * CMSC 460 3
Course Credits Completed?
Choose two courses from: Course Credits Completed?
Computer Systems Architecture CMSC 411 3
Operating Systems * CMSC 412 4
Computer and Network Security CMSC 414 3
Computer Networks CMSC 417 3
Elective Credits Introduction to Compilers CMSC 430 3
Programming Language Technologies and Paradigms CMSC 433 3
Students must take enough elective courses in any discipline(s) they choose to
reach the total number of 120 credits required for graduation. Students who are Introduction to Human-Computer Interaction CMSC 434 3
pursuing a minor or a second major can use those credits in this area.
Software Engineering * CMSC 435 3
Course Credits Completed? * Indicates the course has unique prerequisitesCollege of Computer, Mathematical and Natural Sciences
Computer Science - Data Science Track Effective Fall 2024
This is a generalized academic plan, not an official audit
Year 1 Fall Spring
Course Credit Grade Course Credit Grade
CMSC131 or CMSC141 4 CMSC132 or CMSC142 4
Gateway & Benchmark
MATH140 (FSMA, FSAR) 4 MATH141 4
1 Requirements:
CMSC131, CMSC132,
ENGL101 (FSAW) 3 Natural Science w/ Lab (DSNL) 4
and MATH140 must be
completed with a C- or Oral Comm (FSOC) 3 History & Social Science (DSHS)* 3
higher by 45 credits
CMSC100 1
(AP/IB credits excluded)
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
CMSC216 4 CMSC330 3
Benchmark 2
CMSC250 4 CMSC351 3
Requirements:
CMSC330, CMSC351,
MATH240 or MATH341 or MATH461 3 or 4 STAT400 3
and MATH or STAT must
be completed with a C- Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
or higher by 75 credits
Humanities (DSHU)* 3
(AP/IB credits excluded)
Total 14 or 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
CMSC320 3 CMSC422 3
CMSC424 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 Big Question (SCIS) 3
Big Question (SCIS) 3 Scholarship in Practice (DSSP)* 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC4XX 3
CMSC4XX 3 UL Concentration 3
UL Concentration 3 UL Concentration 3
Plural Societies (DVUP) or
UL Concentration 3 Cultural Competence (DVCC)* 3
Plural Societies (DVUP)* 3 Elective 3 or 4
Total 15 Total 15 or 16
*All students must complete two Distributive Studies courses that are approved for Big Question courses. The Understanding Plural Societies (UP) and Cultural
Competence (CC) courses may also fulfill Distributive Studies categories.
**Students may take any Professional Writing course to fulfill this requirement.

================================================================================
Filename: Cybersecurity_Degree_Requirements.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

4/12/25, 3:19 AM Cybersecurity Degree Requirements | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Cybersecurity Degree Requirements
The Cybersecurity Specialization allows students to have the necessary background to address myriad cybersecurity issues relevant to
government, industry, and academic careers. Students interested in pursuing the cybersecurity specialization take the same foundational
courses in computer science, but must complete a set of upper-level elective courses in order to ensure they receive in-depth education in
topics such as network and distributed system security, operating systems security, and cryptography.
Students looking to pursue the cybersecurity specialization are required to complete the lower level courses (MATH140, MATH141,
CMSC131, CMSC132, CMSC216, CMSC250), the additional required courses (CMSC330, CMSC351, MATH/STATXXX and STAT4xx beyond
MATH141), and the upper level concentration. The difference in the specialization is the upper level computer science courses.
Students must fulfill their computer science upper level course requirements from at least 3 areas. Students may fulfill an area
requirement under the Upper Level Elective Courses requirement. Courses that fall within each area are listed in the CS Distributive Areas
and Electives
(/sites/undergrad.cs.umd.edu/files/images/uploads/2022/07/2208%20Computer%20Science%20Distributive%20Areas%20and%20Electives.pd
document.
The five areas are:
Area 1: Systems;
Area 2: Information Processing;
Area 3: Software Engineering and Programming Languages;
https://undergrad.cs.umd.edu/cybersecurity-degree-requirements 1/34/12/25, 3:19 AM Cybersecurity Degree Requirements | Undergraduate Computer Science at UMD
Area 4: Theory;
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Area 5: Numerical Analysis.
Required
CMSC 414 (3) Computer and Network Security
CMSC 456 (3) Cryptology *
Choose four courses from:
CMSC 411 (3) Computer Systems Architecture
CMSC 412 (4) Operating Systems *
CMSC 417 (3) Computer Networks
CMSC 430 (3) Introduction to Compilers
CMSC 433 (3) Programming Language Technologies and Paradigms
CMSC 451 (3) Design and Analysis of Computer Algorithms
Upper Level Elective Course
Students must select 3 credits from CMSC 300- or 400-level coursework (not eligible, CMSC330 and CMSC351)
*Indicates this course has unique prerequisites.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
https://undergrad.cs.umd.edu/cybersecurity-degree-requirements 2/34/12/25, 3:19 AM Cybersecurity Degree Requirements | Undergraduate Computer Science at UMD
College Park, MD 20742
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/cybersecurity-degree-requirements 3/3

================================================================================
Filename: Quantum_Track_Planner.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Computer Science - Quantum Information
Effective Fall 2024 This is a curriculum tracking sheet, not an official audit
Name___________________________________________________ UID__________________________________
Date Entered Major__________________ Second degree/major________________________ Is CMNS your primary major? Y N
General Education Requirements Major Requirements
Fundamental Studies Lower Level Requirements (Must pass with a grade of C- or higher)
Requirement Course Credits Completed? Title Course Credits Completed?
AW Academic Writing 3 Calculus I MATH 140 4
PW Professional Writing 3 Calculus II MATH 141 4
OC Oral Communication 3 Object-Oriented Programming I
CMSC 131 or CMSC 141 4
Distributive Studies Programming with Purpose I: Data-Centric Computing
Requirement Course Credits Completed? Object-Oriented Programming II
CMSC 132 or CMSC 142 4
NL Natural Science with Lab 4 Programming with Purpose II: Data Structures and Algorithms
NS Natural Science 3 or 4 Introduction to Computer Systems CMSC 216 4
HS History and Social Sciences 3 Discrete Structures CMSC 250 4
HS History and Social Sciences 3 Organization of Programming Languages CMSC 330 3
HU Humanities 3 Algorithms CMSC 351 3
HU Humanities 3 STAT 4xx (w/ MATH 141 prerequisite) STAT 4XX 3
MATH 240 or MATH 341 or
SP Scholarship in Practice (non-major) 3 Linear Algebra course 4
MATH 461
SP Scholarship in Practice (non-major) 3
Big Question Upper Level Courses (Must pass with a grade of C- or higher)
Overlap with Distributive Studies and/or Big Question Students must fulfill their computer science upper level course requirements from at least 3 areas
Requirement Course Credits Completed? Required: Course Credits Completed?
IS Big Question Introduction to Quantum Computing * CMSC 457 3
IS Big Question Introduction to Quantum Technology * PHYS 467 3
Diversity
Can overlap with Distributive Studies or Big Question
Select four courses from the distributive areas. Two of those four courses must fall in two
separate areas outside of Area 4.
Requirement Course Credits Completed?
UP Understanding Plural Societies
Area 1: Systems Course
Credits Completed?
UP
Understanding Plural Societies Computer Systems Architecture CMSC 411 3
or
or Cultural Competence
CC Operating Systems * CMSC 412 4
Gen Ed Mathematics (MA) and Analytic Reasoning (AR) are satisfied by major requirements.
Computer and Network Security CMSC 414 3
Introduction to Parallel Computing CMSC 416 3
Upper Level Concentration
Computer Networks CMSC 417 3
Real World Computer Security CMSC 498I 3
Students must complete a minimum of 12 credit hours of 300 - 400 level courses in one
Area 2: Information Processing Course
Credits Completed?
discipline outside of Computer Science with an average grade of C- or higher. No course
that is in, or cross-listed as, CMSC may be counted in this requirement. Only 1
Bioinformatic Algorithms and Methods CMSC 402 3
independent study or experiential learning course may be used. Students who are
pursuing a minor or a second major can use those credits in this area.
Data Structures CMSC 420 3
Introduction to Artificial Intelligence CMSC 421 3
Course Credits Completed?
Introduction to Machine Learning * CMSC 422 3
Bioinformatic Algorithms, Databases and Tools CMSC 423 3
Database Design CMSC 424 3
Computer Vision * CMSC 426 3
Computer Graphics * CMSC 427 3
Introduction to Natural Language Processing * CMSC 470 3
Elective Credits
Introduction to Data Visualization (Area 2 OR Area 3) CMSC 471 3
Introduction to Deep Learning * CMSC 472 3
Students must take enough elective courses in any discipline(s) they choose to
Area 3: Software Engineering and Programming Language Course
Credits Completed?
reach the total number of 120 credits required for graduation. Students who are
pursuing a minor or a second major can use those credits in this area.
Introduction to Compilers CMSC 430 3
Programming Language Technologies and Paradigms CMSC 433 3
Course Credits Completed?
Introduction to Human-Computer Interaction CMSC 434 3
Software Engineering * CMSC 435 3
Programming Handheld Systems CMSC 436 3
Introduction to Data Visualization (Area 2 OR Area 3) CMSC 471 3
Area 4: Theory Course
Credits Completed?
Design and Analysis of Computer Algorithms CMSC 451 3
Elementary Theory of Computation CMSC 452 3
Algorithms for Data Science * CMSC 454 3
Cryptology CMSC 456 3
Introduction to Computational Game Theory CMSC 474 3
Area 5: Numerical Analysis Course
Credits Completed?
Computational Methods * CMSC 460 or CMSC
3
466
Introduction to Numerical Analysis *
* Indicates the course has unique prerequisites
Upper Level Elective Courses (Must pass with a grade of C- or higher)
Select 3 credits from CMSC 300- or 400-level courses (not eligible CMSC330 & CMSC351)
Title Course Credits Completed?College of Computer, Mathematical and Natural Sciences
Computer Science - Quantum Information Effective Fall 2024
This is a generalized academic plan, not an official audit
Year 1 Fall Spring
Course Credit Grade Course Credit Grade
CMSC131 or CMSC141 4 CMSC132 or MATH142 4
Gateway & Benchmark
1 Requirements: MATH140 (FSMA, FSAR) 4 MATH141 4
CMSC131, CMSC132,
ENGL101 (FSAW) 3 Natural Science w/ Lab (DSNL) 4
and MATH140 must be
completed with a C- or Oral Comm (FSOC) 3 History & Social Science (DSHS)* 3
higher by 45 credits
CMSC100 1
(AP/IB credits excluded)
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
Benchmark 2 CMSC216 4 CMSC330 3
Requirements:
CMSC250 4 CMSC351 3
CMSC330, CMSC351,
and MATH or STAT MATH240 or MATH341 or MATH461 3 or 4 STAT4XX 3
must be completed
Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
with a C- or higher by
75 credits (AP/IB credits Humanities (DSHU)* 3
excluded)
Total 14 or 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
PHYS467 3 CMSC457 3
CMSC4XX 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 Scholarship in Practice (DSSP)* 3
Big Question (SCIS) 3 Big Question (SCIS) 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC Elective 3
CMSC4XX 3 UL Concentration 3
UL Concentration 3 UL Concentration 3
Plural Societies (DVUP) or Cultural
UL Concentration 3 Competence (DVCC)* 3
Plural Societies (DVUP)* 3 Elective 3 or 4
Total 15 Total 15 or 16
*All students must complete two Distributive Studies courses that are approved for Big Question courses. The Understanding Plural Societies (UP) and Cultural Competence (CC)
courses may also fulfill Distributive Studies categories.
**Students may take any Professional Writing course to fulfill this requirement.

================================================================================
Filename: ML_Track_Planner.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Computer Science - Machine Learning
Effective Fall 2024 This is a curriculum tracking sheet, not an official audit
Name___________________________________________________ UID__________________________________
Date Entered Major__________________ Second degree/major________________________ Is CMNS first major? Y N
General Education Requirements Major Requirements
Fundamental Studies Lower Level Requirements (Must pass with a grade of C- or higher)
Requirement Course Credits Completed? Title Course Credits Completed?
AW 3 Calculus I MATH 140 4
Academic Writing (before 30 credits)
PW 3 Calculus II MATH 141 4
Professional Writing (after 60 credits)
OC Oral Communication 3 Object-Oriented Programming I
CMSC 131 or CMSC 141 4
Distributive Studies Programming with Purpose I: Data-Centric Computing
Requirement Course Credits Completed? Object-Oriented Programming II
CMSC 132 or CMSC 142 4
NL Natural Science with Lab 4 Programming with Purpose II: Data Structures and Algorithms
NS Natural Science 3 or 4 Introduction to Computer Systems CMSC 216 4
HS History and Social Sciences 3 Discrete Structures CMSC 250 4
HS History and Social Sciences 3 Organization of Programming Languages CMSC 330 3
HU Humanities 3 Algorithms CMSC 351 3
HU Humanities 3 STAT 4xx with MATH 141 prerequisite STAT 4XX 3
MATH 240 or MATH 341 or
SP Scholarship in Practice (non-major) 3 Linear Algebra course 4
MATH 461
SP Scholarship in Practice (non-major) 3
Big Question Upper Level Courses (Must pass with a grade of C- or higher)
Overlap with Distributive Studies and/or Big Question Students must fulfill their computer science upper level course requirements from at least 3 areas
Requirement Course Credits Completed? Required: Course Credits Completed?
IS Big Question Introduction to Data Science CMSC 320 3
IS Big Question Introduction to Artificial Intelligence CMSC 421 3
Diversity Introduction to Machine Learning * CMSC 422 3
Can overlap with Distributive Studies or Big Question
Requirement Course Credits Completed? Select Two of the Following: Course Credits Completed?
UP Understanding Plural Societies Computer Vision CMSC 426 3
UP
Computation Methods *
Understanding Plural Societies or
CMSC 460 or
or
Cultural Competence
Introduction to Numerical Analysis * CMSC466 or 3
CC
MATH 401
Gen Ed Mathematics (MA) and Analytic Reasoning (AR) are satisfied by major requirements.
Applications of Linear Algebra *
Introduction to Natural Language Processing * CMSC 470 3
Upper Level Concentration Introduction to Deep Learning * (formerly CMSC 498L) CMSC 472 3
Capstone in Machine Learning * (formerly CMSC 498P) CMSC 473 3
Students must complete a minimum of 12 credit hours of 300 - 400 level courses in
one discipline outside of Computer Science. No course that is in, or cross-listed as, Introduction to Computational Game Theory CMSC 474 3
CMSC may be counted in this requirement. Only 1 independent study or experiential
Introduction to Robotics with Perception * (formerly CMSC 498F) CMSC 476 3
learning course may be used. Students who are pursuing a minor or a second major
can use those credits in this area. Consult with your academic advisor to ensure each * Indicates the course has unique prerequisites
course you plan to take will satisfy this area.
Course Credits Completed? Upper Level Elective Courses (Must pass with a grade of C- or higher)
Select 6 credits from CMSC 300- or 400-level courses (not eligible CMSC330 & CMSC351)
Title Course Credits Completed?
3
Elective Credits
Students must take enough elective courses in any discipline(s) they choose to reach
the total number of 120 credits required for graduation. Students who are pursuing a
minor or a second major can use those credits in this area.
Course Credits Completed?College of Computer, Mathematical and Natural Sciences
Computer Science - Machine Learning Track Effective Fall 2024
This is a generalized academic plan, not an official audit
Year 1 Fall Spring
Course Credit Grade Course Credit Grade
CMSC131 or CMSC141 4 CMSC132 or CMSC142 4
Gateway & Benchmark 1
MATH140 (FSMA, FSAR) 4 MATH141 4
Requirements:
CMSC131, CMSC132,
ENGL101 (FSAW) 3 Natural Science w/ Lab (DSNL) 4
and MATH140 must be
completed with a C- or
Oral Comm (FSOC) 3 History & Social Science (DSHS)* 3
higher by 45 credits
(AP/IB credits excluded) CMSC100 1
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
CMSC216 4 CMSC330 3
Benchmark 2
CMSC250 4 CMSC351 3
Requirements:
CMSC330, CMSC351,
MATH240 or MATH341 or MATH461 3 or 4 STAT4XX 3
and MATH or STAT must
be completed with a C-
Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
or higher by 75 credits
(AP/IB credits excluded) Humanities (DSHU)* 3
Total 14 or 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
CMSC320 3 CMSC422 3
CMSC421 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 Scholarship in Practice (DSSP)* 3
Big Question (SCIS) 3 Big Question (SCIS) 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC Elective 3
CMSC Elective 3 UL Concentration 3
UL Concentration 3 UL Concentration 3
Plural Societies (DVUP) or Cultural
UL Concentration 3 Competence (DVCC)* 3
Plural Societies (DVUP)* 3 Elective 3 or 4
Total 15 Total 15 or 16
*All students must complete two Distributive Studies courses that are approved for Big Question courses. The Understanding Plural Societies (UP) and Cultural Competence (CC) courses may
also fulfill Distributive Studies categories.
**Students may take any Professional Writing course to fulfill this requirement.

================================================================================
Filename: Cybersecurity_Track_Planner.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Comp. Sci. - Cybersecurity Track
Effective Fall 2024 This is a curriculum tracking sheet, not an official audit
Name___________________________________________________ UID__________________________________
Date Entered Major__________________ Second degree/major________________________ Is CMNS first major? Y/N
General Education Requirements Major Requirements
Fundamental Studies Lower Level Requirements (Must pass with a grade of C- or higher)
Requirement Course Credits Completed? Title Course Credits Completed?
AW Academic Writing (before 30 credits) 3 Calculus I MATH 140 4
PW Professional Writing (after 60 credits) 3 Calculus II MATH 141 4
OC Oral Communication 3 Object-Oriented Programming I
CMSC 131 or
4
CMSC 141
Distributive Studies Programming with Purpose I: Data-Centric Computing
Requirement Course Credits Completed? Object-Oriented Programming II
CMSC 132 or
4
CMSC 142
NL Natural Science with Lab 4 Programming with Purpose II: Data Structures and Algori
NS Natural Science 3 or 4 Introduction to Computer Systems CMSC 216 4
HS History and Social Sciences 3 Discrete Structures CMSC 250 4
HS History and Social Sciences 3 Organization of Programming Languages CMSC 330 3
HU Humanities 3 Algorithms CMSC 351 3
HU Humanities 3 STAT 4xx with MATH 141 prerequisite STAT 4XX 3
SP Scholarship in Practice (non-major) 3 MATH/AMSC/STAT xxx with MATH 141 prerequisite 3 or 4
SP Scholarship in Practice (non-major) 3
Big Question Upper Level Courses (Must pass with a grade of C- or higher)
Overlap with Distributive Studies and/or Big Question Students must fulfill their computer science upper level course requirements from at least 3 areas
Requirement Course Credits Completed? Required: Course Credits Completed?
IS Big Question CMSC 414
Computer and Network Security 3
IS Big Question CMSC 456
Cryptology 3
Diversity
Can overlap with Distributive Studies or Big Question Choose four courses from:
Requirement Course Credits Completed? CMSC 411
Computer Systems Architecture 3
UP Understanding Plural Societies CMSC 412
Operating Systems * 4
UP
CMSC 417
Understanding Plural Societies or Computer Networks 3
or
Cultural Competence
CMSC 430
CC Introduction to Compilers 3
Gen Ed Mathematics (MA) and Analytic Reasoning (AR) are satisfied by major requirements.
CMSC 433
Programming Language Technologies and Paradigms 3
CMSC 451
Design and Analysis of Computer Algorithms 3
Upper Level Concentration
* Indicates course has unique prerequisites
Students must complete a minimum of 12 credit hours of 300 - 400 level courses in one
discipline outside of Computer Science. No course that is in, or cross-listed as, CMSC may be
Upper Level Elective Courses (Must pass with a grade of C- or higher)
counted in this requirement. Only 1 independent study or experiential learning course may be
used. Students who are pursuing a minor or a second major can use those credits in this area.
Select 3 credits from CMSC 300- or 400-level courses (not eligible CMSC330 & CMSC351)
Consult with your academic advisor to ensure each course you plan to take will satisfy this
Title Course Credits Completed?
area.
3
Course Credits Completed?
Elective Credits
Students must take enough elective courses in any discipline(s) they choose to reach the total
number of 120 credits required for graduation. Students who are pursuing a minor or a second
major can use those credits in this area.
Course Credits Completed?College of Computer, Mathematical and Natural Sciences
Computer Science - Cybersecurity Track Effective Fall 2024
This is a generalized academic plan, not an official audit
Year 1 Fall Spring
Course Credit Grade Course Credit Grade
Gateway &
CMSC131 or CMSC141 4 CMSC132 or CMSC142 4
Benchmark 1
Requirements: MATH140 (FSMA, FSAR) 4 MATH141 4
CMSC131,
CMSC132, and ENGL101 (FSAW) 3 Natural Science w/ Lab (DSNL) 4
MATH140 must be
Oral Comm (FSOC) 3 History & Social Science (DSHS)* 3
completed with a C-
or higher by 45
CMSC100 1
credits (AP/IB credits
excluded)
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
Benchmark 2 CMSC216 4 CMSC330 3
Requirements:
CMSC250 4 CMSC351 3
CMSC330,
CMSC351, and
MATH/STAT/AMSC 3 or 4 STAT4XX 3
MATH or STAT must
be completed with a Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
C- or higher by 75
credits (AP/IB credits Humanities (DSHU)* 3
excluded)
Total 14 or 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
CMSC414 3 CMSC4XX 3
CMSC456 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 Scholarship in Practice (DSSP)* 3
Big Question (SCIS) 3 Big Question (SCIS) 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC Elective 3
CMSC4XX 3 UL Concentration 3
UL Concentration 3 UL Concentration 3
Plural Societies (DVUP) or
UL Concentration 3 Cultural Competence (DVCC)* 3
Plural Societies (DVUP)* 3 Elective 3 or 4
Total 15 Total 15 or 16
*All students must complete two Distributive Studies courses that are approved for Big Question courses. The Understanding Plural Societies (UP) and Cultural
Competence (CC) courses may also fulfill Distributive Studies categories.
**Students may take any Professional Writing course to fulfill this requirement.

================================================================================
Filename: General_Track_Planner.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

College of Computer, Mathematical and Natural Sciences
Computer Science - General Effective Fall 2024 This is a curriculum tracking sheet, not an official audit
Name: UID:
Date Entered Major: Second Degree/Major: Is CMNS first major? Yes No
General Education
(40 credits)
Fundamental Studies Distributive Studies
Requirement Course Credits Completed? Requirement Course Credits Completed?
Academic Writing
FSAW (must be attempted by 30 credits and DSHU Humanities
completed by 60 credits)
("C-" or higher required)
Professional Writing
FSPW DSHU Humanities
(must have completed 60 credits or more)
FSOC Oral Communication DSHS History & Social Science
Mathematics
FSMA (must be attempted by 30 credits) DSHS History & Social Science
(FSMA is satisfied by first major math
requirement)
Analytic Reasoning
FSAR (FSAR is satisfied by first major math DSNL Natural Sciences with Lab
requirement)
Natural Sciences
Big Question DSNS
(can choose a second DSNL instead)
Scholarship in Practice
DSSP (1 can be used or not used in the major
Requirement Course Credits Completed? program)
Big Question (effective Fall 2024) Scholarship in Practice
SCIS DSSP (1 cannot be used in major program at
I-Series (Summer 2024 and prior)
all)
Big Question (effective Fall 2024)
SCIS
I-Series (Summer 2024 and prior)
Diversity
Requirement Course Credits Completed?
DVUP Understanding Plural Society
Cultural Competence
DVCC
(can choose a second DVUP instead)
Gateway Requirements
Requirements if student started at UMD prior to Fall 2024 Requirements if student started at UMD in Fall 2024 or after:
Matriculated Fall 2024 and after:
Matriculated Spring 2024 and prior:
1. Pass all Gateway courses with a "B-" or higher
1. Pass all Gateway courses with a "C-" or higher
2. Have a cumulative GPA of a 3.0 or higher in all UMD courses to apply to the CMSC LEP
2. Have a cumulative GPA of a 2.7 or higher in all UMD courses to apply for the CMSC LEP
3. Apply to the CMSC LEP
3. Apply to the CMSC LEP
4. Undergo a selective review process
4. Maintain a 2.0 cumulative GPA to remain in CMSC once admitted
5. Maintain a 2.0 cumulative GPA to remain in CMSC if admitted
Gateway Requirements Gateway Requirements
(Must pass with a grade of "C-" or higher for students who matriculated to UMD prior to Fall (Must pass with a grade of "B-" or higher for students who matriculated to UMD in Fall 2024
2024) or after)
Course Name Course Credits Completed? Course Name Course Credits Completed?
Calculus I MATH 140 4 Calculus I MATH 140 4
Object-Oriented Programming I CMSC 131 Object-Oriented Programming I CMSC 131
Programming with Purpose I: Data-Centric or 4 Programming with Purpose I: Data- or 4
Computing CMSC 141 Centric Computing CMSC 141
Object-Oriented Programming II CMSC 132 Object-Oriented Programming II CMSC 132
Programming with Purpose II: Data or 4 Programming with Purpose II: Data or 4
Structures and Algorithms CMSC 142 Structures and Algorithms CMSC 142Major Requirements continued
Upper Level Courses (Must pass with a grade of C- or higher)
Lower Level Requirements
Select 5 courses from at least 3 of the following areas with no more than 3 courses in
(Must pass with a grade of "C-" or higher | All courses required)
a given area
Course Name Course Credits Completed? Area 1: Systems Course Credits Completed?
Calculus II MATH 141 4 Computer Systems Architecture CMSC 411 3
Introduction to Computer Systems CMSC 216 4 Operating Systems * CMSC 412 4
Discrete Structures CMSC 250 4 Computer and Network Security CMSC 414 3
Organization of Programming Languages CMSC 330 3 Introduction to Parallel Computing CMSC 416 3
Algorithms CMSC 351 3 Computer Networks CMSC 417 3
STAT 4xx with MATH 141 prerequisite STAT 4XX 3
MATH/AMSC/STAT xxx with MATH 141
3/4 Area 2: Information Processing Course Credits Completed?
prerequisite
Data Structures CMSC 420 3
Introduction to Artificial Intelligence CMSC 421 3
Upper Level Concentration (ULC)
Introduction to Machine Learning * CMSC 422 3
Bioinformatic Algorithms, Databases and
CMSC 423 3
1. Students must complete a minimum of 12 credit hours of 300 - 400 level courses in one discipline Tools
outside of Computer Science. Database Design CMSC 424 3
2. No course that is in, or cross-listed as, CMSC may be counted in this requirement. Computer Vision * CMSC 426 3
Computer Graphics * CMSC 427 3
3. Only 1 independent study or experiential learning course may be used.
Introduction to Natural Language
4. Students who are pursuing a minor or a second major can use those credits in this area. Processing * CMSC 470 3
5. Consult with your academic advisor to ensure each course you plan to take will satisfy this area. Introduction to Data Visualization CMSC 471 3
(Area 2 or Area 3)
6. ULC area requires a 1.7 GPA between all ULC courses
Introduction to Deep Learning * CMSC 472 3
Course Credits Completed?
Area 3: Software Engineering and
Programming Languages Course Credits Completed?
Introduction to Compilers CMSC 430 3
Programming Language Technologies
CMSC 433 3
and Paradigms
Introduction to Human-Computer
CMSC 434 3
Interaction
Software Engineering * CMSC 435 3
Upper Level Elective Courses Programming Handheld Systems CMSC 436 3
(Must pass with a grade of "C-" or higher)
Introduction to Data Visualization
CMSC 471 3
(Area 2 or Area 3)
Select 6 credits from CMSC 300- or 400-level courses (not eligible CMSC330 & CMSC351)
Title Course Credits Completed?
Area 4: Theory Course Credits Completed?
Design and Analysis of Computer
CMSC 451 3
Algorithms
Elementary Theory of Computation CMSC 452 3
Algorithms for Data Science CMSC 454 3
Elective Credits Cryptology CMSC 456 3
Introduction to Quantum Computing CMSC 457 3
Students must take enough elective courses in any discipline(s) they choose to reach the
Introduction to Computational Game
total number of 120 credits required for graduation. Students who are pursuing a minor or a CMSC 474 3
Theory
second major can use those credits in this area.
Course Credits Completed? Area 5: Numerical Analysis Course Credits Completed?
Computational Methods * CMSC 460
or 3
Introduction to Numerical Analysis * CMSC 466
* Indicates the course has unique prerequisites

================================================================================
Filename: CS_Sample_4_Year_Plan.pdf (Subtopic: Degree_Reqs_And_Tracks)
================================================================================

Computer Science Four Year Academic Plan
General Education
Year 1 Fall Spring
Benchmark 1 Requirements: Course Credit Grade Course Credit Grade
CMSC131, MATH140, and 15
CMSC131 4 CMSC132 4
credits of general education
requirements by 30 attempted MATH140 (FSMA, FSAR) 4 MATH141 4
credits. ENGL101 (FSAW) 3 Natural Science w/Lab (DSNL) 4
Oral Comm (FSOC) 3 History & Social Sciences (DSHS)* 3
CMSC100 1
Total 15 Total 15
Year 2 Fall Spring
Course Credit Grade Course Credit Grade
Benchmark 2 Requirements:
MATH141, CMSC132, CMSC216, CMSC216 4 CMSC330 3
CMSC250, and all but 9 credits CMSC250 4 CMSC351 3
of general education
MATHXXX 4 STAT4XX 3
requirements by 60 attempted
credits. Scholarship in Practice (DSSP)* 3 Natural Science (DSNS) 3
Humanities (DSHU)* 3
Total 15 Total 15
Year 3 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC4XX 3
CMSC4XX 3 CMSC4XX 3
History & Social Sciences (DSHS)* 3 ENGL39X (FSPW)** 3
Humanities (DSHU)* 3 UL Concentration 3
Elective 3 UL Concentration 3
Total 15 Total 15
Year 4 Fall Spring
Course Credit Grade Course Credit Grade
CMSC4XX 3 CMSC4XX 3
CMSC4XX 3 UL Concentration 3
UL Concentration 3 Elective 3
Scholarship in Practice (DSSP)* 3 Elective 3
Elective 3 Elective 3
Total 15 Total 15
*All students must complete two Distributive Studies courses that are approved for I-series courses. The Understanding Plural Societies
(UP) and Cultural Competence (CC) courses may also fulfill Distributive Studies categories.
** Students (cid:373)(cid:258)(cid:455) take any Professional Writing course to (cid:296)(cid:437)(cid:367)(cid:296)(cid:349)(cid:367)(cid:367) this requirement

================================================================================
Filename: CS_LEP.pdf (Subtopic: Transfers)
================================================================================

4/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
UNIVERSITY OF MARYLAND
VISIT UMD APPLY NOW CONNECT SEARCH
Academics Student Life How To Apply Tuition & Aid
Undergraduate Admissions
HOME ACADEMICS LIMITED ENROLLMENT PROGRAMS LEP ADMISSION FOR CURRENT STUDENTS
ACADEMICS LEP ADMISSION FOR
All Programs
CURRENT STUDENTS
Colleges & Schools
Programs by Interest Current students, or internal transfers, are students already at the University of
Maryland (UMD) who would like to change their major to a Limited Enrollment
Limited Enrollment Programs Program (LEP). Processes differ depending on your major of interest.
LEP Admission for Current
Students interested in Criminology & Criminal Justice or Psychology need
Students
to work directly with a department advisor and the College of Behavioral &
Living-Learning & Special Social Sciences, once the last required gateway course is completed.
Programs
Students interested in any other LEP, need to apply following the process
outlined below, which is managed by the Office of Undergraduate
Admissions.
https://admissions.umd.edu/academics/current-student-lep-admissions 1/64/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
LEP Application Process
Business applicants must complete all coursework by the conclusion of the fall
or spring semester (summer coursework will not be reviewed). Only business
applicants may submit letters of recommendation (no more than 3) via email to
lep@umd.edu, or in-person to the Office of Undergraduate Admissions in the
Mitchell Building. The personal statement is within the application and the
statement topic may be found below:
Personal Statement
Please provide us with your personal statement. In this personal statement,
you want to address such questions as: Why are you passionate about
business; what about the Smith community appeals to you; what things
have you learned in your academic journey; why would you like to be a
Smith School of Business student; and any other additional information you
would like to share with the review committee.
All applicants are strongly encouraged to review their program's gateway
requirements prior to completing the application.
Internal transfer students should complete the LEP application either during the
semester in which they complete the required gateway courses or at the end of
the semester. This timeline is dependent upon the application deadline for the
student's preferred major.
Students applying for the fall semester can complete a gateway course during
the summer, at either UMD or another institution. In order to be considered,
courses must be taken during, or completed by the end of, UMD's Summer 1
https://admissions.umd.edu/academics/current-student-lep-admissions 2/64/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
Session. Students applying for the spring semester must complete gateway
courses by the end of the fall semester.
REVIEW GATEWAY REQUIREMENTS LEP APPLICATION
LEP Application Deadlines
LEP Application Deadline Decision Notification
Business March 15, 2025 Mid-April 2025 and Mid-
June 2025
Communication June 6, 2025 Mid-June 2025
Engineering June 6, 2025 Mid-June 2025
Neuroscience June 6, 2025 Mid-June 2025
Biochemistry June 6, 2025 Mid-June 2025
Biological Sciences
Chemistry
Computer Science
Environmental
Science & Policy
(Biodiversity &
https://admissions.umd.edu/academics/current-student-lep-admissions 3/64/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
LEP Application Deadline Decision Notification
Conservation
Biology
Concentration)
Immersive Media
Design
Technical Support
If you have technical problems using the application system, please contact
admit-tech@umd.edu. If you have questions about the application requirements
or admission process, you may contact the Limited Enrollment Programs office
at lep@umd.edu.
Please note: When previewing the application prior to submission, you'll see all
portions of the application, including those not relevant to the LEP you're
applying for. This will not impact your application, but please ensure you've
completed the sections relevant to your LEP.
https://admissions.umd.edu/academics/current-student-lep-admissions 4/64/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
There is a lot more to learn about UMD, so let's stay in touch!
Join Our Mailing List Connect
Undergraduate Admissions
Mitchell Building
7999 Regents Dr.
College Park, MD 20742
1-800-422-5867
ApplyMaryland@umd.edu
Majors & Minors Information For:
Prospective Students
Student Life
Parents & Families
Admissions Requirements
Counselors & Advisors
Application Deadlines
https://admissions.umd.edu/academics/current-student-lep-admissions 5/64/12/25, 3:14 AM Office of Undergraduate Admissions | LEP Admission for Current…
Tuition & Aid Admitted Students
VISIT UMD APPLY NOW CONNECT
UMD.EDU PRIVACY POLICY WEB ACCESSIBILITY ©2025 UNIVERSITY OF MARYLAND
https://admissions.umd.edu/academics/current-student-lep-admissions 6/6

================================================================================
Filename: CS_Transfers.pdf (Subtopic: Transfers)
================================================================================

4/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Internal Transfer Frequently
Asked
Applicants
Questions
Am I guaranteed
admission to
As a current University of Maryland student whose major is not currently Computer Science, you are
Computer Science if I
considered an internal transfer applicant. Computer Science is a limited enrollment program (LEP) meet the gateway
major at the University of Maryland (UMD). There are updates to the LEP guidelines which will be requirements?
effective for students starting at UMD in Fall 2024 or later. If you started at UMD prior to Fall 2024,
these LEP updates do not impact you or your ability to transfer into the Computer Science major. Are AP and IB credit
accepted to fulfill
Due to the volume of students in the Computer Science major, advisors are unable to meet with
LEP gateway
students prior to them officially declaring the major. Students will have the option to meet with a requirements?
CMNS Peer Mentor (https://cmns.umd.edu/undergraduate/current-students/advising-academic-
planning/peer-mentors) if they have questions about the Computer Science LEP. Questions regarding I am applying to the
the Computer Science major or minor can also be directed to to csadvising-ugrad@umd.edu major for the
upcoming term, can I
(mailto:csadvising-ugrad@umd.edu) - please include your full name and 9 digit UID in all email
receive permission
correspondence.
for classes by my
registration date?
https://undergrad.cs.umd.edu/internal-transfer-applicants 1/64/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
In addition to the General Track (https://undergrad.cs.umd.edu/general-track-degree-requirements)
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU) I am taking my final
the department offers four specializations, Cybersecurity
gateway course in
(https://undergrad.cs.umd.edu/cybersecurity-degree-requirements), Data Science the summer session,
(https://undergrad.cs.umd.edu/data-science-degree-requirements), Machine Learning should I apply by the
June deadline?
(https://undergrad.cs.umd.edu/machine-learning-degree-requirements), and Quantum Information
(https://undergrad.cs.umd.edu/quantum-information-degree-requirements).
I would like to add
It is important to note, if you are starting the course sequence at CMSC131 or CMSC133, it will take a Computer Science as
minimum of 7 semesters/terms to complete the major. a double major; what
are the steps I need
to complete?
LEP Informational Sessions
Fall 2024 LEP information Session, TBA
Admissions Information
Gateway Requirements (for students who started at UMD in Fall
2024 or later)
Students are required to complete the following gateway criteria to be eligible for the major:
Completion of CMSC131 or CMSC133 with a minimum grade of B-*
Completion of CMSC132 with a minimum grade of B-*
Completion of MATH140 with a minimum grade of B-*
A minimum grade point average of 3.0 in all courses taken at the University of Maryland and all
other institutions
Students may be in the process of completing their final gateway course at the time of their
application, however, the final grade must be posted by the application deadline.
* Indicates an Exemption Exam (https://undergrad.cs.umd.edu/exemption-exams) is available for this
course. These exams are only available to students before they matriculate to the University of
Maryland.
https://undergrad.cs.umd.edu/internal-transfer-applicants 2/64/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
Gateway Requirements (for students who started at UMD prior
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
to Fall 2024)
Students are required to complete the following gateway criteria to be eligible for the major:
Completion of CMSC131 or CMSC133 or CMSC141 with a minimum grade of C-*
Completion of CMSC132 or CMSC142 with a minimum grade of C-*
Completion of MATH140 with a minimum grade of C-*
A minimum grade point average of 2.7 in all courses taken at the University of Maryland and all
other institutions
Students may be in the process of completing their final gateway course at the time of their
application, however, the final grade must be posted by the application deadline.
* Indicates an Exemption Exam (https://undergrad.cs.umd.edu/exemption-exams) is available for this
course. These exams are only available to students before they matriculate to the University of
Maryland.
Benchmark Requirements
All students will undergo a benchmark review after their second semester in the major or after they
complete 75 cumulative credits, whichever comes second. Students in the major are required to
complete the following courses:
Completion of CMSC330 with a minimum grade of C-
Completion of CMSC351 with a minimum grade of C-
Completion of a STAT4XX course (prerequisite: MATH141) with a minimum grade of C-
OR MATH/AMSC/STAT course (prerequisite: MATH141) with a minimum grade of C-
A minimum grade point average of 2.0 in all courses taken at the University of Maryland and all
other institutions
https://undergrad.cs.umd.edu/internal-transfer-applicants 3/64/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
Application Process
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Per the Office of Undergraduate Admissions, the LEP application
(https://admissions.umd.edu/explore/majors/limited-enrollment-programs/current-student-lep-
admissions) is made available following the add/drop deadline of each semester. Internal Transfer
applicant should complete the application during the semester in which they complete all required
gateway courses or at the end of the semester. For more information, including application deadlines,
visit the Undergraduate Admissions Current Student LEP Admissions
(https://admissions.umd.edu/explore/limited-enrollment-programs/current-student-lep-admissions)
page.
Important Note: If you are completing CMSC132 over the summer session, you are not eligible for the
June deadline. You should apply for the January deadline.
LEP Guidelines
The following guidelines pertain to all Limited Enrollment Programs
Only one gateway course may be repeated to earn the required grade and that course may only
be repeated once. When more than one course can satisfy a gateway requirement, taking a
second course from the list will count as a repeat. (Please note that a grade of "W" is considered
an attempt.)
Students may apply only once to an LEP.
Students who were directly admitted and fail to meet the performance review criteria will be
dismissed from the major and may not reapply.
Students must maintain a minimum cumulative GPA of 2.00 after admission to an LEP. Failure to
do so will result in dismissal from the major.
https://undergrad.cs.umd.edu/internal-transfer-applicants 4/64/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
Admissions Decisions
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
If you have been admitted to the Computer Science major as an internal transfer applicant, an email
will be sent to your TerpMail address, with steps to complete the major change process. These steps
must be completed prior to the start of the upcoming semester. You will receive permission for your
CMSC coursework when you are accepted to the Computer Science major. We ask that you do not fill
out the non-major request form.
Course Permissions
Internal transfer applicant applying for the Computer Science LEP will receive permissions for courses
once they are accepted into the Computer Science major. We ask that students do not fill out the non-
major request form. We cannot grant permissions prior to your registration date.
For summer courses: If you are applying for the Computer Science LEP by the fifth business day of
June and wish to take courses over the summer, you will fill out the non-major request form
(http://undergrad.cs.umd.edu/forms).
Resources
General Program Questions? We can be reached at csadvising-ugrad@umd.edu
(mailto:csadvising-ugrad@umd.edu)
or 301.405.2672. When emailing, please include your full name and 9-digit UID.
Questions Regarding Admissions Decisions? Contact ApplyMaryland@umd.edu
(mailto:ApplyMaryland@umd.edu)
Want to make sure that Computer Science is right for you? Visit the University of Maryland's
Computing Majors (https://studentsuccess.umd.edu/computing-majors) page for information
regarding the different computing majors on campus.
https://undergrad.cs.umd.edu/internal-transfer-applicants 5/64/12/25, 3:13 AM Internal Transfer Applicants | Undergraduate Computer Science at UMD
Contact Our Office UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/internal-transfer-applicants 6/6

================================================================================
Filename: CS_Exemption_Exams.pdf (Subtopic: Transfers)
================================================================================

4/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
External New Student Frequently
Asked
Exemption Exams
Questions
Can I register for
multiple exams?
Exemption Exam Information
Can I register for the
216 exam before
Exemption exams help determine the proper placement of undergraduate students into Computer
getting my results
Science courses before their first semester at the University of Maryland. Academic credit is not
from the 131/132
awarded for exemption exams. Permission to register for subsequent courses will only be given once
exam?
an exam is taken and passed with a satisfactory score. There is no cost associated with taking a
Computer Science exemption exam. Exemption exams are intended to test knowledge acquired
Do I need to take the
from coursework, and we recommend against attempting them based on self study. exemption exam if I
have AP credit?
We offer exemption exams for the following CMSC courses (see the Undergraduate Catalog
(https://academiccatalog.umd.edu/undergraduate/approved-courses/cmsc/) for course descriptions):
Do students receive
CMSC131/132: Object Oriented Programming I and II credit for the course
when they pass an
The CMSC131/132 exam is combined into three parts. If you are only attempting to place out of
exemption exam?
CMSC131, you only need to complete Part I and Part II. If you are attempting to place out of
https://undergrad.cs.umd.edu/exemption-exams 1/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
CMSC131 and CMSC132, you must complete Part I, Part II, and Part III.
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU) Is there a cost
associated with the
If you scored a 5 on the AP Computer Science A exam, you will earn academic credit for exemption exams?
CMSC131, so you should only take this exam if you wish to place out of CMSC132. You must
complete all three parts.
Is there a MATH140
exemption exam? Do
CMSC216: Introduction to Computer Systems I need MATH140
In order to take the CMSC216 exemption exam, you must either have transfer credit for CMSC132 credit before
registering for a CS
OR you must first take the CMSC131/132 exam. If you take the CMSC131/132 exam but do not
exemption exam?
score high enough to place out of CMSC132, then your CMSC216 exam will not be graded.
Is there a penalty for
CMSC250: Discrete Structures
not passing an
Any qualifying student may take the CMSC250 exemption exam. You do not need to take the
exemption exam?
CMSC131/132 or CMSC216 exam first.
If you have any questions regarding exemption exams, email scheduling@cs.umd.edu Iʼm already enrolled
(mailto:scheduling@cs.umd.edu). Please provide at least 48 hours for a response. in CMSC131, but
would like to take
the exemption exam
Eligibility
instead. Can I do
this?
Computer Science exemption exams are open to all new incoming UMD undergraduate students, in all
colleges and majors. This includes all new freshmen, external transfer students, and post-
When should I
baccalaureate students who earned their first Bachelorʼs degree at another institution. Post-
register for an
baccalaureate students who earned their first Bachelorʼs degree at UMD are welcome to take
exemption exam?
exemption exams unless they have already attempted CMSC 131, 132, 216, and/or 250 at UMD.
Current University of Maryland students, including internal transfers to the Computer Science major,
are not eligible for exemption exams.
Please contact scheduling@cs.umd.edu (mailto:scheduling@cs.umd.edu) if you have any questions
about your eligibility.
https://undergrad.cs.umd.edu/exemption-exams 2/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Accommodations
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
If you have accommodations for a learning disability, you will need to submit an official
Accommodation Letter from the UMD Accessibility and Disability (ADS) Office. You must register with
ADS at https://counseling.umd.edu/ads/prospective (https://counseling.umd.edu/ads/prospective). It
may take some time for this to be processed, so please do this as soon as possible. You will be required
to upload your official Academic Accommodations letter when completing your registration. We will
work with the ADS Office to schedule your exam. In some cases, this may mean rescheduling your
exam.
Summer 2025 Exemption Exam Dates & Registration
Exam Dates
Exemption exams will be offered in-person in the Brendan Iribe Center (IRB). You must arrive at least
ten minutes early and must bring a valid photo ID (e.g. UMD Student ID, Driver's License, Military ID,
Passport) and a pencil with you. If you are taking the CMSC131/132 exam, you will be given 2.5 hours. If
you are taking the CMSC216 or CMSC250 exam, you will be given 2 hours.
Exams will be offered on the following dates:
Thursday, May 8 at 1:00 pm
Wednesday, May 14 at 10:00 am
Tuesday, June 3 at 3:00 pm
Thursday, June 5 at 3:00 pm
Friday, June 6 at 3:00 pm
Tuesday, June 10 at 3:00 pm
Friday, June 13 at 10:00 am
Monday, June 16 at 10:00 am
Tuesday, June 17 at 3:00 pm
Tuesday, June 24 at 3:00 pm
Thursday, June 26 at 3:00 pm
Friday, June 27 at 10:00 am
Monday, June 30 at 3:00 pm
https://undergrad.cs.umd.edu/exemption-exams 3/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Tuesday, July 8 at 3:00 pm
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Thursday, July 10 at 3:00 pm
Tuesday, July 15 at 3:00 pm
Thursday, July 17 at 3:00 pm
Tuesday, July 22 at 3:00 pm
Thursday, July 24 at 3:00 pm
Tuesday, July 29 at 3:00 pm
Monday, August 4 at 10:00 am
Wednesday, August 20 at 10:00 am
Friday, August 22 at 10 am
Tuesday, August 26 at 3:00 pm
Thursday, August 28 at 10:00 am
Terms of Agreement and Honors Pledge
1. Students will have two and a half hours for the CMSC131/132 exam and two hours for the
CMSC216 and CMSC250 exams. If you are not able to complete the exam in the allotted time, you
must turn in the exam as-is.
2. Students may only attempt each exemption exam one time, and may only take one exam per
time slot. All exams must be taken prior to the start of the student's first semester here at UMD.
3. Exams will be graded within 1-2 weeks. Exams taken during the first week of classes will be
graded within 3-4 business days so that there is enough time for students to adjust their
registration during the schedule adjustment period.
4. Students will be notified of their results via their registered UMD email (TERPmail).
5. Students may not review their exam once it has been submitted for grading.
6. Students who pass the exemption exam may still decide to enroll in the course they've placed
out of if they wish to do so. This would not be counted as a repeated course. However, at that
point the exemption exam score becomes void and they must complete the class with a grade of
C- or higher to move on to the next CMSC course.
7. Regarding Academic Integrity:
The University of Maryland takes academic integrity matters seriously. Students
completing an exemption exam are expected to complete the exam without using any
additional resources (e.g., code from the web, notes, etc.) Remember that it is in your best
https://undergrad.cs.umd.edu/exemption-exams 4/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
interest to complete exams following the above guidelines, otherwise you might be placed
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
in a course where you might not be successful.
After taking an exam, you may not disclose, post, nor distribute any information about the
exam. Providing this information represents an academic integrity violation and will be
reported as such. We appreciate your cooperation on this matter.
Cases of suspected cheating or misconduct (e.g., false identification) during the exam will
be reported immediately to the Honor Council within the Office of Student Conduct.
Exam Registration
The registration form is linked below. Please note:
1. You must submit a form for each exam you plan to take.
2. You must register at least one business day prior to your exam date.
3. In order to access the form, you must first activate your UMD Directory ID by going
to https://identity.umd.edu (https://identity.umd.edu/) and clicking on the “Activate Account”
button (if you have questions, refer to #3 on the Admitted Student Checklist
(https://admissions.umd.edu/enroll/admitted-students/admitted-fall-freshman-checklist)).
Make sure you are logged in to your TERPmail account. If you still have trouble accessing the
form, make sure you are logged out of all other Google accounts or try opening the form in a
private/incognito window.
***REGISTER FOR AN EXEMPTION EXAM HERE***
(https://forms.gle/Wt3d7LCMW9gmcsqS9)
How to prepare:
Please review the information below to help you review the topics covered in each exam.
CMSC131: Object Oriented Programming I
Format: Handwrite code, define terms
Summer 2025 Passing Score:
https://undergrad.cs.umd.edu/exemption-exams 5/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Students need to receive 70%+ on Part I and 70%+ on Part II of the CMSC131/132 Exam in order
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
to place out of CMSC131.
Practice Problems (http://www.cs.umd.edu/~egolub/131exemption/TopicsList.shtml)
Preparation Notes (https://github.com/kekesh/CMSC131/blob/master/CMSC131.pdf)
Topics covered:
Hardware/Software/Java Terminology
Continue/break in loops
Recursion
Roundoff error
Primitives and Arithmetic and Logical Operators
Java String and StringBuffer
Conditional statements
For, while, and do-while loops
Arrays, Arrays as Parameters
Object Oriented Concepts
Mutable-vs-Immutable types, Reference/Shallow/Deep Copies
Generics, Interfaces, ArrayList
Objects
Exception Handling
JUnit Testing
CMSC132: Object Oriented Programming II
Format: Handwrite code, define terms
Summer 2025 Passing score:
Students need to receive 70%+ on each of the three parts (Part I, Part II, and Part III) of the
CMSC131/132 Exam in order to place out of CMSC132.
Preparation Notes (https://github.com/kekesh/CMSC132/blob/master/CMSC132.pdf)
Topics covered
Topics listed under CMSC131
https://undergrad.cs.umd.edu/exemption-exams 6/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Object-oriented software development
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Requirements & specifications
Designing objects & classes
Testing
Inheritance
Binary Search Trees
Algorithms & data structures
Asymptotic efficiency
Lists, stacks, queues
Trees, heaps
Sets, maps, graphs
Java Hash Code Contract
Programming skills
Java collection framework
Threads, synchronization
CMSC216: Introduction to Computer Systems
Note: You will need take the CMSC131/132 exam or have confirmed transfer credit for CMSC131 and
CMSC132 prior to taking the CMSC216 exam. If you do not place out of CMSC131 and CMSC132, you
cannot place out of CMSC216.
Format: Handwrite code, define terms
Summer 2025 Passing score: 70%+
Preparation Notes (https://github.com/kekesh/CMSC216/blob/master/CMSC216.pdf)
Topics covered:
Unix Memory Model
Moving from Java to C programing
Pointers and dynamic data structures in C
I/O, standard libraries
Testing
Assembly Language (Y86) and Assembly Y86 Resources
(http://www.cs.umd.edu/~nelson/classes/resources/y86/y86resources.zip)
https://undergrad.cs.umd.edu/exemption-exams 7/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Please contact the CS Department at scheduling@cs.umd.edu
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(mailto:scheduling@cs.umd.edu) for login credentials (for registered CMSC216 exam
students only)
Please note that it is not the same assembly covered by the preparation notes above.
Y86 simulators are available online. Some examples are:
https://dept-info.labri.fr/ENSEIGNEMENT/archi/y86js_v2/ (https://dept-
info.labri.fr/ENSEIGNEMENT/archi/y86js_v2/)
https://y86.js.org/ (https://y86.js.org/)
https://boginw.github.io/js-y86-64/ (https://boginw.github.io/js-y86-64/)
The Assembly language instructions you need to be familiar with are here
(https://drive.google.com/file/d/1Wvbj4Ix69V3Tytz10IYJIiyDjK8wEbYm/view?usp=sharing).
Process control
Systems programming
Program measurement and optimization
Multithreaded programming with pthreads
Libraries and linking
Dynamic memory management
CMSC250: Discrete Structures
Format: Define terms, problem solve
Summer 2025 Passing score: 80%+
Topics covered:
Propositional logic, circuits, and predicate logic
Elementary number theory
Countability
Summations/recurrences
Induction (weak, strong, structural, constructive)
Sets, Venn diagrams, Cartesian products, powersets
Counting and combinations
Functions and the pigeonhole principle
Relations, reflexivity, symmetry, and transitivity
https://undergrad.cs.umd.edu/exemption-exams 8/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
Graph theory
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Boolean algebra
Combinatorics
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/exemption-exams 9/104/12/25, 3:13 AM External New Student Exemption Exams | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/exemption-exams 10/10

================================================================================
Filename: CS_Permissions.pdf (Subtopic: Transfers)
================================================================================

4/12/25, 3:13 AM Major/Non-Major Permissions | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Major/Non-Major Permissions
CMSC Course Permissions
CS Majors
Please contact your assigned academic advisor for Summer 2025 course permissions.
Your academic advisor has provided instructions for how to request Fall 2025 course permissions. Please follow the instructions
they have provided and check your Terpmail regularly for updates.
CS Minors
The Summer 2025 form is now live. Please use this Form https://forms.gle/iye2AuYcPPqM8hx98
(https://forms.gle/iye2AuYcPPqM8hx98) to request Summer 2025 CMSC courses.
https://undergrad.cs.umd.edu/majornon-major-permissions 1/54/12/25, 3:13 AM Major/Non-Major Permissions | Undergraduate Computer Science at UMD
The Fall 2025 CS Minor course request form is now live. Please use this Form https://forms.gle/EHfU3d9QDKNiHS7i7
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://forms.gle/EHfU3d9QDKNiHS7i7) to request Fall 2025 CMSC courses.
Non-Majors: CE Students
CE Majors should contact their assigned CE Academic Advisors to request permissions for Summer 2025 and Fall 2025 courses.
Non-Majors: IMD Students
IMD-BS majors should contact their assigned IMD Academic Advisors to request permissions for Summer 2025 and Fall 2025
courses.
IMD-BA majors should follow the Non-Major: Undergraduate Student process to request CS course permissions.
If you are a CS and IMD double major, please follow the normal CS Major course permission process.
Non-Majors: Undergraduate Students
The Summer 2025 course request form is now live. Please use this Form https://forms.gle/cdN2w4Wooct3PdBm9
(https://forms.gle/cdN2w4Wooct3PdBm9) to request Summer 2025 CMSC courses.
The Fall 2025 course request form is now live. Please use this Form https://forms.gle/QQf7me3DZKCqZLQR6
(https://forms.gle/QQf7me3DZKCqZLQR6) to request Fall 2025 CMSC courses.
Please note: Course permissions for non-majors will be granted on or around the first day of classes for the term. You will not be
able to register for the courses during your assigned registration appointment. No exceptions can be made to this policy.
Please also note the following change effective Fall 2023: Undergraduate degree seeking students that are non-majors will no
longer be able to receive CMSC course permissions for CMSC3XX or CMSC4XX courses (this includes 1-credit STIC courses and
CMSC330/351). Undergraduate degree seeking students must be a declared CS Major or Minor to receive CMSC3XX or CMSC4XX
course permissions. No exceptions can be made to this policy. Please consult your current academic advisor if you need assistance
adjusting your course schedule or academic plan.
https://undergrad.cs.umd.edu/majornon-major-permissions 2/54/12/25, 3:13 AM Major/Non-Major Permissions | Undergraduate Computer Science at UMD
Undergraduate Non-Degree Seeking or Visiting Students: If you are requesting course permissions for CMSC216 or CMSC250,
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
please complete the appropriate Non-Major: Undergraduate Students form. If you are in need of a course beyond CMSC216 and
CMSC250, please contact csadvising-ugrad@umd.edu (mailto:csadvising-ugrad@umd.edu) for assistance.
Non-Majors: Graduate and Advanced Special Students
Non-Major Graduate and Advanced Special students MUST complete the following steps to request permission for CMSC320, CMSC335 or
a 400-level CMSC course. Instructor permission is not required for CMSC131 - CMSC351.
Be advised that non-major graduate and advanced special students will only be granted permission for one 300- or 400-level (not
including CMSC330 or CMSC351) CMSC course. No exceptions. If you submit multiple requests, we will honor your most recent
submission. Email questions to csadvising-ugrad@umd.edu (mailto:csadvising-ugrad@umd.edu).
Please contact the instructor to obtain written permission to take their course. In your email, you should include:
1. Your name, 9 digit UID, and your program of study
2. Your reason for requesting course permission
3. Your CMSC and MATH background/coursework
Save a copy of the email from the instructor granting permission. Submit the email from the instructor when completing the
course permission request form (see below).
The Summer 2025 course request form is now live. Please use this Form https://forms.gle/j5LmcZELTie6LcAk6
(https://forms.gle/j5LmcZELTie6LcAk6) to request Summer 2025 CMSC courses.
The Fall 2025 course request form is now live. Please use this Form https://forms.gle/XBAM12EscuZrFrJh6
(https://forms.gle/XBAM12EscuZrFrJh6) to request Fall 2025 CMSC courses.
Please note: Course permissions for non-majors will be granted on or around the first day of classes for the term. You will not be
able to register for the courses during your assigned registration appointment. No exceptions can be made to this policy.
Non-Major Graduate Students Requesting a Graduate level CMSC course only can fill out a form to request a CMSC graduate course.
Please use this Form https://docs.google.com/forms/d/e/1FAIpQLScx52225TOvFlWwtINITx3yX0jMgTAf...
(https://docs.google.com/forms/d/e/1FAIpQLScx52225TOvFlWwtINITx3yX0jMgTAf--4-0RM7WP6TqvVolQ/viewform). If you are an
https://undergrad.cs.umd.edu/majornon-major-permissions 3/54/12/25, 3:13 AM Major/Non-Major Permissions | Undergraduate Computer Science at UMD
undergraduate student or a non-major graduate student requesting an undergraduate CMSC course, do not submit this form. For this form
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
only, do not contact the instructor to obtain written permission to take their course. We coordinate with them based on your response to
this form.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/majornon-major-permissions 4/54/12/25, 3:13 AM Major/Non-Major Permissions | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/majornon-major-permissions 5/5

================================================================================
Filename: ULC_Info_Page.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Upper Level Concentration Frequently
Asked
Questions
Upper Level Concentration
Do all 12 of the ULC
credits need to be in
The Upper Level Concentration (ULC) requirement is unique to the Computer Science department at
the same area?
the University of Maryland. Computer Science is highly interdisciplinary, so studying an area outside of
CS that can complement your CS studies will set you apart from other candidates in interviews for
Do CS students have
internships and full-time positions. The ULC is a great opportunity to strengthen soft skills and
to declare a minor
discover how you can make your degree stand out. This is also a great opportunity for Computer because they have a
Science students to be creative in how they incorporate other disciplines into their studies. For ULC requirement?
example, someone interested in game programming may do an upper level concentration in English to
get more experience with creative writing, story telling, and building a narrative. All Computer How do I update my
ULC courses in my
Science majors must complete 12 credit hours of 300-400 level courses in one discipline outside
degree audit?
of Computer Science. Courses should be chosen in consultation with your advisor.
No CMSC courses, or courses cross listed with CMSC courses (e.g., AMSC460), are eligible for the Iʼm not sure what to
Upper Level Concentration focus on outside of
No courses used for the Computer Science major can be used for the ULC (e.g. MATH401 is CS. Where do I start?
applicable to the major for students on the Machine Learning track, if this course is used
https://undergrad.cs.umd.edu/upper-level-concentration 1/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
for the major, it cannot also be used for the ULC)
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU) What are some
Only up to 3 credits from an independent study or experiential learning course may be used
common ULC areas
Only up to 6 transfer credits may be used broken down by CS
Students pursuing a minor or a double major/dual degree may use those upper level credits in specializations?
this area with the exception of a few majors/disciplines (e.g. Information Science)
ULC does not need to be related to Computer Science Why is there a ULC
ULC does not count as “overlapping courses” between a major/minor component to the CS
Courses with a grade of P can be used for the ULC only if they were taken in the Spring 2020 and requirements?
Spring 2021 semesters
ULC courses must be completed with a cumulative GPA of 1.7 or higher. Courses with a grade of
D can be used for the ULC as long as the cumulative GPA for the ULC is at least 1.7
If you are doing a second bachelorʼs degree, usually the ULC can be satisfied with courses from
your first degree. Please consult with your advisor.
The ULC is updated in your audit manually by your assigned advisor. If a course is not showing,
please contact your advisor and ask them to update it.
Things to Note for the Upper Level Concentration
Area
This is not an exhaustive list, so please consult with your advisor about each class you plan to
ensure you will satisfy this requirement.
If courses from different disciplines can be used for a minor, then those courses can also be used
to satisfy the ULC
Students using Math or Statistics courses for the ULC are able to mix and match their courses
between MATH and STAT, however:
The first STAT4xx cannot be used for the ULC because it is required for the CS major.
Students in the STAT minor typically need to take an additional course to finish the ULC
after they complete the minor
https://undergrad.cs.umd.edu/upper-level-concentration 2/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
Students using Women, Gender, and Sexuality Studies courses for the ULC are able to mix and
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
match their courses between LGBT and WGSS
Students in the Astronomy minor will need to declare their minor early, and typically need to
take an additional course to finish the ULC after they complete the minor
Students using English courses cannot use the Professional Writing (FSPW) General Education
Requirement course toward the ULC
Students unsure of their ULC area can consult the Schedule of Classes
(https://app.testudo.umd.edu/soc/) for a full list of course offerings, and
Students can also consult the list of Minors
(https://www.admissions.umd.edu/explore/majors/minors) offered at UMD (though a Minor is
not required to complete the ULC)
Common Disciplines/Minors for the ULC with few lower level prerequisites:
ACES Minor (HACS)
African American Studies (AASP)
American Studies (AMST)
Anthropology (ANTH)
Art History and Archaeology (ARTH)
Asian American Studies (AAST)
Atmospheric Chemistry (AOSC)
Atmospheric Sciences (AOSC)
Cinema and Media Studies (CINE)
English (ENGL)
Family Science (FMSC)
Film Studies (FILM) [only for courses taken in or before Fall 2021]
History (HIST)
Human Development (EDHD)
Information Risk Management, Ethics, and Privacy Minor at Shady Grove (INST) [Only if declared
in the minor, no exceptions] [3]
Israel Studies (ISRL)
Jewish Studies (JWST)
Linguistics (LING)
https://undergrad.cs.umd.edu/upper-level-concentration 3/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
Mathematics/Statistics (MATH/STAT) [4]
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Meteorology (AOSC)
Philosophy (PHIL)
Philosophy, Politics, and Economics (PHPE)
Public Policy (PLCY)
Sociology (SOCY)
Technology Entrepreneurship (ENES)
Technology Innovation Leadership Minor at Shady Grove (INST) [Only if declared in the minor, no
exceptions] [6]
Also acceptable but may require more courses to complete:
Astronomy (ASTR)
Biological Sciences (BIOL)
Business Analytics Minor (BMGT)[1]
Criminology and Criminal Justice (CCJS)
Computational Finance (BUFN)
General Business Minor (BMGT)
Immersive Media Design (IMDM)[2]
Innovation and Entrepreneurship Minor (BMGT)
International Development
Languages
Lesbian Gay Bisexual Transgender Studies (LGBT)/Women, Gender, and Sexuality Studies
(WGSS)
Neuroscience/Psychology (NEUR/PSYC)
Physics (PHYS)
Robotics Minor [5]
Sustainability Minor
[1]Business Analytics Minor: BMGT402 and BMGT431 are required courses for the Business Analytics
minor and cannot be used for the ULC, so students thinking about the minor in Business Analytics will
need to plan their courses for the minor/ULC cautiously, and may need to take additional courses
beyond the minor requirements to fulfill the ULC.
https://undergrad.cs.umd.edu/upper-level-concentration 4/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
[2]Immersive Media Design: IMDM327 and IMDM390 are required courses for the IMD: BS and cannot
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
be used for the ULC, so students doing a double major/degree will need to plan their courses
cautiously with their advisor, and may need to take additional courses beyond the major requirements
to fulfill the ULC.
[3]Information Risk Management, Ethics, and Privacy Minor at Shady Grove: Only students who
are declared in the minors offered at Shady Grove will be allowed to use INST prefixed courses. All
other INST courses are not allowed, no exceptions. Students must be declared in the minor in order to
use the courses towards the ULC. Accepted courses: INST364, INST366, INST455, INST456, INST461
only.
[4]Math/Statistics Minor: The STAT4xx course used toward the Statistics requirement for the
Computer Science major cannot also be used toward the ULC, so students thinking about the minor in
Math or Statistics will need to plan for an extra MATH4xx/STAT4xx than is needed for the minor to finish
the ULC.
[5]Robotics Minor: ENAE450, ENEE467, and CMSC477 are required courses for the Robotics minor and
cannot be used for the ULC, so students thinking about the minor in Robotics will need to plan their
courses for the minor/ULC cautiously, and may need to take additional courses beyond the minor
requirements to fulfill the ULC.
[6]Technology Innovation Leadership Minor at Shady Grove: Only students who are declared in the
minors offered at Shady Grove will be allowed to use INST prefixed courses. All other INST courses are
not allowed, no exceptions. Students must be declared in the minor in order to use the courses
towards the ULC. Accepted courses: INST363, INST407, INST453, INST457, INST463 only.
Not Eligible for ULC:
College Park Scholars
Computer Engineering
Honors
Information Science
https://undergrad.cs.umd.edu/upper-level-concentration 5/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
Quantum Science Engineering
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Courses Ineligible for Upper Level Concentration
(click to expand)
This is not an exhaustive list. Courses should be chosen in consultation with your advisor.
ULC Areas Course(s) Not Acceptable
AMSC 460 - Computational Methods
466 - Intro to Numerical Analysis I
AOSC 447 - Machine Learning in Earth Science
AREC 380 - Data Science for Environmental and Resource Economics
BIOE 442 - Python: Introduction to Programming and Data Analysis
BSCI 411 - Bioinformatics and Integrated Genomics
https://undergrad.cs.umd.edu/upper-level-concentration 6/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
ULC Areas Course(s) Not AcceptabUleNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
BMGT 300 - Information Systems for Non-Business Majors
301/301F - Introduction to Information Systems
302/302F - Design Apps for Business Analytics
400 - Data Visualization and Web Analytics
402 - Database Systems
403 - Systems Analysis and Design
404 - Essential Data Skills for Business Analytics
408E - Emerging Topics in Information Systems; Big Data and Artificial
Intelligence for
Business
408C - Emerging Topics in Information Systems; Quality Web Development in
Business (allowed
for QUEST only)
431 - Data Analytics (starting Fall 2022)
408V - Emerging Topics in Information Systems; Data Visualization and Web
Analytics
(starting Fall 2022)
CPSP:Scholars All
DATA 320 - Introduction to Data Science
400 - Applied Probability and Statistics I
ECON 414 - Game Theory
433 - Economics of Big Data
https://undergrad.cs.umd.edu/upper-level-concentration 7/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
ULC Areas Course(s) Not AcceptabUleNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
ENEE 350 - Computer Organization (effective Fall 2022)
426 - Communication Networks (effective Fall 2022)
436 - Machine Learning (formerly ENEE439M)
446 - Digital Computer Design
447 - Operating Systems
457 - Computer Systems Security
ENGL 381 - MGA Legislative Seminar
All 39X FSPW Courses
GEOG 376 - Programming for Geospatial Analysis
371 - Programming for Image Analysis
461 - Machine Learning for Computational Earth Observation Science (CEOS)
476 - Object-Oriented Programming for GIS
470 - Algorithms for Geospatial Computing
498I - Data Structures for Geospatial Computing
HONR/HNUH All
IMDM 327 - Computational Virtual Reality
390 - Collaborative Studio II: Experiential Computing
498I - Introduction to Motion Capture
https://undergrad.cs.umd.edu/upper-level-concentration 8/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
ULC Areas Course(s) Not AcceptabUleNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
INST All INST courses are not accepted as ULC unless students are declared in the
following programs:
Information Risk Management, Ethics, and Privacy Minor at Shady Grove
(”https://academiccatalog.umd.edu/undergraduate/colleges-
schools/universities-shady-grove/information/information-risk-
management-ethics-privacy/”)
Technology Innovation Leadership Minor at Shady Grove
(”https://academiccatalog.umd.edu/undergraduate/colleges-
schools/universities-shady-grove/information/technology-innovation-
leadership/”)
IMD or Technology & Information Design Majors ONLY will be eligible to use
INST398M
MATH 456 - Cryptography
461 - Linear Algebra for Scientists and Engineers (after Spring 2020)
475 - Combinatorics and Graph Theory
PHIL 408F - A Gentle Introduction to Machine Learning
PHPE 408J - A Gentle Introduction to Machine Learning
PHYS 457 - Introduction to Quantum Computing (cross-listed with CMSC457)
474 - Computational Physics
476 - Applied Machine Learning (After Fall 2020)
486 - Machine Learning for Physicists
PSYC 417 - Data Science for Psychology and Neuroscience Majors
https://undergrad.cs.umd.edu/upper-level-concentration 9/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
ULC Areas Course(s) Not AcceptabUleNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Robotics ENAE450: Robotics Programming
Minor ENEE457:Computer Systems Security
ENEE467: Robotics Project Laboratory
ENEE408I: Capstone Autonomous Robotics
CMSC477: Robotics Perception and Planning
All CMSC Technical Electives
STAT 426 - Introduction to Data Science and Machine Learning
464 - Introduction to Biostatistics
The STAT4xx course used to fulfill the CS math requirements cannot also
count towards the Upper Level Concentration requirements.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
https://undergrad.cs.umd.edu/upper-level-concentration 10/114/12/25, 2:56 AM Upper Level Concentration | Undergraduate Computer Science at UMD
College Park, MD 20742
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/upper-level-concentration 11/11

================================================================================
Filename: Combined BS_MS Program _ Undergraduate Computer Science at UMD.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Combined BS/MS Program Frequently
Asked
Questions
View the video from the MS Nuts and Bolts event here on Box
Are admissions
(https://umd.box.com/s/b16osb011yyxtxbe6j2e1b4zayf7mqjc)
competitive?
Since 2008, the Department has offered a combined BS/MS degree program to enable talented
Can I use coursework
students to earn both a BS and an MS, both in Computer Science, within a shorter period than earning taken abroad
the degrees separately, typically 5 years. towards the BS/MS
program?
Students in this program must satisfy all standard requirements for both the Computer Science BS and
MS degrees; however, students admitted as Combined BS/MS may use up to 9 credits that were taken
Do my scholarships,
while enrolled as an undergraduate toward both degrees. Students applying for the program should like the
familiarize themselves with the MS degree requirements, found in our graduate policy manual. Banneker/Key
(https://www.cs.umd.edu/grad/policy-manual) Scholarship or any
extra scholarship
* Only courses in CMSC, AMSC/MATH/STAT are eligible for double-counting. funds carry over?
Do recommenders
need to be CS
https://undergrad.cs.umd.edu/combined-bsms-program 1/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Eligibility faculty?
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
How long does the
Interested students must meet the following criteria before their application can undergo a holistic
program take? How
review:
can I complete the
MS program in one
Hold a major in Computer Science at UMD; double majors are acceptable, however, students
year?
from non-CS majors are ineligible
Maintain a minimum cumulative GPA of 3.5 *
How many letters of
Have completed a minimum of 90 credits prior to application
recommendation are
Possess no more than 30 remaining credits of CMSC courses for the B.S. degree needed?
Have no more than six credits of General Education requirements left to complete for the
B.S. degree
I am not involved in
At the time of submitting the Combined BS/MS form, be within two to three semesters away research. Should I
from their undergraduate graduation still apply?
Preferably have engaged/initiated research activities under the supervision of a member of the
graduate faculty I do not see
Have obtained a recommendation letter from that faculty member endorsing the student “Combined BS/MS”
as an option on the
applying to the M.S. program and (if applicable) stating that they agree to advise the student
application
during their M.S. program *
Submit a CV detailing relevant experience and qualifications
Is there an academic
* Note: If your GPA is marginally below the required threshold (e.g 3.48) but you anticipate it will meet plan that I can
or exceed this by the admission deadline, you may initiate the application process; however, the CS follow?
Graduate Office will only proceed with your application when your GPA achieves the requisite 3.5
minimum. Those who do not meet this requirement are welcome to apply to the non-combined M.S. What courses are
eligible for transfer?
program or any professional Masters programs.
* Students may find themselves in a semester where they are taking three 400-level courses
What happens after I
without having secured a faculty advisor for the MS program. In such cases, they are still eligible submit my form, and
to submit the BS/MS form. However, they should find a faculty advisor by the time they apply for how long does it take
to process?
MS admission.
https://undergrad.cs.umd.edu/combined-bsms-program 2/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Your Combined BS/MS Degree Journey
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU) When should I
submit the combined
BS/MS form, and for
which semester
should I apply?
Step 1: Research and Plan
Review the Combined BS/MS and CS graduate degree requirements two to three semesters
before graduating. Plan your coursework and consider engaging in research to enhance your
application.
Step 2: Complete Your Combined BS/MS Coursework
https://undergrad.cs.umd.edu/combined-bsms-program 3/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Consult with your advisor about your course selection. For optimal progression in the Combined
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
BS/MS program, enroll in three 400-level (or higher) CMSC courses within a single semester (See
Course Selection).
Submit the Combined Bachelor's/Master's degree form (https://gradschool.umd.edu/forms)
using this link (https://docs.google.com/forms/d/e/1FAIpQLScqNLdZJ-JSZo-
hplTjhQVkxc609CRRBlIsHkOXrFCRNdb1Ww/viewform) to the CS Graduate Office. The office will
review, secure necessary signatures, and forward your paperwork to the Graduate School.
Step 3: Receive Graduate School Approval
After the Graduate School reviews and approves your form, you will then be able to select
"Combined Bachelor's-Master's" (CSMS-31P) in online graduate application
(https://gradschool.umd.edu/admissions/application-process/step-step-guide-applying).
Step 4: Apply to the CS Graduate Program.
Apply via the online graduate application and submit your BS/MS Program Application (further
details on admission application and deadlines are available here
(https://www.cs.umd.edu/grad/apply)).
You must apply for the CS Graduate program in a fall semester (either third-to-last or second-to-
last semester) to start in the subsequent spring or fall semesters.
Step 5: Bachelor's Program Graduation!
You must graduate in the semester you indicated on your graduate application. Please see the
"Commencement Delays" section for more information.
Step 6: Post-Admission Submission
By your 2nd semester or in the term you are planning to graduate, submit the UMD Graduate
School Inclusion Form (https://gradschool.umd.edu/sites/default/files/2023-
08/UMD%20Grad%20School%20Request%20for%20Transfer%20or%20Inclusion%20of%20Credit%20July2023.pdf) to
ensure ensure that your double-counted credits are recognized and applied to your Master's
degree.
Step 7: Master's Program Graduation!
https://undergrad.cs.umd.edu/combined-bsms-program 4/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Fulfill all program requirements and celebrate your achievement!
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Key Points to Remember:
You won't have the ability to choose the "Combined Bachelor's-Master's" (CSMS-31P) option
under "Level of Study" until the Graduate School approves your Combined BS/MS form.
You must apply for the term that immediately follows your completion of the bachelor's degree.
For example,
If you plan to graduate with your BS in Fall 2024 and start your graduate program in
Spring 2025, submit your graduate admission application for the CS graduate program in
Fall 2024 by the September deadline;
If you plan to graduate with your BS in Spring 2025 and start your graduate program in
Fall 2025, submit your graduate admission application for the CS graduate program in
Fall 2024 by the December deadline.
For admission deadlines, see the Prospective Student page (http://www.cs.umd.edu/grad/catalog).
Combined BS/MS form and Graduate Application
Submission Windows
Summary: in your third-to-last or second-to-last semester, register for three 400-level (or higher) CMSC
courses and submit the Combined BS/MS form to the CS Graduate Office.Once approved by UMD's
Graduate School, proceed to submit your graduate program admission application.
Spring Term Submission Windows:
Start Date: After the schedule adjustment period
End Date: One week before the semester ends (last day of class)
Fall Term Submission Windows:
Start Date: After the schedule adjustment period
End Date: One week before the semester ends (last day of class)
For students applying for Spring term admission, be aware that the application cut-off is
one week before the Spring term admission application deadline (typically the last Friday
https://undergrad.cs.umd.edu/combined-bsms-program 5/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
in September).
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
* Schedule adjustment period (https://www.registrar.umd.edu/deadlines.html)
* Note: You may submit your Combined BS/MS form in either the spring or fall semester, but you can
only submit a graduate application in the fall semester. If you plan to graduate in a spring semester,
please ensure that your Combined BS/MS form is submitted and approved in a previous spring or fall
semester before applying to the graduate program in your last fall semester.
https://undergrad.cs.umd.edu/combined-bsms-program 6/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Guidelines & Regulations
Course Selection
Students may include between 3 to 9 credits.
https://undergrad.cs.umd.edu/combined-bsms-program 7/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Please note that since CMSC412 is a 4-credit course, you can only double count two
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
courses totaling 7 credits, as the maximum allowed cannot exceed 9 credits.
Courses on your Combined BS/MS form for dual credit are final. You cannot revise them later.
To optimize your academic path in the combined BS/MS program, enroll in three CMSC courses
in a single term. Courses should be 400-level or higher and exclude independent studies and
special topics. A suitable 400-level (or higher) course from AMSC/MATH/STAT may also be used
as a substitute.
Past Courses: Courses from previous semesters will not be retroactively approved for the
Combined BS/MS program under any circumstances.
Future Courses: Students may include courses from future terms if they encounter
difficulties enrolling in all three courses in a single term. However, failure to register for
planned future courses will result in the forfeiture of double-counted credits.
Fall Graduates only: students in their final semester who intend to apply for the Combined
BS/MS program may still proceed with their applications; however, they are restricted to listing
only those CMSC or AMST/MATH/STAT courses for which they are registered in in their final
semester.
Taking 9 double-counted credits doesn't assure MS completion within one year post-BS. Before
the start of your final year, please reach out to your assigned academic advisor about the option
of enrolling in a 400- or 600-800-level CMSC or AMSC/MATH/STAT course (except for
independent studies and special topics) for graduate credit only. If approved, you'll need to
complete a Graduate Credit Permission form
(https://gradschool.umd.edu/sites/default/files/2022-
11/graduate_credit_permission_form_sep2022.pdf). Your assigned academic advisor will
provide further details on this process.
Application Limitations
Students rejected from the dual Bachelor's/Master's program can only apply for the traditional
Master of Science in future application cycles.
https://undergrad.cs.umd.edu/combined-bsms-program 8/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
Deferments & Leaves
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Admitted students cannot defer their Master's program start. Students may request a Leave of
Absence in their first year in the Master's program. The only reasons combined B/M students may
take a semester/year off immediately after earning the bachelor's degree are: childbirth,
adoption, serious health condition, caring for incapacitated dependents, financial hardship, and
military service (i.e., allowed reasons under the Graduate School's Leave of Absence
(https://academiccatalog.umd.edu/graduate/policies/registration-policies/#text) policy).
Commencement Delays
If students don't start their Master's program immediately after finishing their Bachelor's degree,
any credits that were set to count for both degrees will only apply to the Bachelor's degree. The
Combined BS/MS Form cannot be approved retroactively once the student has entered graduate
studies.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
https://undergrad.cs.umd.edu/combined-bsms-program 9/104/12/25, 2:50 AM Combined BS/MS Program | Undergraduate Computer Science at UMD
College Park, MD 20742
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/combined-bsms-program 10/10

================================================================================
Filename: CS_Schedule_Of_Classes.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 2:37 PM Schedule of Classes
SCHEDULE of CLASSES
OFFICE of the REGISTRAR
All Courses
General Education Courses
My Saved List (0 Courses)
Final Exams
Past Schedules
Course:
CMSC
Section:
Term: Fall 2025
Search
Clear
Open Sections Only
Credit: >= 0.0
Level: All Undergraduate Graduate
Instructor(last,first): Last Name, First Name
Delivery: Face-to-Face Blended Learning Online
Start Time: :
Location/Program: Show All
Course Days: Monday Tuesday Wednesday Thursday Friday
Hide Advanced Options
Courses - Fall 2025
QUESTIONS? ASK SHELLY
CMSC
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 1/314/12/25, 2:37 PM Schedule of Classes
Computer Science Department Site Open Seats as of
04/12/2025 at 01:30 PM
Show All Sections
CMSC100
Bits and Bytes of Computer and Information Sciences
Syllabus Repository (0)
Credits: 1
Grad Meth: Reg
Restriction: For first time freshmen and first time transfer students; or permission of CMNS-Computer Science department.
Cross-listed with: INST101.
Credit only granted for: CMSC100 or INST101.
Students are introduced to the fields (and disciplines) of computer science and information science within a small classroom setting. They will learn to
make a successful transition from high school to the university, while exploring study skills, student success plans and research opportunities.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC106
Introduction to C Programming
Syllabus Repository (0)
Credits: 4
Grad Meth: Reg
Prerequisite: MATH115.
Restriction: Must not be in Computer Science program; and must not have completed any courses from CMSC131-499 course range.
Credit only granted for: CMSC106 or CMSC122.
Design and analysis of programs in C. An introduction to computing using structured programming concepts. Intended for students with no or
minimal programming experience.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC122
Introduction to Computer Programming via the Web
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
GenEd: DSSP
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 2/314/12/25, 2:37 PM Schedule of Classes
Restriction: Must not have completed any courses from CMSC131-499 course range; and must not be concurrently enrolled in CMSC131.
Credit only granted for: CMSC106, or CMSC122.
Introduction to computer programming in the context of developing full featured dynamic web sites. Uses a problem solving approach to teach basics
of program design and implementation using JavaScript; relates these skills to creation of dynamic web sites; then explores both the potential and
limits of web-based information sources for use in research. Intended to help relate a student's major to these emerging technologies.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC125
Introduction to Computing
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
GenEd: DSSP
Prerequisite: Must have completed or be concurrently enrolled in MATH115 or higher.
Restriction: Must not be in the Computer Science program; and must not have completed any courses from CMSC131-499; and must not have
completed BMGT302, IMDM127 or INST126.
Credit only granted for: IMDM127 or CMSC125.
Introduces you to the computing field as a whole. You will gain skills used across the spectrum of computing majors and learn about the great variety
of routes into the various areas of study and employment in technological fields.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC131
Object-Oriented Programming I
Syllabus Repository (1)
Credits: 4
Grad Meth: Reg
Corequisite: MATH140.
Credit only granted for: CMSC131, CMSC133 or CMSC141.
Introduction to programming and computer science. Emphasizes understanding and implementation of applications using object-oriented techniques.
Develops skills such as program design and testing as well as implementation of programs using a graphical IDE. Programming done in Java.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC132
Object-Oriented Programming II
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 3/314/12/25, 2:37 PM Schedule of Classes
Syllabus Repository (0)
Credits: 4
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC131; or must have earned a score of 5 on the A Java AP exam; or must have earned a satisfactory score
on the departmental placement exam; and minimum grade of C- in MATH140.
Credit only granted for: CMSC132 or CMSC142.
Introduction to use of computers to solve problems using software engineering principles. Design, build, test, and debug medium -size software
systems and learn to use relevant tools. Use object-oriented methods to create effective and efficient problem solutions. Use and implement
application programming interfaces (APIs). Programming done in Java.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC133
(Perm Req)
Object Oriented Programming I Beyond Fundamentals
Syllabus Repository (0)
Credits: 2
Grad Meth: Reg
Prerequisite: Must have completed or be concurrently enrolled in MATH140.
Restriction: Permission of CMNS-Computer Science department; and student must have earned a 4 on the AP Computer Science A exam or a
satisfactory score on the CMSC131 department placement exam.
Credit only granted for: CMSC131 or CMSC133.
An introduction to computer science and object-oriented programming for students with prior Java programming knowledge (conditionals, loops,
methods). Program design, implementation, and testing using object-oriented techniques. All programming will be done in Java using a graphical IDE.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC216
(Perm Req)
Introduction to Computer Systems
Syllabus Repository (0)
Credits: 4
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC132; and minimum grade of C- in MATH141.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 4/314/12/25, 2:37 PM Schedule of Classes
Restriction: Must be in a major within the CMNS-Computer Science department; or must be in Engineering: Computer program; or must be in the
Computer Science Minor program; and Permission of CMSC - Computer Science department.
Introduction to the interaction between user programs and the operating system/hardware. Major topics include C programming, introductory systems
programming, and assembly language. Other concepts covered include UNIX, machine data representation, thread management, optimization, and
virtual memory. Programming is done in the Linux Environment.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC250
(Perm Req)
Discrete Structures
Syllabus Repository (1)
Credits: 4
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC131; and minimum grade of C- in MATH141.
Restriction: Must be in a major within the CMNS-Computer Science department; or must be in Engineering: Computer program; or must be in the
Computer Science Minor program; and Permissions of CMSC - Computer Science department.
Fundamental mathematical concepts related to computer science, including finite and infinite sets, relations, functions, and propositional logic.
Introduction to other techniques, modeling and solving problems in computer science. Introduction to permutations, combinations, graphs, and trees
with selected applications.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC298A
(Perm Req)
Special Topics in Computer Science
Syllabus Repository (1)
Credits: 1 - 4
Grad Meth: S-F
Contact department for information to register for this course.
CMSC320
(Perm Req)
Introduction to Data Science
Syllabus Repository (0)
Credits: 3
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 5/314/12/25, 2:37 PM Schedule of Classes
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC216 and CMSC250.
Restriction: Permission of CMNS-Computer Science department.
Credit only granted for: CMSC320, DATA320 or STAT426.
An introduction to the data science pipeline, i.e., the end-to-end process of going from unstructured, messy data to knowledge and actionable insights.
Provides a broad overview of several topics including statistical data analysis, basic data mining and machine learning algorithms, large-scale data
management, cloud computing, and information visualization.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC330
(Perm Req)
Organization of Programming Languages
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC250 and CMSC216.
Restriction: Must be in a major within the CMNS-Computer Science department; or must be in the Computer Science Minor program; or must be in
Engineering: Computer program; and Permission of CMSC - Computer Science department.
A study of programming languages, including their syntax, semantics, and implementation. Several different models of languages are discussed,
including dynamic, scripting (e.g., Ruby, Python) functional (e.g., OCaml, Haskell, Scheme), and memory safe systems programming (e.g., Rust).
Explores language features such as formal syntax, scoping and binding of variables, higher-order programming, typing, and type polymorphism.
Introduces finite automata, context free grammar, parsing, lambda calculus, and basics of security attacks and software security.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC335
(Perm Req)
Web Application Development with JavaScript
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC216 and CMSC250.
Restriction: Permission of CMNS-Computer Science Department.
Credit only granted for: CMSC389N or CMSC335.
Formerly: CMSC389N.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 6/314/12/25, 2:37 PM Schedule of Classes
Provides an introduction to modern ways of developing Web Applications/Services using JavaScript for both front-end and back-end. The course
covers topics on fundamental JavaScript language constructs, server-side JavaScript, back-end data persistence, and client-side JavaScript to build
Web Applications that interact with Web services and back-end databases.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC351
(Perm Req)
Algorithms
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC250 and CMSC216.
Restriction: Must be in a major within the CMNS-Computer Science department; or must be in Engineering: Computer program; or must be in the
Computer Science Minor program; and Permission from the CMSC - Computer Science department.
A systematic study of the complexity of some elementary algorithms related to sorting, graphs and trees, and combinatorics. Algorithms are analyzed
using mathematical techniques to solve recurrences and summations.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC396H
(Perm Req)
Computer Science Honors Seminar
Syllabus Repository (0)
Credits: 1
Grad Meth: Reg
Prerequisite: Must have admission into Computer Science Departmental Honors Program.
Restriction: Permission of CMNS-Computer Science department.
Overview of computer science research activities, techniques, and tools. Diverse research areas will be covered, including systems, networks, artificial
intelligence, human-computer interaction, software engineering, graphics, vision, and theory.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC411
(Perm Req)
Computer Systems Architecture
Syllabus Repository (0)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 7/314/12/25, 2:37 PM Schedule of Classes
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330; or must be in the (Computer Science (Doctoral), Computer Science (Master's)) program.
Restriction: Permission of CMNS-Computer Science department.
Credit only granted for: ENEE446 or CMSC411.
Input/output processors and techniques. Intra-system communication, buses, caches. Addressing and memory hierarchies. Microprogramming,
parallelism, and pipelining.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC412
(Perm Req)
Operating Systems
Syllabus Repository (0)
Credits: 4
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; and 1 course with a minimum grade of C- from (CMSC414, CMSC417,
CMSC420, CMSC430, CMSC433, CMSC435, ENEE440, ENEE457).
Restriction: Permission of CMNS-Computer Science department; or must be in one of the following programs (Computer Science (Master's);
Computer Science (Doctoral)).
Credit only granted for: CMSC412 or ENEE447.
A hands-on introduction to operating systems, including topics in: multiprogramming, communication and synchronization, memory management, IO
subsystems, and resource scheduling polices. The laboratory component consists of constructing a small kernel, including functions for device IO,
multi-tasking, and memory management.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC414
(Perm Req)
Computer and Network Security
Syllabus Repository (6)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; or must be in the (Computer Science (Doctoral), Computer Science (Master's))
program.
Restriction: Permission of CMNS-Computer Science department.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 8/314/12/25, 2:37 PM Schedule of Classes
Credit only granted for: CMSC414, ENEE459C, or ENEE457.
An introduction to the topic of security in the context of computer systems and networks. Identify, analyze, and solve network-related security
problems in computer systems. Fundamentals of number theory, authentication, and encryption technologies, as well as the practical problems that
have to be solved in order to make those technologies workable in a networked environment, particularly in the wide-area Internet environment.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC416
(Perm Req)
Introduction to Parallel Computing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; or permission of instructor.
Restriction: Permission of CMNS-Computer Science department.
Jointly offered with: CMSC616.
Credit only granted for: CMSC416, CMSC498X, CMSC616, or CMSC818X.
Formerly: CMSC498X.
Introduction to parallel computing. Topics include programming for shared memory and distributed memory parallel architectures, and fundamental
issues in design, development, and performance analysis of parallel programs.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC417
(Perm Req)
Computer Networks
Syllabus Repository (3)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Computer networks and architectures. The OSI model including discussion and examples of various network layers. A general introduction to existing
network protocols. Communication protocol specification, analysis, and testing.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC420
(Perm Req)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_online… 9/314/12/25, 2:37 PM Schedule of Classes
Advanced Data Structures
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Description, properties, and storage allocation functions of data structures including balanced binary trees, B-Trees, hash tables, skiplists, tries, KD-
Trees and Quadtrees. Algorithms for manipulating structures. Applications from areas such as String Processing, Computer Graphics, Information
Retrieval, Computer Networks, Computer Vision, and Operating Systems.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC421
(Perm Req)
Introduction to Artificial Intelligence
Syllabus Repository (2)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Introduces a range of ideas and methods in AI, varying semester to semester but chosen largely from: automated heuristic search, planning, games,
knowledge representation, logical and statistical inference, learning, natural language processing, vision, robotics, cognitive modeling, and intelligent
agents. Programming projects will help students obtain a hands-on feel for various topics.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC422
(Perm Req)
Introduction to Machine Learning
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC320, CMSC330, and CMSC351; and 1 course with a minimum grade of C- from (MATH240,
MATH341, MATH461); and permission of CMNS-Computer Science department.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 10/314/12/25, 2:37 PM Schedule of Classes
Machine Learning studies representations and algorithms that allow machines to improve their performance on a task from experience. This is a broad
overview of existing methods for machine learning and an introduction to adaptive systems in general. Emphasis is given to practical aspects of
machine learning and data mining.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC423
(Perm Req)
Bioinformatic Algorithms, Databases, and Tools
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
An introduction to the main algorithms, databases, and tools used in bioinformatics. Topics may include assembly and analysis of genome sequences,
reconstructing evolutionary histories, predicting protein structure, and clustering of biological data. Use of scripting languages to perform analysis
tasks on biological data. No prior knowledge of biology is assumed.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC424
(Perm Req)
Database Design
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Students are introduced to database systems and motivates the database approach as a mechanism for modeling the real world. An in-depth coverage
of the relational model, logical database design, query languages, and other database concepts including query optimization, concurrency control;
transaction management, and log based crash recovery. Distributed and Web database architectures are also discussed.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC425
(Perm Req)
Game Programming
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 11/314/12/25, 2:37 PM Schedule of Classes
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351.
Restriction: Permission of CMNS-Computer Science department.
An introduction to the principles and practice of computer game programming and design. This includes an introduction to game hardware and
systems, the principles of game design, object and terrain modeling, game physics, artificial intelligence for games, networking for games, rendering
and animation, and aural rendering. Course topics are reinforced through the design and implementation of a working computer game.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC426
(Perm Req)
Computer Vision
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351 and 1 course with a minimum grade of C- from (MATH240, MATH341,
MATH461); or must be in the (Computer Science (Doctoral), Computer Science (Master's)) program; or permission of the instructor.
Restriction: Permission of CMNS-Computer Science department.
An introduction to basic concepts and techniques in computervision. This includes low-level operations such as image filtering and edge detection, 3D
reconstruction of scenes using stereo and structure from motion, and object detection, recognition and classification.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC430
(Perm Req)
Introduction to Compilers
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Topics include lexical analysis, parsing, intermediate representations, program analysis, optimization, and code generation.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 12/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC433
(Perm Req)
Programming Language Technologies and Paradigms
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330; or must be in the (Computer Science (Doctoral), Computer Science (Master's)) program.
Restriction: Permission of CMNS-Computer Science department.
Programming language technologies (e.g., object-oriented programming), their implementations and use in software design and implementation.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC434
(Perm Req)
Introduction to Human-Computer Interaction
Syllabus Repository (4)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Assess usability by quantitative and qualitative methods. Conduct task analyses, usability tests, expert reviews, and continuing assessments of
working products by interviews, surveys, and logging. Apply design processes and guidelines to develop professional quality user interfaces. Build
low-fidelity paper mockups, and a high-fidelity prototype using contemporary tools such as graphic editors and a graphical programming environment
(eg: Visual Basic, Java).
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC435
(Perm Req)
Software Engineering
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 13/314/12/25, 2:37 PM Schedule of Classes
Prerequisite: 1 course with a minimum grade of C- from (CMSC412, CMSC417, CMSC420, CMSC430, CMSC433, ENEE447); and permission of
CMNS-Computer Science department.
State-of-the-art techniques in software design and development. Laboratory experience in applying the techniques covered. Structured design,
structured programming, top-down design and development, segmentation and modularization techniques, iterative enhancement, design and code
inspection techniques, correctness, and chief-programmer teams. The development of a large software project.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC436
(Perm Req)
Programming Handheld Systems
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; or must be in the (Computer Science (Doctoral), Computer Science (Master's))
program.
Restriction: Permission of CMNS-Computer Science department.
Fundamental principles and concepts that underlie the programming of handheld systems, such as mobile phones, personal digital assistants, and tablet
computers. Particular emphasis will be placed on concepts such as limited display size, power, memory and CPU speed; and new input modalities,
where handheld systems differ substantially from non-handheld systems, and thus require special programming tools and approaches. Students will
apply these concepts and principles in the context of an existing handset programming platform.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC451
(Perm Req)
Design and Analysis of Computer Algorithms
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351; and permission of CMNS-Computer Science department. Or must be in the (Computer Science
(Doctoral), Computer Science (Master's)) program.
Fundamental techniques for designing efficient computer algorithms, proving their correctness, and analyzing their complexity. General topics include
graph algorithms, basic algorithm design paradigms (such as greedy algorithms, divide-and-conquer, and dynamic programming), network flows, NP-
completeness, and other selected topics in algorithms.
Show Sections All Sections Face-to-Face Blended Learning Online
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 14/314/12/25, 2:37 PM Schedule of Classes
CMSC454
(Perm Req)
Algorithms for Data Science
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351.
Restriction: Permission of CMSC-Computer Science department.
Fundamental methods for processing a high volume of data. Methods include stream processing, locally sensitive hashing, web search methods, page
rank computation, network and link analysis, dynamic graph algorithms as well as methods to handle high dimensional data/dimensionality reduction.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC456
(Perm Req)
Cryptography
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: (CMSC106, CMSC131, or ENEE150; or equivalent programming experience); and (2 courses from (CMSC330, CMSC351, ENEE324,
or ENEE380); or any one of these courses and a 400-level MATH course, or two 400-level MATH courses); and Permission of CMNS-Mathematics
department or permission of instructor .
Cross-listed with: MATH456, ENEE456.
Credit only granted for: MATH456, CMSC456 or ENEE456.
The theory, application, and implementation of mathematical techniques used to secure modern communications. Topics include symmetric and
public-key encryption, message integrity, hash functions, block-cipher design and analysis, number theory, and digital signatures.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC460
(Perm Req)
Computational Methods
Syllabus Repository (2)
Credits: 3
Grad Meth: Reg
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 15/314/12/25, 2:37 PM Schedule of Classes
Prerequisite: 1 course with a minimum grade of C- from (MATH240, MATH341, MATH461); and 1 course with a minimum grade of C- from
(MATH241, MATH340); and 1 course with a minimum grade of C- from (CMSC106, CMSC131); and minimum grade of C- in MATH246.
Cross-listed with: AMSC460.
Credit only granted for: AMSC460, AMSC466, CMSC460, or CMSC466.
Basic computational methods for interpolation, least squares, approximation, numerical quadrature, numerical solution of polynomial and
transcendental equations, systems of linear equations and initial value problems for ordinary differential equations. Emphasis on methods and their
computational properties rather than their analytic aspects. Intended primarily for students in the physical and engineering sciences.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC466
(Perm Req)
Introduction to Numerical Analysis I
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: 1 course with a minimum grade of C- from (CMSC106, CMSC131); and minimum grade of C- in MATH410.
Cross-listed with: AMSC466.
Credit only granted for: AMSC460, CMSC460, AMSC466, or CMSC466.
Floating point computations, direct methods for linear systems, interpolation, solution of nonlinear equations.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC470
(Perm Req)
Introduction to Natural Language Processing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC320, CMSC330, and CMSC351; and 1 course with a minimum grade of C- from (MATH240,
MATH341, MATH461).
Restriction: Permission of CMNS-Computer Science department.
Introduction to fundamental techniques for automatically processing and generating natural language with computers. Machine learning techniques,
models, and algorithms that enable computers to deal with the ambiguity and implicit structure of natural language. Application of these techniques in
a series of assignments designed to address a core application such as question answering or machine translation.
Show Sections All Sections Face-to-Face Blended Learning Online
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 16/314/12/25, 2:37 PM Schedule of Classes
CMSC471
(Perm Req)
Introduction to Data Visualization
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC330 and CMSC351; and permission of CMNS-Computer Science Department.
Restriction: Permission of the CMNS-Computer Science Department.
Credit only granted for: CMSC471 or CMSC498O.
Formerly: CMSC498O.
Datasets are becoming increasingly large and complex, requiring intuitive ways to explore and interpret them quickly and efficiently. In this case, a
picture is worth a thousand words: visualizations enable us to transform data into images that are easier to understand and reason about, compared to
raw numbers and raw text. Visualizations are critical tools in externalizing and organizing our knowledge and insights, whether to explore collected
datasets to improve our understanding of the physical world, to assess and debug analysis/experimental workflows, or to present new and interesting
results to diverse audiences. In this course we will study techniques and algorithms for creating effective visualizations based on principles from
graphic design, perceptual psychology, and cognitive science. Students will learn how to design and build interactive visualizations for the web, using
the D3.js (Data-Driven Documents) framework.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC473
(Perm Req)
Capstone in Machine Learning
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- or higher in CMSC421 or CMSC422.
Recommended: Background or exposure to machine learning topics is strongly encouraged.
Restriction: Permission of instructor and Permission of CMSC - Computer Science department.
Credit only granted for: CMSC498P or CMSC473.
Formerly: CMSC498P.
Additional information: Students will be paired with project advisors from the UMD faculty or alternatively, an industry advisor. Students are
encouraged to plan for projects results that can be published at academic conferences or will impact academic research.
Semester-long project course in which each student will identify and carry out a project related to machine learning, with the goal of publishing a
research paper or software tool.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 17/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC474
(Perm Req)
Introduction to Computational Game Theory
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC351 and CMSC330; and permission of CMNS-Computer Science department. Or must be in the
(Computer Science (Doctoral), Computer Science (Master's)) program.
Credit only granted for: CMSC474, ECON414, GVPT390 or GVPT399A.
Game theory deals with interactions among agents (either human or computerized) whose objectives and preferences may differ from the objectives
and preferences of the other agents. It will also provide a comprehensive introduction to game theory, concentrating on its computational aspects.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC475
(Perm Req)
Combinatorics and Graph Theory
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: 1 course with a minimum grade of C- from (MATH240, MATH341, MATH461); and 1 course with a minimum grade of C- from
(MATH241, MATH340). And permission of CMNS-Computer Science department; or permission of CMNS-Mathematics department.
Cross-listed with MATH475 .
General enumeration methods, difference equations, generating functions. Elements of graph theory, matrix representations of graphs, applications of
graph theory to transport networks, matching theory and graphical algorithms.
Credit only granted for MATH475 or CMSC475.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC498A
(Perm Req)
Selected Topics in Computer Science
Syllabus Repository (0)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 18/314/12/25, 2:37 PM Schedule of Classes
Credits: 1 - 3
Grad Meth: Reg
An individualized course designed to allow a student or students to pursue a selected topic not taught as a part of the regular course offerings under the
supervision of a Computer Science faculty member. Credit according to work completed.
Contact department for information to register for this course.
CMSC498B
(Perm Req)
Selected Topics in Computer Science; Cloud Computing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisites: Minimum grade of C- in CMSC330 and CMSC351.
Explores several fundamental topics of cloud computing, including IaaS (e.g., Open Stack, Kubernetes), key big data platforms, and data center
networking. The course combines group reading and discussion of influential publications in the field, lectures by the instructor, talksby invited
speakers, and a large project. Students will be a part of an agile development team, with extensive experience with GitHub, agile tools, and various
technologies. Each course project is solicited from open-source community and will be mentored by an industry leader and/or engineer, or a senior
graduate student/postdoc.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC498J
(Perm Req)
Selected Topics in Computer Science; Human-Robot Interaction, Device Prototyping, and Embodied AI
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Minimum grade of C- in CMSC330 and CMSC351; and permission of CMNS-Computer Science department. Or must be in the (Computer Science
(Doctoral), Computer Science (Master's)) program.
This course is designed to introduce advanced undergraduates to human-robot interaction (HRI) and the recent developments in embodied AI, an
emerging research area focused on the design and evaluation of interactions between humans and robotic technologies. Students will: (1)learn design
principles for building, and research methods for evaluating, interactive robot systems through lectures, readings, and assignments; (2) read and
discuss relevant literature to gain a solid understanding of various research topics in HRI; and (3) gain hands-on experience by prototyping a
functional embodied AI robot that integrates the principles, methods, and knowledge acquired throughout the course.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 19/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC498K
(Perm Req)
Selected Topics in Computer Science; Introduction to Multimodal Deep Learning
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisites: Minimum grade of C- in CMSC320, CMSC330, and CMSC351; and 1 course with a minimum grade of C- from (MATH240,
MATH341, MATH461); and permission of the CMNS-Computer Science department.
This course will provide a comprehensive introduction to the fundamental concepts of key modalities and algorithms for multimodal representation
learning, alignment, and fusion. Students will learn key concepts, algorithms, and applications centered around multimodal deep learning while
gaining hands-on experience with state-of-the-art models and emerging reresearch trends.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC498Z
(Perm Req)
Selected Topics in Computer Science; Differentiable Programming
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisites: Minimum grade of C- in CMSC330 and CMSC351 and permission of the CMNS-Computer Science department. This course is an
introduction to differentiable Programming, a new programming paradigm in which a numerical program can be differentiated through automatic
differentiation , allowing gradient-based optimization of parameters in the program. It has broad applications in Computer Graph ics, Computer
Vision, Deep Learning, Quantum Computing, System Control, and many more. The course assumes a good working knowledge of linear algebra and
differentiation.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC499A
(Perm Req)
Independent Undergraduate Research
Syllabus Repository (0)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 20/314/12/25, 2:37 PM Schedule of Classes
Credits: 1 - 3
Grad Meth: Reg
Students are provided with an opportunity to participate in a computer science research project under the guidance of a faculty advisor. Format varies.
Students and supervising faculty member will agree to a research plan which must be approved by the department. As part of each research plan,
students should produce a final paper delineating their contribution to the field.
Contact department for information to register for this course.
CMSC616
Foundations of Parallel Computing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: CMSC411 and CMSC412; or permission of instructor.
Restriction: Must be in the Computer Science or Applied Mathematics and Scientific Computation master's or doctoral programs.
Credit only granted for: CMSC616 or CMSC818X.
Formerly: CMSC818X.
Covers the foundations of parallel computing. Topics include programming for shared memory and distributed memory parallel architectures, and
fundamental issues in design, development and analysis of parallel programs.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC631
Program Analysis and Understanding
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: CMSC330; or students who have taken courses with comparable content may contact the department; or permission of instructor.
Techniques for static analysis of source code and modern programming paradigms. Analysis techniques: data flow analysis, program dependence
graphs, program slicing, abstract interpretation. The meaning of programs: denotational semantics, partial evaluation. Advanced treatment of
abstraction mechanisms: polymorphic types, operation overloading, inheritance, object-oriented programming and ML-like programming languages.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC634
Empirical Research Methods for Computer Science
Syllabus Repository (0)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 21/314/12/25, 2:37 PM Schedule of Classes
Credits: 3
Grad Meth: Reg
Recommended: An introductory statistics class.
Restriction: Must be in Computer Science (Master's) program; or must be in Computer Science (Doctoral) program; or permission of instructor.
Credit only granted for: CMSC838G (Fall2005) or CMSC634.
A graduate-level introductory course on empirical reseach methods for computer scientists. Experimental techniques for evaluating software systems
and processes, human performance using interfaces, programming environments, and software engineering methods. Introduction to constructs and
methods of measurements, qualitative and quantitative design, quasi-experimental and non-experimental design, baseline design, and statistical
analysis.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC657
Introduction to Quantum Information Processing
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Prerequisite: Familiarity with complex numbers and basic concepts in linear algebra (e.g., eigenvalues, eigenvectors, Hermitian and unitary matrices)
is required.
Credit only granted for: CMSC657 or CMSC858K.
Formerly: CMSC858K.
Additional information: Previous background in quantum mechanics or theory of computation is not required.
An introduction to the field of quantum information processing. Students will be prepared to pursue further study in quantum computing, quantum
information theory, and related areas.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC660
Scientific Computing I
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Must have knowledge of Matlab or Python.
Cross-listed with: AMSC660.
Credit only granted for: AMSC660 or CMSC660.
Fundamental techniques in scientific computation with an introduction to theory and software for each topic. Computer numbers and sources of errors,
numerical linear algebra, optimization, and Monte Carlo methods.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 22/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC673
Capstone in Machine Learning
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C-in CMSC421 or CMSC422.
Jointly offered with: CMSC473.
Credit only granted for: CMSC673, CMSC798P, CMSC473, or CMSC498P.
Formerly: CMSC798P.
Semester-long project course in which each student will identify and carry out a project related to machine learning, with the goal of publishing a
research paper or software tool.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC702
Algorithmic Evolutionary Biology
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Restriction: Restricted to Master's/Doctoral students in Computer Science, Electrical and Computer, Engineering, Mathematics, Bioengineering, or
permission of instructor.
Credit only granted for: CMSC702 or CMSC829A.
Formerly: CMSC829A.
Covers fundamental computational problems from comparative genomics and evolutionary biology. Topics include multiple sequence alignment and
the reconstruction of evolutionary histories (e.g., phylogenetic trees and networks). These tasks are typically framed as NP-hard optimization
problems, motivating the development of heuristics based on constraints, graph algorithms, and more recently machine learning. We analyze
algorithms from the empirical and theoretical perspectives (e.g., computational complexity, optimality guarantees, and statistical consistency under
popular models of evolution). Lastly, we discuss how algorithms are leveraged in emerging applications, like evolutionary analyses of tumors and
pathogens, along with their limitations and directions for future research.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC722
Artificial Intelligence Planning
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 23/314/12/25, 2:37 PM Schedule of Classes
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg, Aud, S-F
Prerequisite: CMSC421; or students who have taken courses with comparable content may contact the department; or permission of CMNS-
Computer Science department.
Automated planning of actions to accomplish some desired goals. Basic algorithms, important systems, and new directions in the field of artificial
intelligence planning systems.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC723
Natural Language Processing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: Minimum grade of C- in CMSC422; and permission of CMNS-Computer Science department.
Cross-listed with: INST735, LING723.
Credit only granted for: CMSC723, LING723, or INST735.
Additional information: CMSC students may only receive PhD Comp. credit for CMSC723 or CMSC823, not both.
Introduce fundamental concepts, techniques, and algorithms for the computational handling of natural language. Statistical and machine learning
techniques, models, and algorithms that enable computers to deal with the ambiguity and implicit structure of human language. Approaches that focus
on uncovering linguistic structure, such as syntactic or semantic parsing, as well as those that focus on manipulating text in useful ways, such as
question answering or machine translation.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC740
Advanced Computer Graphics
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisite: MATH240 and CMSC420; or permission of instructor.
An introduction to advanced concepts in computer graphics. Includes an introduction to realistic rendering based on physical properties of light
transport, radiometric concepts, and the rendering equation; Monte Carlo integration techniques to solve the rendering equation such as path tracing
and multiple importance sampling; and neural network techniques for efficient sampling and denoising. Further discusses recent advances in 3D
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 24/314/12/25, 2:37 PM Schedule of Classes
modeling and reconstruction, such as neural network-based 3D reconstruction; inverse rendering using neural radiance fields and differentiable
rendering; and generative modeling for images, videos, and 3D data.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC798
(Perm Req)
Master's Non-Thesis Research
Syllabus Repository (0)
Credits: 1 - 3
Grad Meth: Reg
Contact department for information to register for this course.
CMSC799
(Perm Req)
Master's Thesis Research
Syllabus Repository (0)
Credits: 1 - 6
Grad Meth: S-F
Contact department for information to register for this course.
CMSC801
Department Internal Research Seminar
Syllabus Repository (0)
Credits: 1
Grad Meth: S-F
Credit only granted for: CMSC798E or CMSC801.
Formerly: CMSC798E.
Research overviews from faculty to help introduce departmental research to graduate students.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC818I
Advanced Topics in Computer Systems; Large Language Models, Security, and Privacy
Syllabus Repository (0)
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 25/314/12/25, 2:37 PM Schedule of Classes
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC818J
Advanced Topics in Computer Systems; Domain Specific Architecture
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Cross-listed with ENEE759c. Credit only granted for CMSC818J or ENEE759C.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC818T
Advanced Topics in Computer Systems; Applied Cryptographic Systems and Privacy Enhancing Technologies.
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC818V
Advanced Topics in Computer Systems; Machine Learning for Physical Sensing and Perception
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Prerequisites: Enrollment in a Master's or Doctoral program, or permission of the instructor.
Description: This course delves into advanced machine learning techniques for physical sensing and real-world perception. Topics include multimodal
3D volumetric rendering with physics-informed priors, ultra-low-power navigation with metamaterial sensing, urban localization via wireless signal
patterns, sparse sensing for underwater imaging, and integrating spatial knowledge into language models for perception-aware AI.
Show Sections All Sections Face-to-Face Blended Learning Online
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 26/314/12/25, 2:37 PM Schedule of Classes
CMSC828J
Advanced Topics in Information Processing; Common-sense Reasoning and Natural Language Understanding
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC828V
Advanced Topics in Information Processing; Numerical Methods for Data Science and Machine Learning
Syllabus Repository (0)
Credits: 1 - 3
Grad Meth: Reg, Aud, S-F
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC838B
Advanced Topics in Programming Languages; Differentiable Programming
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC838L
Advanced Topics in Programming Languages; Programming Languages and Computer Architecture
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC839A
Advanced Topics in Human-Computer Interaction; Embodied Media Design
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 27/314/12/25, 2:37 PM Schedule of Classes
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Explores the potential of human augmentation technologies, such as wearable computing, haptics, virtual reality, and more, to enhance human
physical, perceptual, and cognitive capabilities. To achieve this, students will read relevant literature from the fields of Psychology, Cognitive Science,
and Human-Computer Interaction. Additionally, students will create low-fidelity paper mockups and a prototype based on digital/analog circuit design,
mechanical design, and a programming environment.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC839C
Advanced Topics in Human-Computer Interaction; Governing Algorithms & Algorithmic Governance
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Cross-listed with INST878D. Credit only granted for INST878D or CMSC839C.
This cross-cutting interdisciplinary course, taught jointly between the College of Information Studies and the Department of Computer Science,
investigates the role that algorithms and automated decision-making systems play in markets, societies, and policymaking. The course connects policy
and computational conceptualizations of transparency, security, fairness, privacy, manipulation, and accountability through a series of casestudies and
burning debates. Students will collaborate cross-disciplinary and be encouraged to work through difficult trade-offs to reach consensus. By discussing
recent applications of algorithms for social and consumer sorting, and the moderation and generation of content, students will engage with the
pressing challenges and opportunities in the governance of and by algorithms.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC839E
Advanced Topics in Human-Computer Interaction; Uncertainty Communication for Decision-Making
Syllabus Repository (1)
Credits: 3
Grad Meth: Reg
Human-Computer Interaction (HCI) research topics focusing on model uncertainty and decision-making. We will cover a range of models, from linear
regression to probabilistic forecasts and AI foundation models, and explore how to help human users understand and manage uncertainty in these
computational models. Core topics include statistical communication, explainability, decision-making, uncertainty visualization, and LLM/LMM
uncertainty. The course format includes a combination of readings, presentations, discussions, and lectures.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 28/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC848B
Selected Topics in Information Processing; Computational Imaging
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Restriction: Must be in the Computer Science or Electrical and Computer Engineering Master's or Doctoral programs, or permission of instructor.
Cross-listed with ENEE739Z. Credit only granted for CMSC848B or ENEE739Z.
Introduces various computational imaging systems and the algorithms that underlie their operation. Particular emphasis will be placed on recently
developed learning based reconstruction algorithms. This is a mixed lecture/seminar course.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC848I
Selected Topics in Information Processing; AI Agents and Sequential Decision Making
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
AI-based agents need to operate in complex environments to make sequences of decisions to achieve some known goal. Many learning frameworks
for sequential decision making exist, including reinforcementlearning, imitation learning, learning from instructions, and others. In this course we will
cover the foundations of all these methods, building up to modern AI-based agents that are enabled by largefoundation models such as large language
models and large vision/language models.
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC848K
Selected Topics in Information Processing; Multimodal Foundation Models
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Discusses recent foundation models proposed in the literature, with a focus on vision-language models. Topics include large language models, vision-
language models, and vision-audio models.
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 29/314/12/25, 2:37 PM Schedule of Classes
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC848P
Selected Topics in Information Processing; Theory of Robust Machine Learning
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC858J
Advanced Topics in Theory of Computing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC858U
Advanced Topics in Theory of Computing
Syllabus Repository (0)
Credits: 3
Grad Meth: Reg
Show Sections All Sections Face-to-Face Blended Learning Online
CMSC898
Pre-Candidacy Research
Syllabus Repository (0)
Credits: 1 - 8
Grad Meth: Reg
Contact department for information to register for this course.
CMSC899
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 30/314/12/25, 2:37 PM Schedule of Classes
(Perm Req)
Doctoral Dissertation Research
Syllabus Repository (0)
Credits: 6
Grad Meth: S-F
Contact department for information to register for this course.
Flagship Institution of the University System of Maryland
University of Maryland, College Park, MD 20742, USA / Phone: 301.405.1000
Copyright © 2025 University of Maryland / Privacy / Web Accessibility Contact us with comments, questions and feedback /
https://app.testudo.umd.edu/soc/search?courseId=CMSC&sectionId=&termId=202508&_openSectionsOnly=on&creditCompare=&credits=&courseLevelFilter=ALL&instructor=&_facetoface=on&_blended=on&_onlin… 31/31

================================================================================
Filename: CS_Exemptions.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Departmental Exception to Policy
Request
The Department of Computer Science will consider a departmental exception to policy only in rare
and extraordinary circumstances that are beyond your control. *NOTE: All supporting
documentation (e.g. justification statement, academic plan, instructor permission if required, etc.)
must be included in order to submit the petition, which is processed by the CS Exceptions
Coordinator. You will be notified via email when your request has been completed. To request a
departmental exception to policy, complete this form. Exception requests are normally processed in 10-
14 business days.
Are you in your first semester at UMD? *
Yes
No
Choose yes if this is your first semester at UMD.
https://undergrad.cs.umd.edu/exception-form 1/64/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
Exception Policies UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
This form is to request department-level exceptions for the CS Major. If you are requesting college-level
exceptions (such as a late drop, late add, request a third attempt, etc.) please visit the CMNS Exceptions to
Policy page at https://cmns.umd.edu/undergraduate/advising-academic-planning/exceptions...
(https://cmns.umd.edu/undergraduate/advising-academic-planning/exceptions-policy).
CS Exceptions to Policy are approved only for rare and extraordinary circumstances, and submission of this
form does not guarantee exception request approval. Examples of eligible exception requests are as follows:
1. Waive Pre/Corequisite(s) Requirement(s)
a. Students should have a minimum cumulative GPA of 3.5 and written instructor support. Requesting
to take CMSC216 and CMSC351 concurrently requires a grade of “B-” or higher in CMSC250.
b. Students should contact instructors for support before submitting an exception request. Students
should email the instructor including the following information:
i. Full name and UID
ii. Math and CS credit history (optional attachment: unofficial transcript)
iii. Current Cumulative GPA
c. Please note that you cannot use a screenshot of a conversation as proof of official instructor
approval. We ask students to contact instructors via email to ensure we're receiving approval from a
verifiable faculty email address.
d. Instructor permission is needed for any 3xx or 4xx course (excluding CMSC330 and CMSC351). Please
note that while instructor permission is required for a request to be considered, it is not a guarantee
that a request will be granted, as other factors are also taken into consideration.
2. Modify Upper Level Concentration Requirement
a. Students should discuss their Upper Level Concentration Requirement substitution with their
assigned advisor prior to submitting an exception request.
https://undergrad.cs.umd.edu/exception-form 2/64/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
3. Count Different Math Course to Satisfy Major Requirement
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
4. Request a Fourth CMSC Course in One Semester
a. Students must have a minimum cumulative GPA of 3.0, but a cumulative and major GPA of 3.5 or
higher is preferred.
b. Students must be successfully registered for three 3-credit CMSC courses before submitting this
exception.
5. Substitute a 300-or 400-Level CMSC Course or Graduate Level CMSC Course to Satisfy an Upper Level
CMSC Major Requirement
a. Students should discuss their major Upper-Level requirements with their assigned advisor prior to
submitting an exception request.
b. Students must review the CS Departmentʼs course listing website at https://www.cs.umd.edu/grad/
coursework#courses (https://www.cs.umd.edu/grad/coursework#courses) to verify if their graduate-
level CS course is approved for area credit. If not, students should note this status in their justification
statement.
c. Students can only submit a graduate course substitution request if they are approved to take a
graduate-level CMSC course for undergraduate credit.
6. Take MATH or CMSC Course(s) at Another Institution
a. Students should discuss their major requirements with their assigned advisor prior to submitting an
exception request.
7. Undergraduate Student Taking a CMSC Graduate Course
a. Students must have a minimum cumulative GPA of 3.0 but a cumulative and major GPA of 3.5 or
higher is preferred.
b. Only two CMSC grad courses can be applied to the CS major upper level area. CMSC6xx-7xx courses
can be used towards the major upper level area and CMSC8X8 (Special Topics) courses can only be
used as CS elective courses.
c. Students should contact instructors for support before submitting an exception request. Students
should email the instructor including the following information:
https://undergrad.cs.umd.edu/exception-form 3/64/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
i. Full name and UID
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
ii. Math and CS credit history (optional attachment: unofficial transcript)
iii. Current Cumulative GPA
d. Please note that you cannot use a screenshot of a conversation as proof of official instructor
approval. We ask students to contact instructors via email to ensure we're receiving approval from a
verifiable faculty email address.
e. Please note: Graduate course for graduate credit requests can take up to eight weeks for CMNS to
process. Please make sure you take this time frame into consideration when placing your grad course
request.
8. Use more than 6 credits of ULC coursework from a domestic college/university
a. First bachelorʼs seeking students must take at least 6 credits of UMD Upper-Level Concentration
coursework.
9. Other
a. Students should discuss their unique exception requests with their assigned advisor prior to
submission.
Ineligible Exception requests are as follows:
1. Requesting to repeat a previously failed (lower than a “C-”) prerequisite course concurrently with a
subsequent course.
a. Example: Requesting to take CMSC351 with CMSC216 when grade of “D+” or lower was earned in
CMSC216 in a previous semester.
2. Requesting to use ENES210 or a cross-listed CMSC course in the Upper Level Concentration.
3. Requesting to use a CMSC Upper Level Elective course
(https://undergrad.cs.umd.edu/sites/undergrad.cs.umd.edu/files/images/uploads/2021/11/2108%20Computer%
%20CMSC.pdf) as a CMSC Distributive Area requirement.
4. Requesting to waive a prerequisite course as a first semester student.
https://undergrad.cs.umd.edu/exception-form 4/64/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
a. First semester students (direct admits and external transfers) must wait until their first semester
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
grades and cumulative GPA are posted on their UMD unofficial transcript
(https://app.testudo.umd.edu/main/uotrans) before they submit departmental exception requests.
If you agree to the policies above, select the [Next >>] button to continue to the exception request form.
Next >>
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/exception-form 5/64/12/25, 3:17 AM Departmental Exception to Policy Request | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/exception-form 6/6

================================================================================
Filename: Academic Advising _ Undergraduate Computer Science at UMD.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 2:50 AM Academic Advising | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Academic Advising Frequently
Asked
Questions
The CS Major Advising Process
Can I request to take
All Computer Science majors who are entering their first term within the Computer Science major, are
three 3-credit CMSC
student athletes, or are on academic probation are required to see their assigned advisor for
300/400 level
mandatory advising. Students cannot register for courses in the next semester without attending a
courses next
mandatory advising session. In late September or February, mandatory advising students will receive semester?
an email from their assigned academic advisor to schedule an appointment via TerpEngage
(https://terpengage.force.com/community/s/). How can I change my
assigned academic
Students outside of their first semester in the major are not required to come in for a mandatory
advisor?
advising session; they will request permissions through an online form sent by their assigned advisor.
Non-mandatory advising students can contact their assigned advisor directly to schedule an advising
How many CMSC
appointment. classes can I take per
semester?
If you are a minor or non-major, you may request permission for CMSC classes here (/forms).
How/When do I
schedule my
What to Expect During an Advising Session
https://undergrad.cs.umd.edu/academic-advising 1/54/12/25, 2:50 AM Academic Advising | Undergraduate Computer Science at UMD
Students will meet with advisors via a scheduled session. During mandatory advising sessions, mandatory advising
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
session?
advisors will help ensure that students meet CS and University General Education requirements
(https://gened.umd.edu/), discuss their academic performance, and connect them with resources and
What are Drop-In
opportunities. Non-mandatory advising students are encouraged to speak with an advisor at any time
Hours?
during the year to discuss their academic performance or other issues. CS majors and minors can also
attend virtual drop-in advising* (/drop-advising) for quick questions (10 minutes or less), exploratory
What do I do if I am
conversations, and time sensitive issues. Students should contact their assigned advisor for
late to or miss my
mandatory advisement and in-depth discussions. The CS Undergraduate Advising Office is located on advising session?
the first floor of The Brendan Iribe Center for Computer Science and Engineering.
What if I have
*Please note that Drop-In Advising is for CS major and minor students only. If you are a non-major
questions outside of
student, please contact the CS Undergraduate Advising Office at csadvising-ugrad@umd.edu
my mandatory
(mailto:csadvising-ugrad@umd.edu) for assistance.
advising session?
What if I want to
How To Prepare for Your Advising Session
change my CMSC
course permissions
In-Person Meetings after my mandatory
advising session?
Have your University ID card available.
Review your degree audit via UAchieve (https://uachieve.umd.edu/) prior to attending your
What is mandatory
session. Take ownership of your education--understanding CS coursework and requirements can
advising/am I
help you make timely progress on your degree! Knowing your requirements will also facilitate a required to meet
productive conversation with advisors. with my advisor each
semester?
Be sure to have a completed 4 year plan (electronic copy is OK) for your advising appointment.
If you scheduled your appointment in person, please check in at the CS Undergraduate Advising Who is my assigned
Office's front desk on the first floor of the Iribe Center (1000 level, not ground floor) at least five academic advisor?
minutes prior to your meeting time.
Zoom Meetings
Have your 9-digit University ID number available for virtual identity confirmation.
https://undergrad.cs.umd.edu/academic-advising 2/54/12/25, 2:50 AM Academic Advising | Undergraduate Computer Science at UMD
Review your degree audit via UAchieve (https://uachieve.umd.edu/) prior to attending your
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
session. Take ownership of your education--understanding CS coursework and requirements can
help you make timely progress on your degree! Knowing your requirements will also facilitate a
productive conversation with advisors.
Be sure to have a completed 4 year plan (electronic copy is OK) for your advising appointment.
If you scheduled your appointment via Zoom please confirm your advisor's preference to join the
meeting. You may be asked to wait until the meeting is unlocked, or you may be directed to wait in the
main Zoom room until you are asked to join a breakout room. We ask that you wait patiently until we
are ready to meet. Most likely, there will be another appointment before and after yours. To protect
privacy, only one student per appointment is allowed in the Zoom space.
During your video session, please be aware of the following expectations:
Limit the amount of noise, distractions, and interruptions in the background
Check the background area of your meeting location as this is a professional meeting
Close all unnecessary software on the computer, turn off notifications, and ensure your
computer is fully charged
Test run your microphone, speakers, and webcam and make sure that you can hear, be heard,
and are well-lit
Online Advising Best Practices and Guidelines
If you need to cancel your appointment, you can do so via TerpEngage.
(https://terpengage.umd.edu/community/s/) We ask that you do so 48 hours in advance, so we
can make that appointment available to another student.
If you forgot to bring your academic plan to the meeting, please work with your advisor to send
your plan at a later date.
Please pay attention to any announcements from the UMD Alert System (https://alert.umd.edu/)
regarding school closures and any other on-campus emergency. When in doubt, please check
your Terpmail (https://terpmail.umd.edu/)!
https://undergrad.cs.umd.edu/academic-advising 3/54/12/25, 2:50 AM Academic Advising | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/academic-advising 4/54/12/25, 2:50 AM Academic Advising | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
https://undergrad.cs.umd.edu/academic-advising 5/5

================================================================================
Filename: Exchange_Student_Info.pdf (Subtopic: Miscellaneous)
================================================================================

4/12/25, 3:16 AM Exchange Students | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Exchange Students
If you intend to take Computer Science (CMSC) courses at the University of Maryland as a part of an exchange program, please keep in
mind the following information:
You must meet the prerequisites for the CMSC courses that you are requesting. Please ensure that you provide your academic record
and the syllabi for any courses you may have taken in the past at your home institution. Please note that we ask for up to fifteen
business days to process your initial course requests.
We allow students to register for two CMSC courses per semester, with the possibility of registering for a third CMSC course. Please
note, we cannot guarantee seats will be available in any specific course. You may need to be flexible with your course requests based
upon seat availability.
4 CMSC courses in a single semester is strictly prohibited, regardless of necessity for your home institution.
If you meet the eligibility above, please complete the Fall 2025 Exchange Student Permission Form.
(https://docs.google.com/forms/d/e/1FAIpQLScHQX0XlpaGkxzeHban2KeFKTxgT8blyD3PLvf_lJziFaF5KQ/viewform?usp=preview) You must
use your UMD Terpmail email account in order to access the permissions request form.
If you require assistance, please contact the Undergraduate Advising Office at csadvising-ugrad@umd.edu (mailto:csadvising-
ugrad@umd.edu)
https://undergrad.cs.umd.edu/exchange-students 1/24/12/25, 3:16 AM Exchange Students | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/exchange-students 2/2

================================================================================
Filename: CS_Research_Slides.pdf (Subtopic: CS_Research)
================================================================================

COMPUTER SCIENCE
HONORS & RESEARCH
DAVE LEVIN
ASST PROF & CHAIR OF CS HONORSCOMPUTER SCIENCE HONORS
Departmental honors program
GOALS Give you opportunities to
try out research
Set you up to get into a great
grad school (if you so choose)
Help create a network of you so
you can do great things togetherCOMPUTER SCIENCE
RESEARCHWHAT IS CS RESEARCH?
CS The study and application
of computing
RESEARCH Asking and answering
+
unsolved questions
CS RESEARCH Doing things with computers
that no one has done beforeSOME EARLY CS RESEARCH QUESTIONS
What is possible to compute?
P = NP?
What is efficient to compute?
How much data can we store?
Big data
How much data can we search?
How can computers communicate?
Cloud
How can computers parallelize?
computing
How can we program networks?WHAT KIND OF RESEARCH IS THIS?
What is the structure of social networks?
Which articles are “fake news”?
Is it possible to see through walls?
Can we predict a movie’s opening box office revenue?
How do people watch TV?
Can we protect free speech in oppressive regimes?
THESE ARE ALL CS PROBLEMS, TOO!WHAT IS THE STRUCTURE OF SOCIAL NETWORKS?
Most social networks are
scale-free graphs (hub-like core)
CS can answer this in a way
sociology could not: at scaleIS IT POSSIBLE TO SEE THROUGH WALLS?
Yes, by treating it as a
wireless networking problemCAN WE PROTECT FREE SPEECH?
With peer-to-peer networking,
route around online censors
Avoid countries that attack TorSOME RESEARCH FROM UMD
HAL DAUMÉ III Can computers learn language
through interaction?
MARINE CARPUAT
Can computers be multilingual?
Can software extend a
BOBBY BHATTACHARJEE
phone’s battery life?
FOSTER, HICKS,
How do we build software
that is secure and correct?
DAVID VAN HORN
YIANNIS ALOIMONOS Can robots learn to cook
by watching?SOME RESEARCH FROM UMD
TOM GOLDSTEIN How can we optimize machine
learning and cloud computing?
How does genetic variation
ZIA KHAN
lead to human-specific traits?
NEIL SPRING How does weather affect
Internet connectivity?
MICHELLE MAZUREK What are the human factors
of security?
JOHN DICKERSON Can better algorithms lead to
more efficient kidney exchanges?TRADITIONAL AREAS OF CS RESEARCH
Artificial Intelligence High-perf. computing
AR & VR HCI
Big Data Numerical analysis
Comp-bio Programming languages
Computer systems Scientific computing
Computer vision Security
Data science Software engineering
Databases Theory
GraphicsWHERE IS CS RESEARCH GOING?
Many areas are converging on users
Originally
PL Can we make a language with feature X…?
What are the right features to help users…?
Recently
GFX Can we realistically render Y…?
How can we make a user experience more immersive?
NET Can we make a protocol resilient to failure?
Can we make a protocol resilient to manipulation?
DB Can we store and retrieve data efficiently?
Can we help users understand data provenance?WHERE IS CS RESEARCH GOING?
Computing is becoming ubiquitous
IOT
MOBILE
CARSINSTEAD OF ASKING
WHERE IS CS RESEARCH GOING?
ASK YOURSELF
WHAT ARE THE PROBLEMS THAT NEED SOLVING?
THEN TAKE CS RESEARCH THERE.
THE FUTURE OF CS IS INTERDISCIPLINARY.
… Economics Law Music Language Math Sociology …CS HONORS
APPLYING AND GRADUATINGAPPLYING TO CS HONORS
HONORS.CS.UMD.EDU
Describe your research interests
Many grad students aren’t 100%
sure what their research interests are!
Just talk about what excites you
You do NOT need to propose
a specific research topic
Identifying a good research problem
is the last thing you learn in a PhDGRADUATING WITH CS HONORS
≥3.50 CS &
1 Maintain a good GPA
≥3.25 All
H-option or
2 Take an advanced class
Grad class
3 Take the Honors Seminar CMSC 396H
4 Do research with faculty CMSC 499
Your
5 Write an honors thesis
contributionCMSC 396H : HONORS SEMINAR
One-credit class to introduce you
to CS research and to faculty researchers
What is research?
How do you perform research
effectively and ethically?
What kind of research do our
CMSC faculty do?
Gain some experience doing
a small research project.CMSC 499 : INDEPENDENT STUDY
Typically 3-credit class in which you do
research with a faculty member
Test the waters of research!
You need to initiate this by talking
to the professors
CMSC 396H is a great first step;
so is taking the prof’s 400/600/700s
What ultimately leads to publications
and recommendation lettersLET’S GO TO
GRADUATE SCHOOLWHY GRAD SCHOOL?
What does having a PhD mean?
THE Identify a new problem
ABILITY
Solve a problem in a novel way
TO
Evaluate the solution
Communicate convincingly:
why the problem matters
why your solution is better
= Intellectual freedom that’s needed
at Startups and in AcademiaHOW TO GET INTO A GREAT GRAD SCHOOL?
BARE
Good grades;
MINIMUM
Good GRE scores
GOOD
Strong recommendation letters
CHANCES
from research-active faculty, about research
GREAT
Publication in a reputable venue
CHANCES
(Extra bonus as first author)
ROCK
Give an excellent presentation of the work
STAR at the conferenceWHEN SHOULD YOU PREP FOR GRAD SCHOOL?
Junior Senior
Fall/Spring Summer Sep Oct Dec
Apply for
Finish paper
NSF
GRFP
Find a prof to work with
Submit paper
Come up to speed
Optimistic
Perform your research Apply for grad school
Rec letters (required)
Publication (ideal)WHEN SHOULD YOU PREP FOR GRAD SCHOOL?
Junior Senior
Fall Spring Summer Sep Oct Dec
Apply for
Submit paper
NSF
GRFP
Find a prof to work with
Present paper
Come up to speed
Rock Star status
Perform your research Apply for grad school
Rec letters (required)
Publication (ideal)CS HONORS IS ABOUT
GETTING YOU TO EXPLORE NEW OPTIONS
TRY RESEARCH (YOU MIGHT LOVE IT)
DO IT EARLY ENOUGH
TO NOT CLOSE THE DOOR ON A CAREER IN RESEARCH
SEEK OUT OTHER CHALLENGES, TOO
…, STARTUP SHELL, SANDBOX, CSEC, …MEET YOUR FELLOW STUDENTS
KATURA EMILY MATT
HARVEY KOWALCZYK MYERS
SYSTEMS SECURITY SOFTWARE TESTING COMPUTATIONAL BIOLOGY
RAMA IAN
PADMANABHAN SWEET
INTERNET MEASUREMENT PROGRAMMING LANGUAGESCHALLENGE YOURSELF WITH
RESEARCH & CS HONORS
HONORS.CS.UMD.EDU
DAVE LEVIN
ASST PROF & CHAIR OF CS HONORS
DML@CS.UMD.EDU

================================================================================
Filename: CS_Research_Info.pdf (Subtopic: CS_Research)
================================================================================

4/12/25, 3:07 AM Research with Professorial Faculty (CMSC499A) | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Research with Professorial Faculty
(CMSC499A)
An important component of the undergraduate major in Computer Science is research. Undergraduate research prepares students for the
demands of both graduate school and the job market. Research opportunities allow students to apply what they have learned in their
lower-level and upper-lever courses in a variety of ways. Research opportunities also allow for students to not only see, but understand,
how the Computer Science faculty members engage in their work outside of the classroom. For a comprehensive overview of the research
process in CS, please review this CS Honors slide deck (https://www.cs.umd.edu/~dml/honors/what-is-cs-honors.pdf) created by Dave
Levin, Assistant Professor and Chair of CS Honors.
The Department of Computer Science encourages all of its students to engage in research; ideally, this type of project should epitomize
the mission of the undergraduate major. In order to promote student interest and activity in research areas of the field, the department
offers students the ability to complete a research project for credit by taking CMSC 499A. A student may engage in research by either
serving as an assistant to an ongoing project that has been initiated by a faculty member, or he or she may initiate his or her own research
project with a faculty sponsor. Students are expected to have completed CMSC330 / CMSC351 prior to taking CMSC499A.
https://undergrad.cs.umd.edu/research-professorial-faculty-cmsc499a 1/34/12/25, 3:07 AM Research with Professorial Faculty (CMSC499A) | Undergraduate Computer Science at UMD
Completing an Independent Research Project (CMSC 499A) differs from completing an Independent Study (CMSC 498A); in the latter,
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
students are asked to work with a faculty member on a subject of study in a tutorial fashion. The Independent Research Project requires
that students write a preliminary proposal explaining what they expect to accomplish during the course of their research project.
With the assistance and guidance of their faculty sponsors, students will accomplish their proposed research and write a research paper or
produce a website or other product detailing the work that they have completed over the course of the semester.
How to Complete Independent Research:
1. Schedule a meeting with a CS faculty member regarding sponsorship for Independent Research.
2. If the faculty member agrees to become your sponsor, determine the scope of your research and outline the work that you will be
doing throughout the semester. At this time, the faculty member should explain to you how your work will be evaluated.
3. Fill out an Application for Undergraduate Independent Research form [PDF]
(/sites/undergrad.cs.umd.edu/files/images/uploads/2021/08/CMSC499A%20Application_Fall%202019.pdf).
4. Submit your application to your academic advisor by the first day of the semester.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
https://undergrad.cs.umd.edu/research-professorial-faculty-cmsc499a 2/34/12/25, 3:07 AM Research with Professorial Faculty (CMSC499A) | Undergraduate Computer Science at UMD
College Park, MD 20742
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/research-professorial-faculty-cmsc499a 3/3

================================================================================
Filename: CS_Research_Application.pdf (Subtopic: CS_Research)
================================================================================

CS Undergraduate Advising Office
First Floor, The Brendan Iribe Center for Computer
Science & Engineering
P: 301-405-2672 | E: ugrad@cs.umd.edu
Application for Undergraduate Independent Research (CMSC499A)
Name:____________________________________________________ Current Major(s):______________________________________
UID:______________________________________________________ Email Address:_________________________________________
Phone Number:_________________________________________ Anticipated Graduation Term & Year:_______________
CS Advisor:______________________________________________ Signature:_______________________________________________
Course:__CMSC499A___ Term:_____________________ Number of Credits: (1-3)_______________________
The Undergraduate Independent Research course (CMSC499A) enables you to receive credit for conducting re-
search under the guidance of a faculty advisor.
IMPORTANT: CMSC499A is intended to primarily focus on research – if you are interested in learning anew
topic not currently covered in our courses through independent study, please register forCMSC298A or
CMSC498A.
Before filling out this form, you must contact a faculty member who will be willing to supervise you. The research
project you pursue can be provided by the advisor or could be initiated by you. Together with your faculty spon-
sor you must agree on a research plan that contains the elements required below. This application form acts as a
contract between you and the faculty sponsor to ensure that both parties meet the expectations that were set out
during your initial meeting.
The completed form, signed by both you and the faculty sponsor, must be returned by the first day of classes of
the relevant semester to your assigned CS Academic Advisor. You may email your advisor with questions.
IMPORTANT: Each credit hour (Carnegie unit) corresponds to at least 3 hours of work per week for the
duration of the semester. The study plan must match this level of effort.
Grading procedure (To be filled by the faculty sponsor) Include information about how the grade in this
class will be assigned.Plan of study (300-500 words, to be filled by student in consultation with faculty sponsor)
Deliverable
What will be the outcome of your work at the end of the semester? Most typically this is a short scientific paper or re-
port detailing your research and findings, though other products may also be acceptable.
Faculty Sponsor’s Name: Phone Number:
Faculty Sponsor’s Date:
Signature:
For Office Use Only
GPA:___________________________________________ Permission Granted:_________________________
Credits Earned:_______________________________ Emailed:_______________________________________

================================================================================
Filename: STIC_Info_Page.pdf (Subtopic: STIC)
================================================================================

4/12/25, 2:48 AM Student Initiated Courses
UNIVERSITY OF MARYLAND
enroll catalog faq team apply now →
UNIVERSITY OF MARYLAND
Design, develop, & teach your own
course today.
The Student Initiated Courses (STICs) program helps students lead their own courses under the guidance of a faculty advisor.
apply now → view catalog
We've had STICs in...
BMGT - Business and Management
BSCI - Biological Sciences
CMSC - Computer Science
AASP - African American Studies
ENST - Environmental Science & Technology
IDEA - The Academy for Innovation & Entrepreneurship
GVPT - Government and Politics
INST - Information Studies
ENME - Mechanical Engineering
MATH - Mathematics
BCHM - Biochemistry
ENSP - Environmental Science & Policy
MUSC - Music
AART - Art
If you're interested in teaching a STIC in a department not listed here,
reach out to us and we'll see if we can make it work!
19 65+ 400+
active courses facilitators since we started students
https://stics.umd.edu/index.html 1/44/12/25, 2:48 AM Student Initiated Courses
about us.
The Student Initiated Courses (STICs) program at The University of Maryland gives students the opportunity to design, develop, and teach courses
on a variety of subjects under the guidance of a faculty advisor. We are a student-run experimental program with support from the Academy for
Innovation and Entrepreneurship out of the Office of the Provost. Initial schools and departments at UMD who have partnered with STICs include
Computer Science, Business and Management, Mathematics, Music, Environmental Science, and more to come.
apply now.
Facilitating a STIC is one of the most rewarding learning opportunities available to undergrads. Any student interested in teaching an undergraduate
course can apply to teach an official 1-2 credit class. You and your faculty advisor come up with the course topic, design all the material and
assignments, and decide how to deliver the content to the class. Visit apply now to get started.
https://stics.umd.edu/index.html 2/44/12/25, 2:48 AM Student Initiated Courses
https://stics.umd.edu/index.html 3/44/12/25, 2:48 AM Student Initiated Courses
contact us.
Reach out to us at stics@umd.edu
© Copyright 2018 STICs UMD
https://stics.umd.edu/index.html 4/4

================================================================================
Filename: STIC_Apply_Page.pdf (Subtopic: STIC)
================================================================================

4/12/25, 2:59 AM Student Initiated Courses
UNIVERSITY OF MARYLAND
enroll catalog faq team apply now →
Guidelines
Applications to teach a STIC in Fall 2025 are now closed. If you are still interested in teaching a course, contact us at stics@umd.edu and we'll see
what we can do!
Who can teach?
Any UMD student (both undergraduate and graduate) can apply to teach.
Teaching a STIC is hard work, and we want you to make sure you’re up for the task. Once you become a STICs facilitator, you will be added the STICs
Slack and can communicate with other facilitators for tips and questions!
When should I apply?
Applications to teach a STIC open early the semester before and typically close in mid- to late- October or February. We update our website with the
current application form above.
Important Note: We now require all new & relist applications to include a copy of the Student-Faculty Agreement signed by the faculty advisor and
facilitators.
Submitting a draft syllabus to stics@umd.edu is recommended. Check out our syllabus template for help! Applicants looking to relist STICs should
also contact their department and the STICs board as soon as possible. Please reach out to stics@umd.edu for more information.
Important Notes
Depending on the department, Faculty advisors may only be able to advise up to 1 STIC at a time.
Depending on the department, students may be restricted from acting as a TA for another course while facilitating a STIC.
Depending on the department, the student facilitator role may be a volunteer position, paid position, or a study credit opportunity.
Before proposing a STIC associated with College of Behavioral and Social Sciences, please refer to the BSOS Internal Guidelines for STIC
Courses.
Please reach out to stics@umd.edu with any questions about the application process!
How do I apply?
Step 1: Plan Your Topic
Think about what class you would want to create. Make sure that your course topic is both related to your major and unqiue (check that no current
course covers your course topic). We advise you to discuss your course topic with professors, so you can get feedback before you move forward with
your application. Finally, Create a one paragraph description of your course where you include a title, course objectives, and any other relevant
information. This is the information you want to use to convince someone the course is needed and relevant.
Step 2: Find a Faculty Advisor
Faculty advisors are required for every STIC. You must find a faculty advisor that is part of the department you want your class offered in (i.e., an ARTT
course would have an ARTT faculty advisor). Your faculty advisor should be someone who trusts you and would feel comfortable supervising and
taking responsibility for your class. You can find an outline of what to look for in a faculty advisor here.
Once you have found an advisor, review the Student-Faculty Agreement with him/her. Both you and your faculty advisor must sign this document,
and you are responsible for emailing a copy of the signed document to stics@umd.edu as part of your application.
https://stics.umd.edu/apply.html 1/24/12/25, 2:59 AM Student Initiated Courses
Step 3: Create a Full Syllabus
After finding a faculty advisor, develop a syllabus including a schedule and course outline. Think about what class you would want to create, and make
a 15 week schedule for it. We recommend outlining sample quizzes, homeworks, and/or tests at this time to help you adjust the scope of your class if
necessary. Make sure to discuss your syllabus with your faculty advisor. Head over to our catalog and check our some existing syllabi (preferably from
your department or ones “like” yours) as examples. In addition, we also have a syllabus template you may follow.
Step 4: Reach Out to STICs
Message us via email at stics@umd.edu. Please share with us the syllabus and class title. We will help you through the next step (finding a faculty
advisor), review your materials, and advise you on anything that we think will make your class more likely to be approved by the department.
Step 5: Review + Iterate
You will need to iterate until your faculty advisor is satisfied with the syllabus.
Step 6: Department Approval
Now you're ready to apply to get department approval for your course!
contact us.
Reach out to us at stics@umd.edu
© Copyright 2018 STICs UMD
https://stics.umd.edu/apply.html 2/2

================================================================================
Filename: STIC_FAQ_Page.pdf (Subtopic: STIC)
================================================================================

4/12/25, 2:48 AM Student Initiated Courses
UNIVERSITY OF MARYLAND
enroll catalog faq team apply now →
FAQ
for everyone.
Who can apply to teach?
Any student at UMD College Park may apply! Each course may be facilitated by 1 to 3 students.
How are student facilitators compensated?
It depends on the department the class falls under. Some departments may pay facilitators as TAs, some may require it to be volunteer service, and
some may offer credit as a sort of independent study.
What should I do if I want to teach?
Visit the apply page.
Who handles grading/grade disputes?
While the student-facilitators may handle intermediate grading on assignments like projects and quizzes, the instructor of record will be the one
submitting final grades. The instructor of record also handles any grade disputes that escalate past a certain point.
What are the responsibilities of a faculty advisor?
For an informal summary of the role, check out this document.
How many credits are STICs?
STICs are offered from 1 to 2 credits.
How many STICs can I take?
As many as you want! Keep in mind that STICs may or may not help you for major requirements.
for administrators.
How do course numbers work for STICs?
This is up to the department. Most departments are using special topics numbers (as they are perfect for one-off courses like this). Some other
departments have created other numbers.
IMPORTANT NOTE: Once a course is created, things like the grading policy (pass/fail vs. standard letter grades) cannot be changed. In other words, if
there is a course from 2009 that is P/F and a STIC wants to use that course number, it MUST be P/F.
How should these courses be inputted into SIS?
In a typical STIC, the student facilitator(s) will be the primary one(s) interacting with the students in the class while the faculty advisor works behind
the scenes with the student facilitator(s). Therefore, the faculty advisor (who is the course’s instructor of record) should not be evaluated by the
students in the course evaluations. If not assigned properly, course evaluations meant for the student facilitator(s) will instead be attached to the
https://stics.umd.edu/faq.html 1/24/12/25, 2:48 AM Student Initiated Courses
instructor of record, which could affect that faculty member’s teaching record for APT and also erroneously affect department averages.
To avoid these situations, IRPA has outlined these options as proper ways of assigning course evaluations in STICs:
No course evaluation for anyone for that class, or
If course evaluations are desired, students should be listed as "Lab/Discussion Leaders" and should receive course evals in that role. The faculty
member is the only person who should ever be listed as the “Instructor of Record” and should not receive a course eval for the STIC. (In general,
a faculty member who is the instructor of record for a course can only receive a course eval if students in the course have seen the instructor of
record enough to evaluate them based on the list of course eval questions here. In STICs that are primarily student-led and student-taught, this
is not going to be the case.)
Also when STICs are input into SIS, 100% of the teaching load should always be assigned to the faculty advisor. Under no circumstances should a
student ever be assigned any teaching load at all in SIS, and under no circumstances should a student ever be the "Instructor of Record” or "Other
Instructor" in SIS. Instead, student facilitators should be listed as “Lab/Discussion Leaders,” which still allows them to be evaluated through course
evaluations as mentioned above.
What happens if a student facilitator becomes unable to teach a course?
Hopefully the STIC has two facilitators so the other can take over. However, if this does not happen, the responsibility falls on the faculty advisor to
decide what happens to the course + students.
contact us.
Reach out to us at stics@umd.edu
© Copyright 2018 STICs UMD
https://stics.umd.edu/faq.html 2/2

================================================================================
Filename: STIC_Current_Catalog.pdf (Subtopic: STIC)
================================================================================

4/12/25, 2:58 AM Student Initiated Courses
UNIVERSITY OF MARYLAND
enroll catalog faq team apply now →
Catalog
Filter by course code (e.g. cmsc389e)
view all astr cmsc math sphl tlpl spring 2025
ASTR288T In this course, you will learn the foundations of several popular forms of amateur
astrophotography, along the way gaining practical astronomy knowledge which you can apply in
Introduction to Astrophotography your free time, no matter what career you pursue.By the end of this course, you will know
Credits: 1 important regions of the night sky, how to photograph a wide variety of celestial objects, and how
Facilitators: Chaitanya Garg, Matthew Prem to view and analyze astro images taken from professional sources.
Advisor: Elizabeth Warner
Website
CMSC388J Explores tools such as Python, Flask, Django, MongoDB, Svelte, and React
Building Secure Web Applications
Credits: 1
Facilitators: Chuck Peterson, Nikita Krupin
Advisor: Michael Alan Marsh
Website
CMSC389E Explores the fundamentals of digital logic design using Minecraft's Redstone. Using the low-level
and intuitive visualization of circuitry Redstone provides, you will create a series of projects that
Digital Logic Design through Minecraft apply principles of digital logic design learned in class.
Credits: 1
Facilitators: Amrit Magesh, Minsi Hu
Advisor: Cliff Bakalian
Website
CMSC389O Technical interviewing is a critical skill for acquiring internships and jobs. Students will gain a
comprehensive, practical introduction to technical interviews. Students will be introduced to basic
The Coding Interview topics such as Big O and String Manipulation and later move into more complex topics such as
Credits: 1 Graphs and Dynamic Programming. Most in-class time will be spent on mock interviews to give
Facilitator: Emmanuel Bautista real interview practice. The course facilitators are experienced in interviewing and have received
Advisor: Tom Goldstein internship/job offers from companies like Meta, Optiver, Bloomberg, Amazon, Apple, Microsoft,
Website Databricks, Capital One, and more.
CMSC389P Product Management is an interesting intersection of technology and business that students are
given the opportunity to learn more about in this class. Students are introduced to the tools,
Mastering the PM Interview techniques, and resources to nail their PM (Product Management) interviews. We'll be providing
https://stics.umd.edu/catalog.html 1/34/12/25, 2:58 AM Student Initiated Courses
Credits: 1 hands-on practice with PM specific topics including product design, analytical, and case questions.
Facilitators: Angelyn Pham, Tushar Garg By the end of the class, you should be acing all your PM interviews!
Advisor: Huaishu Peng
Website
CMSC398L This course covers most of the basic techniques and algorithms that are used in competitive
programming. Topics include C++ STL, greedy, dynamic programming, divide and conquer, graph
Introduction to Competitive Programming algorithms, and data structures. Students will learn different algorithmic techniques and apply
Credits: 1 these concepts to solve interesting programming problems in practice.
Facilitators: Cheng-Yuan Lee, Kelin Zhu, Max
Wang
Advisor: Laxman Dhulipala
Website
CMSC398M An exploration into the world of Figma! Figma is a popular collaborative design tool used by many
developers for brainstorming, proof of concepts, and website/application design. In this course, we
Introduction to Product Design with Figma will be exploring the various capabilities of Figma, and how we can create a website or mobile
Credits: 1 application from a design made on Figma. Students will learn principles of design, create mockups,
Facilitators: Beatrice Chung, Amber Chen and build their own website/mobile app that will look great for resumes and portfolios.
Advisor: Clifford Bakalian
Website
CMSC398N This course will introduce students to the different aspects of ethics within Computer Science.
There will be 14 different topics, each one focusing on a different issue regarding ethicsin the tech
Ethics in Computer Science industry.Students will learn what to do in these situations, understand how these issues impact
Credits: 1 society, and participate in in-class discussions about these topics.After taking this course students
Facilitators: Anushka Anand, Chayanika should be able to recognize these issues in the real world and be able to use their knowledge to try
Sinha, Nicholas Farber and better the field.
Advisor: Elias Gonzales
Website
CMSC398R An introduction to exploiting common vulnerabilities in compiled applications. Topics include an
overview of C, intro to x86 assembly, buffer overflows on stack and heap, format string bugs, heap
Binary Exploitation exploitation, and other special topics (kernel/browser/blockchain). Students will be able to write
Credits: 1 exploits for all the bugs learned in class, and secure their own applications.
Facilitators: Edward Feng, Avery Parker,
Andrei Kotliarov, Hari Kailad
Advisor: Tudor Dumitras
Website
CMSC398W Provides a broad overview of many common and useful tools, like the command line, Git,
debuggers, build systems, and more. Through a hands-on approach, you will be introduced to a
Practical Tools for Efficient Development variety of tools and techniques that can immediately be applied to everyday problems. We aim to
Credits: 1 provide students with material that improves their computing ecosystem literacy and increases
Facilitators: Karan Jain, Mohammad Durrani their efficiency as a developer.
Advisor: Christopher Kauffman
Website
MATH299G This course develops the theory of formal power series and generating functions with extensive
applications. Topics covered include, but are not limited to: solving recurrences with generating
Generating Functions functions; ordinary, exponential, and dirichlet generating functions; multi-variable generating
Credits: 1 functions; stirling numbers and bell numbers; card games; graph counting, the Snake Oil method;
Facilitator: Rishi Cherukuri domination polynomials and chromatic polynomials; probability generating functions.
https://stics.umd.edu/catalog.html 2/34/12/25, 2:58 AM Student Initiated Courses
Advisor: Qendrim Gashi
Website
MATH299R In this course, we will overview several of the prevailing philosophical viewpoints that have
emerged. These perspectives are often at odds with each other, so this course is designed to help
The Philosophical Foundations of Math you develop your own perspective about these topics. This course will require both mathematical
Credits: 1 and philosophical discussion, as the philosophy will inform the mathematical systems we develop,
Facilitator: Rowan Weiss and the consequences of the mathematical systems we develop will in turn inform our philosophy.
Advisor: Dana Grosser-Clarkson We will be talking about the math arising from philosophical ideas as much as we will be talking
Website about the philosophical ideas themselves.
SPHL276 This course provides a comprehensive foundation of how colonial legacies continue to shape
global health systems and medical practices. We will critically engage with the concept of 'the
Decolonizing Medicine: Steps to Actionable White body' as the standard in medical training, explore the consequences of the historical
Change context underpinning colonial medicine, and interrogate neocolonial dynamics in contemporary
Credits: 1 global health efforts. Designed for students interested in careers in medicine, public health, or
Facilitators: Shree Bhattacharya, Moumita health policy, this course will challenge students to rethink the ethical and epistemological
Afrin frameworks that underlie modern healthcare.
Advisor: Dina Borzekowski
Website
TLPL488N Have you ever made a New Year’s Resolution just to fall into the same old habits weeks later? The
goal of this course is to explore the idea that students’ habit building is much simpler than just
The Psychology of Habit Building in freeing up more time or working harder. Throughout the semester, you will learn about how
Education: Creating and Sustaining Positive students can be taught to build consistent long- term habits and apply these skills to improve
Learning Behaviors learning outcomes. The course will also delve into student motivations in habit building to work
Credits: 1 towards personal goals in their health, career, or other endeavors.
Facilitator: Kian Mostoufi
Advisor: Sarah Henson-Darko
Website
contact us.
Reach out to us at stics@umd.edu
© Copyright 2018 STICs UMD
https://stics.umd.edu/catalog.html 3/3

================================================================================
Filename: STIC_Team_Page.pdf (Subtopic: STIC)
================================================================================

4/12/25, 2:59 AM Student Initiated Courses
UNIVERSITY OF MARYLAND
enroll catalog faq team apply now →
Team
Applications are open for STICs E-Board!
Want to get involved with STICs? The Student Initiated Courses (STICs) Student Board is looking for Marketing Coordinator.
The Marketing Coordinator is responsible for outreach to increase the visibility of STICs in order to increase the number of students and
facilitators involved in the program. This includes managing social media accounts, email lists, and more.
Email us at stics@umd.edu with your name, resume, and position of interest to apply now!
Below is our leadership team for the Fall 2024 semester.
Feel free to reach out to us with questions and we'll connect you with the right person!
Dean Chang
Advisor
https://stics.umd.edu/team.html 1/44/12/25, 2:59 AM Student Initiated Courses
Lance Uymatiao
Co-Executive Director
Riya Thapar
Co-Executive Director
https://stics.umd.edu/team.html 2/44/12/25, 2:59 AM Student Initiated Courses
Jacob Lin
Webmaster
Ananya Dandi
Class Coordinator
contact us.
Reach out to us at stics@umd.edu
https://stics.umd.edu/team.html 3/44/12/25, 2:59 AM Student Initiated Courses
© Copyright 2018 STICs UMD
https://stics.umd.edu/team.html 4/4

================================================================================
Filename: CS_Independent_Study_Application.pdf (Subtopic: Independent_Study)
================================================================================

CS Undergraduate Advising Office
First Floor, The Brendan Iribe Center for Computer
Science & Engineering
P: 301-405-2672 | E: ugrad@cs.umd.edu
Application for Undergraduate Independent Study(CMSC498A/CMSC289A)
Name:____________________________________________________ Current Major(s):______________________________________
UID:______________________________________________________ Email Address:_________________________________________
Phone Number:_________________________________________ Anticipated Graduation Term & Year:_______________
CS Advisor:______________________________________________ Signature:________________________________ _______________
Course:__ ___ Term:_____________________ Number of Credits: (1-3)_______________________
_____________
The purpose of an independent study (CMSC498A / CMSC298A) is to allow advanced undergraduates to pursue
an individualized course of study. In essence, you would be designing your own course in order to learn, under
t I hMeP sOuRpeTrAvNisTio: n of a faculty member, topics not already covered in other courses offered by our department.
CMSC298A and CMSC498A are not intended to primarily focus on research – if you are interested
in independent research, please register for CMSC499A. Before filling out this form, you must contact a faculty
member who is working in (or knowledgeable about) the particular field within which you want to conduct your
independent study. Together with your faculty sponsor you must agree on a study plan that contains the
elements required below.
This application form acts as a contract between you and the faculty sponsor to ensure that both parties meet the
expectations that were set out during your initial meeting.
The completed form, signed by both you and the faculty sponsor, must be returned by the first day of classes of
the relevant semester to the Computer Science Undergraduate Advising Office or your assigned Academic
AIMdvPiOsoRrT. ANT: Each credit hour (Carnegie unit) corresponds to at least 3 hours of work per week for the
duration of the semester. The study plan must match this level of effort.
Grading procedure (To be filled by the faculty sponsor) Include information about how the grade in this
class will be assigned.Plan of study (300-500 words, to be filled by student in consultation with faculty sponsor)
Deliverable
What will be the outcome of your work at the end of the semester? Most typically this is a short scientific paper or re-
Faculty Sponsor’s Name: Phone Number:
Faculty Sponsor’s Date:
Signature
For Office Use Only
GPA:___________________________________________ Permission Granted:_________________________
Credits Earned:_______________________________ Emailed:_______________________________________

================================================================================
Filename: CS_Independent_Study.pdf (Subtopic: Independent_Study)
================================================================================

4/12/25, 3:15 AM Independent Study (CMSC498A) | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
Independent Study (CMSC498A)
In an ongoing quest to provide our undergraduates with innovative and challenging courses of study, the Department of Computer
Science offers students an opportunity to pursue fields of study that are not currently a part of the Computer Science Undergraduate
curriculum. We encourage all students to consider taking part in an independent study in order to broaden the scope of their knowledge in
this ever-changing field. The purpose of an Independent Study (498A) is to allow advanced undergraduates to pursue an individualized
course of study. Generally, a student interested in completing an independent study contacts a faculty member who is working in (or
knowledgeable about) a particular field in which a student has developed an interest. The student then asks the faculty member to help
him or her complete the Independent study. More often than not, a student works on an independent study with a faculty member who is
already familiar with his or her class work. Once the student and faculty member decide on the course of study for the semester, it
becomes the student's responsibility to set up a meeting schedule with his or her faculty sponsor; it is also the student's responsibility to
maintain contact with his or her faculty sponsor throughout the semester. It is the faculty member's responsibility to make sure that he or
she is available to meet with his or her student(s). The student fills out an application form, writes a short description of what will be
covered during the semester, and has the faculty sponsor sign the application form. The application form acts as a contract between the
faculty sponsor and student to ensure that both parties meet the expectations that are set out during their initial meeting. Students are
expected to have completed CMSC330/ CMSC351 prior to taking CMSC498A. CMSC298A is an option for those who have not, but please
note that CMSC298A does not meet a CS major requirement.
https://undergrad.cs.umd.edu/independent-study-cmsc498a 1/34/12/25, 3:15 AM Independent Study (CMSC498A) | Undergraduate Computer Science at UMD
How to Complete an Independent Study:
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
1. Schedule a meeting with a CS faculty member regarding sponsorship for independent study.
2. If the faculty member agrees to become your sponsor, determine the scope of your independent study and outline the work that you
will complete throughout the semester. At this time, the faculty member should explain to you how your work will be evaluated.
3. Fill out an Application for Undergraduate Independent Study form [PDF]
(/sites/undergrad.cs.umd.edu/files/images/uploads/2021/08/CMSC498A_CMSC298A%20Application_Fall%202019.pdf).
4. Submit your application to your academic advisor by the first day of the semester.
Contact Our Office
CS Undergraduate Office (https://undergrad.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2672 (tel:3014052672)
Part of the
Department of Computer Science (https://www.cs.umd.edu)
Brendan Iribe Center for Computer Science and Engineering
University of Maryland
8125 Paint Branch Drive
College Park, MD 20742
 (Phone) (301) 405-2662 (tel:3014052662)
Web Accessibility (https://www.umd.edu/web-accessibility) | Privacy Notice (https://umd.edu/privacy-notice) | Login (/user)
https://undergrad.cs.umd.edu/independent-study-cmsc498a 2/34/12/25, 3:15 AM Independent Study (CMSC498A) | Undergraduate Computer Science at UMD
UNIVERSITY OF MARYLAND (HTTPS://UMD.EDU)
(https://www.cs.umd.edu)
https://undergrad.cs.umd.edu/independent-study-cmsc498a 3/3

